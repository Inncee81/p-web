<!DOCTYPE html>
<html lang="en-US">
 <head id="Head">
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <title>
   Inside DOD
  </title>
  <meta content="Official website for U.S. DEPARTMENT OF DEFENSE" id="MetaDescription" name="DESCRIPTION"/>
  <meta content="Defense,Department,DoD,Secretary,Deputy Secretary,Joint Chief,United States,Military,Government,Pentagon" id="MetaKeywords" name="KEYWORDS"/>
  <meta content="INDEX, FOLLOW" id="MetaRobots" name="ROBOTS"/>
  <link href="/Resources/Shared/stylesheets/dnndefault/7.0.0/default.css?cdv=900" rel="stylesheet" type="text/css"/>
  <link href="/DesktopModules/ArticleCSDashboard/module.css?cdv=900" rel="stylesheet" type="text/css"/>
  <link href="/Desktopmodules/SharedLibrary/Plugins/Slick/1.9.0/slick.min.css?cdv=900" rel="stylesheet" type="text/css"/>
  <link href="/Desktopmodules/SharedLibrary/Plugins/Bootstrap/css/bootstrap.min.css?cdv=900" rel="stylesheet" type="text/css"/>
  <link href="/Portals/_default/skins/dgov2/skin.css?cdv=900" rel="stylesheet" type="text/css"/>
  <link href="/Portals/_default/Containers/DGOV2/container.css?cdv=900" rel="stylesheet" type="text/css"/>
  <link href="/Portals/1/portal.css?cdv=900" rel="stylesheet" type="text/css"/>
  <link href="/Portals/_default/skins/dgov2/resources/css/dnn.css?cdv=900" rel="stylesheet" type="text/css"/>
  <link href="/Portals/_default/skins/dgov2/resources/css/menu.css?cdv=900" rel="stylesheet" type="text/css"/>
  <link href="/Portals/1/Page-Assets/inside-dod/inside-dod.css?cdv=900" rel="stylesheet" type="text/css"/>
  <link href="/Desktopmodules/SharedLibrary/Plugins/SocialIcons/css/fa-social-icons.css?cdv=900" rel="stylesheet" type="text/css"/>
  <link href="/Desktopmodules/SharedLibrary/Plugins/Skin/SkipNav/css/skipnav.css?cdv=900" rel="stylesheet" type="text/css"/>
  <link href="/desktopmodules/ArticleCS/styles/DefenseGOV2/style.css?cdv=900" rel="stylesheet" type="text/css"/>
  <link href="/Desktopmodules/SharedLibrary/Plugins/ColorBox/colorbox.css?cdv=900" rel="stylesheet" type="text/css"/>
  <link href="/Desktopmodules/SharedLibrary/Plugins/font-awesome5/css/all.min.css?cdv=900" rel="stylesheet" type="text/css"/>
  <link href="/Desktopmodules/SharedLibrary/Plugins/font-awesome5/css/v4-shims.min.css?cdv=900" rel="stylesheet" type="text/css"/>
  <script src="/Resources/libraries/jQuery/03_05_01/jquery.js?cdv=900" type="text/javascript">
  </script>
  <script src="/Resources/libraries/jQuery-Migrate/03_02_00/jquery-migrate.js?cdv=900" type="text/javascript">
  </script>
  <script src="/Resources/libraries/jQuery-UI/01_12_01/jquery-ui.js?cdv=900" type="text/javascript">
  </script>
  <!-- Open Graph Data -->
  <meta content="Inside DOD" property="og:title"/>
  <meta content="https://www.defense.gov/Explore/Inside-DOD/" property="og:url"/>
  <meta content="website" property="og:type"/>
  <meta content="https://media.defense.gov/2020/Apr/22/2002286450/-1/-1/1/200422-D-EX074-001.JPG" property="og:image"/>
  <meta content="U.S. Department of Defense" property="og:site_name"/>
  <meta content="Blogs from around the Defense Department." property="og:description"/>
  <!-- Twitter Card -->
  <meta content="summary_large_image" name="twitter:card"/>
  <meta content="https://www.defense.gov/Explore/Inside-DOD/" name="twitter:site"/>
  <meta content="@DeptofDefense" name="twitter:creator"/>
  <meta content="Inside DOD" name="twitter:title"/>
  <meta content="Blogs from around the Defense Department." name="twitter:description"/>
  <meta content="https://media.defense.gov/2020/Apr/22/2002286450/-1/-1/1/200422-D-EX074-001.JPG" name="twitter:image"/>
  <link href="/Portals/1/favicon.ico?ver=ADgXfcb2rXFS4_X-z2OxJA%3d%3d" rel="SHORTCUT ICON" type="image/x-icon"/>
  <meta content="DMA Public Web" name="host"/>
  <meta content="pubwebhd@defense.gov" name="contact"/>
  <!--[if IE 8 ]><script type="text/javascript">jQuery("html").addClass("ie ie8");</script><![endif]-->
  <!--[if IE 9 ]><script type="text/javascript">jQuery("html").addClass("ie ie9");</script><![endif]-->
  <!--[if IE]><link rel="stylesheet" type="text/css" href="/Portals/_default/skins/dgov2/ie.css" /><![endif]-->
  <!--[if lte IE 8]><script src="/Desktopmodules/SharedLibrary/Plugins/Respond/js/respond.min.js"></script><![endif]-->
  <script src="https://www.google-analytics.com/ga.js">
  </script>
  <script id="_fed_an_ua_tag" src="/Desktopmodules/SharedLibrary/Plugins/GoogleAnalytics/Universal-Federated-Analytics-3.1.js?agency=DOD&amp;subagency=DMA&amp;dclink=true">
  </script>
  <meta content="width=device-width,initial-scale=1" name="viewport"/>
 </head>
 <body id="Body">
  <form action="/Explore/Inside-DOD/" enctype="multipart/form-data" id="Form" method="post">
   <div class="aspNetHidden">
    <input id="__EVENTTARGET" name="__EVENTTARGET" type="hidden" value=""/>
    <input id="__EVENTARGUMENT" name="__EVENTARGUMENT" type="hidden" value=""/>
    <input id="__VIEWSTATE" name="__VIEWSTATE" type="hidden" value="fxliVf/+rgogTlyI4h89+Evz+TMpXC6yg4L+fSPLg+ILie28zzloHInfC1E4jKzaj7ZEAXsvb4WUp5p/MmfNhlzVwqBghO8qv8CUS2KrqC7Ob7wvrJBZw0lhA9jrVOLUmjuAn/SsJwfJpcxHPNpzoWK7h/YxVrk+DkNzIxm+xI7zXT63dJuH01mZ4/GahWFOcf2LdMOuorvtHSH8AGFQOPRX+x3mJfMkUOwNYjAL3PaX2J9tCAUHjMvR0IWHcWGg0O7ysx8BfycFAu/CI5husm1VL8xTan2t7tRxomSQkseOPJavRGYFKg6qRt8eYtBwEpmoq6AhLgvHfk5G7+yVI2mbclCf24mlEcch4TF8STZnw9/wM70aLxttUPlIzJXEGDiQEnb3FBSpU46Y8mX9lqWrNUL8I7/bqdNMG6HlFTKU5MnZlHwPIsUefLkt6EjfpeyMgXN3fdh4IkRNMUwsIo6iqnHdgWv7b3KYsu47OTrXrTvJa9XikWvqa1C0FyOIFTCkGYvVa7mTzUGDgKBAK0vXdudX/nIKWdDvJH5vfaSFHyaVE0h91HHCkSSRFY8PeWnfuxMNvgu/cyfxdxZPBwPCQ0NCet650Bb5bTRbxCIVaNzSr+UiPQlfmxhzK9sjk/oUEGCzw209CfsPNpm/PqXxpzHSQoaj19xXo0nOB4MxQ86K73EMFj6e136UThDVz+NIwkMQGpnUgLjrkQODjsSY2jPCLm0/VUrRqnc8trIbaUlcBqYhOmNlYtbwSWOs0IYJjrroQ4gKBmmMvzEd/dPd2HKiMneUczdRAIwKiDSepfq8rezWLW7qQkmnURgEya9sUNBEvTc6OjUaXHOgIr9UINPissKTk0YjlBrUU1xE7ip1g4SedphLUSUnKbckMaWziwl314iYtD6ZVtPjDytWkfg1kOSsfzmvvjIoA5pAjARTUe3lh25KGrvtE6cxeSkjttaEGHZALZ/n+ssb6pxU+fcRd8clpMtu9k2Yx9J7s/Vs14FM34Oi0JhOwOHuEoh0uyvtlhKigST/nvIf8b7Tw9LrpP8pNsH7UmaAXdd2Fx2zVRiGAvOcxYpGlSdGMcXx0f7U3CfVhLgX5/pXkfq6M6X/Tfc5pSWneNhLL9oKtWuvm2dly1/QovJv4c93/ctYjJb/GvWQ4OKVBGWZUDZ31Krc7wP0In3YC3FkICzBHzv61XWUPIvI3o/wURHMMGx1ns6f80EQJK9/GPIhYoq2A8wLrAmBbMalouJ/x6DVwifchbCaC/sPhkm8hAgRvOqOErCHea6ubkB0ITV77fZLqP1tandFhoCcF/Im0h3j+aLC6a1AbhiGoJwChx+CY7zc6O7Rw4dCiPg1Ii1ec8xkdUds87reQQomNLucHUK775oDFR+qL3YT6n2NBEBma1KNKO1rnoAsl0bvfHly0I9DbuPqTLk/0cLDb7zjTOIKfsy0Z0/DWW1Bbrwdam66oFaAZ6wf+nGV7EeF4rBNVuu7saVoJ31i1UoxqkaSh8IlF+A2hPxN6HCciquGOaVMjHYjMoBZ1ntifTA3xV7Si/AM1NKA4jDsEYLJsEnDVabHlf1wG2bryO4VWKs9xsGWqH9sFyX3JrXqlvxCPzBfkk2KEMF43yS6iEqEgRjvL7RTVDdO43fcS2o2PASl7Rja/HN1bgsgF7t8NlAWzJrQ49FQkehP0nH9oMelRIE0Sy1Wl8dlheOLnBZwsDw0RF/5hx639dY19+L5BN+W2ugyJc62gQ8QerID1GLaanCmtH4sJx+HMF+cRNaWpBPgI8Dr3X56jyC4IHCGtzW90p1J3DIbsXYdxkhrwbcxIltr9Uyksw/vaBC5sYhq/XU6hSl+zYy9MGu7nCSYFJTR0LJ8Wo2xccJ74a2gkGg7nJz8bspWEkILvb8sIQhOsOJf5lymY20tEsMfD26EDUZBA8M9HCABmByDDwlIqAi4OC+qLLeypBDrV+Dzn+WvAtf6ewqGhx0zjnCvEGuuiMU0Xe2jxAlcFwIYycMs/7ASjL24PxXlAcSBuwAMSXuvvdpWUNfx7Oz+YBsUJCRqPR16P0li3oQtCoZYez7CYvZ/TYrDHpQPYN3gx6+Fl9jp8s2resDPguNaZK/khe97bzgAkWxpj3Y+WgGqxOlPkmp3KYuEblAgBulZfNNq83iAFdQuTHZqy29hEfnGNMZNEb79cT8zBchHnple6laK/ZENQ/+L8MDiSSeB2diTuFqdJ91fOzcS/dkmt9Q70iX0aaIyjjhc9m5KhZv5bS1yVFNN//8sUnN/wDb9eoKu8G562mYBXpsWYfFEiUz2AmmFm7IVyXWo37dW9urDnV0Ux7MyGhyiNzB+ZHDy4AV3yGekvCaFqFi/Nvxoct/TZDVCUpxnPjvZkLmbV0dKpSSHshco+ObJGJ9YHOrp6ApHNyAkzRaaGCQI2g3RJ5ORNyc0kays9bPH/jH5Pm7bBuMZL7O8jHy0X4pssFiqd0DPlEdAtSHfd/2KPxKonRWWh/zUzhRRInf1qk07cGCQFG2wT2N3n4mnKHpVGDdDh+nBQNgQU/YcB+S4fhi2DpDGGaRj8YNFvXgnRsIvtorPOwbZV7nXDfDAzl7VoL6v9ETy9Fffzy14DFAeSH9HYYOs/QyzPJcZUh4/9/hD7VYFu4mPjIbcUcHbjDakqr1wqlCAkIiLP+ODa5ySlFl+oaWsUx4whXZ1NAom17koFkzJ02PZaORI2hBkI8XZvnVSgWkGrdZ9q2Q55aQ2PKkTZ++dPAnLIh9aJGDRAu+MmBAiirMlRpV0vImxHtNkM8DDkziq6DDWd9sCtRCMci8qBvz0CCNxpaCF8N/X1m9siX9DpJtKcbu62xbhB7Pusgv4gJrW40ad49SY9YqQ4B7dMbO50tawX64r6i32ZpOl1d2kQI/icRl2TJ+5KBfdnx9ZDMOOMsGXYQhRcl/fhtiVcwm+QBwhi7NrLst2cKfkORxZtWt8wKmDPWYbwYX8oa40Cj8gm/sPzXxGiBjY0fml/HU/7Zv5l+fNcN2uByg3G2hFAkQX8MUWO7yM9X8R+z+qg7k6VrjnxH+SBwuuZCXHT4JWHAwYewegjCMlRWYt/VO7eexKsCMdoHusaCf8RULRkzkR7oN/3FmlxFTROfJv0Q+0VHpdbqrx4xn4Dwi4inHEv+njEXjberN6UkOUZoAA2RNP2g4vRbzqFjuAkxILhcvklIKGNO9ytjY5YQVkf3viEvRe0UcC70XcRTFEBECCZMnhe6vno/I14k6p+NX9iqsAOk9yJ0PLj7nQP7HytZfOt4fMhnNl+qc4JVw77mhBtGB4Iq5IbU19ROW8XN7hRZqyQIuPVAl5cgyjJM2m2VmKilHIhU5qhKe/fFW1r7NoG0yZ4MLzfRqIUR5nCPgNhCTrhNmODZ952t0PIIz5G0tcxosfczHvKhJR/qCXDSZSIk0vzWBVTDLrEAT/FcDRGLcVkWA98z95XD5E6BpYcMtn/QYYqdRpRJufx6Ij6VuFLVTpM1cloUpW0hdC2FSEddtX0y+j1pOMjtH8cKX4BlFNyww+cZPGL9lZuVIaHjpgJ3HtZO6yMgyCJrPF6UZb9eJu57TlNhGRV/Rd/DucHdWLKWSvBTN6tjomfZX75uUfov+s6p5jHXyjV1LF+aOObaVZjAR1+KjU0hYPoo7qyHk+M4NpKxSmgO+JOfTOywghBzO9DQM3vVwFZiMFRKG4GW8sl0ijGH1whYKmZ1pIISY6CDv6TlTelBUg6Tv4NEENMyeQ/mj4lVq/Y8w4AjkL40i2MYUxJfbIadXYGEr/MnudaZzO9djjctD7CcEH5QeiiheEqWHi81FO04Xk51aIxlTKNV+0/njAv8ieKr28jFu1+GyYwr03QyH1frUqBf/CJ85kM50APHjXvtpFKCNmFGJwkxRPk1JXk61iIci58GSSHaaGMP1+N2U6zBm2zhWZzzYXpeowAeOKC+y1R4sGh1CLCah2iThw9uW9FTIW5Q8Ond9V2BAMJK1Bk8+jJ7NgI2VLF9W3qr/allg+etcEfNPEh/tnV76wLhNtGwlBhn91nzP/AShFU2GttUZ6KQmPeXYtsjH+QTIlNigbZsihr0iEFGvjOIhdOX4EeG48fW/MG0Bu3zMCRhTskTBrYvYhc3LwtZS5kfyA6vH5ZgowGYcfQQWVA8/MLILgMRTr4VQwDrk53XPB+iijsHYUKmsApwySVj3/nxNLpO/5o60NftDpWgnoXt9nOSx9JCZUnfMlzUgQf1m+qhuUVmTNicHrqaj9QLFe+5xGQV7MWcCWsGjLe4nxeFDLGrl0HoKlAc1znHfQ5ZXT9plp0nHNeDc2EXvBbH4EF8bt6HKGXyK0vPhsdlV8+wyuAsW4vskGgv8QrlgUrHMKlFIMWbNw8r5lNh0QsfJsHvL/HuWuo2sEPFiHyPboHfjjBBfST7+r0aHZAownk0sFbZOOB7Txzr59nHJlX5sWJkUFFg48Kg7C17BwcWn3Zv0vBonPxj6v7MGE15Ch7Cprde+5CZdz7Xxm5oz6IsxnA58cxI1RJ3KGRu41HJsQghz1BJzOYXDCKt9CGyQNQbIrIw8ZK1PQZx3HEgEuGol2Nie53au4SsWVrROEOYsHikzhlCcsKs2Y9rt15Bi5vGz+1yrxBz0BDDu0G+UPNcqT9BI1C/ZMtfn+TMjdDUx6OKlHGAnAHz/1wmoQfoivKfiG3x+B6aKjwDjP9QhmdkMModEgBudgITjh79hjDmBXy82T4OXzxx+5q7w9xw/sCkMbI1f324xhv0b0/RWtRMpHQtiKpKiTK4k19AL3QFaaXYZU58Kxq6Xt9veTL+TI8+ZSmc4diwTT77iBbJqkdo8cXySy9ZvSAv6k18qrJzuHf9hskfO1zXhDJ9rrQ5qceRtOnxO5bkN6nsD/U69gr2TTduZ7lhPeDg8bgRW8y5LPyaU7j/pXlIOmbZiu7XZCkqT4KuA1IPHkILx1LvpeFTWk5mmVBPpXnUaEacF7YGoGdCd/a8WjYBcGOmdmx92+KIzULZRpdPvjGysZbrgtUVcvaeta3p+ORgCnT1fZkwI60Wpnl1luHf8VwTHbsqKJ6ZDdwUKBKFzClFYqZjdfqwk5ei+fTZMw9T1J7R5X4w2l5hGKeUeprTpaE+W5MF+JiYj7uNVvu9MdsWwkJPjvtrdsSmqWjd7h+53X0xSnUq3BZu+sYYDBd7Aij7xQ+P+p1guvmy6KCRGMM4OoLzGHu91H12w1B/Lg1QScjLmgy2/gIuI/gaj7etXeZOhVjtebzNaaWPn1y6u4W7W2dYmoCJBTy/Zej7SjyH0K2dmAjlcQeDYqA/fmzFtdfNfVGoyyqf3whny0N0mb7GUmnymKKixEE8sKIl0csk8h/5+gSB1F38ZUbBeq6Asn7IqWSGOi/WDd6WQ9dxvnRd6pML8LbbMhjtZPodq6vQ0CXp+NVp6OrT47L5dr4GqC54ysMR9izlH24Tnd2K3EzjZ+OSngU+4v+i4DSP6n438MII+ae9GR1G5F2KJ4hbRarqyl1HxtFVYVqM46gqLGhj5kMydsBXXy0YO88j6bHg26I09bd1napGIqYyUXB6eEs+NHvcYMfqxk7UbqkmqBBUI79IQqtG4zQUlmVIFAlEg85oKZ5YoW7kwInGKr7wHt40oGs72lGTH9WdImHAHD4g/WKDUOkRJ3z3jAjq0vFRn+MgwxqW/+11VrlbIZMXoZJj2ZUMWqkZw06viLfSV7qikRRkww5gspwr/LcYN7MF8QS74tozfWrJfE"/>
   </div>
   <script type="text/javascript">
    //<![CDATA[
var theForm = document.forms['Form'];
if (!theForm) {
    theForm = document.Form;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]>
   </script>
   <script src="/WebResource.axd?d=pynGkmcFUV16vn23mRKJ3YfxgZO6Vg-qfn4DLZzvdN4FsDO3JF6o8Ai9U2w1&amp;t=637453888939909757" type="text/javascript">
   </script>
   <script src="/ScriptResource.axd?d=NJmAwtEo3IqOv4sUh-Rig0r8ribOsOru6PRUuOPeOUTxaLr0LkqwjUZ1KfN2pxsTzXrhnEn2qPqMmFHAgZnpJORcEUNLaSpc226qJmze-FYKMecKHwPV-k73fvQH1Ku4KKXAUA2&amp;t=2fe674eb" type="text/javascript">
   </script>
   <script src="/ScriptResource.axd?d=dwY9oWetJoJ4ZjA-1jPcEhP7ER5pj7vUnbl87xIrp5KgCIH7OinCkP3cK37LGan3ayBW32yRZSEgGl2tgZv50n3b6-V5-8OCkx2VKFRvNoTMy9OkcSdmsXHaJpvqsXD5HuMXQgmzxnfjN1aI0&amp;t=2fe674eb" type="text/javascript">
   </script>
   <div class="aspNetHidden">
    <input id="__VIEWSTATEGENERATOR" name="__VIEWSTATEGENERATOR" type="hidden" value="CA0B0334"/>
    <input id="__VIEWSTATEENCRYPTED" name="__VIEWSTATEENCRYPTED" type="hidden" value=""/>
    <input id="__EVENTVALIDATION" name="__EVENTVALIDATION" type="hidden" value="MBR5z5zy2C2uMBQIpQF1L5DcBZ09jbhoE6kdPo8UoUx357PjHkpzfw/y24QW9z/KC83R+CBQshgGL/PDFVMyQh1P7vP1QSV4lEUXdgtYITNZllUL"/>
   </div>
   <script src="/Desktopmodules/SharedLibrary/Plugins/Slick/1.9.0/slick.min.js?cdv=900" type="text/javascript">
   </script>
   <script src="/js/dnn.js?cdv=900" type="text/javascript">
   </script>
   <script src="/js/dnn.modalpopup.js?cdv=900" type="text/javascript">
   </script>
   <script src="/Portals/_default/skins/dgov2/resources/js/skin.js?cdv=900" type="text/javascript">
   </script>
   <script src="/Portals/_default/skins/dgov2/resources/js/menu.js?cdv=900" type="text/javascript">
   </script>
   <script src="/js/dnncore.js?cdv=900" type="text/javascript">
   </script>
   <script src="/Desktopmodules/SharedLibrary/Plugins/Mobile-Detect/mobile-detect.min.js?cdv=900" type="text/javascript">
   </script>
   <script src="/DesktopModules/ArticleCS/Resources/ArticleCS/js/ArticleCS.js?cdv=900" type="text/javascript">
   </script>
   <script src="/Desktopmodules/SharedLibrary/Plugins/moment/moment.js?cdv=900" type="text/javascript">
   </script>
   <script src="/Desktopmodules/SharedLibrary/Plugins/ColorBox/jquery.colorbox.js?cdv=900" type="text/javascript">
   </script>
   <script src="/Desktopmodules/SharedLibrary/Plugins/vue/2.5.13/vue.min.js?cdv=900" type="text/javascript">
   </script>
   <script src="/js/dnn.servicesframework.js?cdv=900" type="text/javascript">
   </script>
   <script src="/Desktopmodules/SharedLibrary/Plugins/Skin/js/common.js?cdv=900" type="text/javascript">
   </script>
   <script src="/Desktopmodules/SharedLibrary/Plugins/moment/moment-timezone-with-data.js?cdv=900" type="text/javascript">
   </script>
   <script src="/Desktopmodules/SharedLibrary/Plugins/image-set-polyfill/image-set-polyfill.js?cdv=900" type="text/javascript">
   </script>
   <script type="text/javascript">
    //<![CDATA[
Sys.WebForms.PageRequestManager._initialize('ScriptManager', 'Form', [], [], [], 3600, '');
//]]>
   </script>
   <!--CDF(Javascript|/Portals/_default/skins/dgov2/resources/js/skin.js?cdv=900|DnnBodyProvider|100)-->
   <!--CDF(Javascript|/Portals/_default/skins/dgov2/resources/js/menu.js?cdv=900|DnnBodyProvider|100)-->
   <script type="text/javascript">
    jQuery(document).ready(function() {
initializeSkin();
});
   </script>
   <script type="text/javascript">
    var skinvars = {"SiteName":"U.S. DEPARTMENT OF DEFENSE","SiteShortName":"Defense.gov","SiteSubTitle":"","aid":"defensegov","IsSecureConnection":false,"IsBackEnd":false,"IsAuthenticated":false,"SearchDomain":"search.defense.gov","SiteUrl":"http://www.defense.gov/","LastLogin":null,"IsLastLoginFail":false,"IncludePiwik":true,"PiwikSiteID":13,"SocialLinks":{"Facebook":{"Url":"","Window":"","Relationship":null},"Twitter":{"Url":"","Window":"","Relationship":null},"YouTube":{"Url":"","Window":"","Relationship":null},"Flickr":{"Url":"","Window":"","Relationship":null},"Pintrest":{"Url":"","Window":"","Relationship":null},"Instagram":{"Url":"","Window":"","Relationship":null},"Blog":{"Url":"","Window":"","Relationship":null},"RSS":{"Url":"","Window":"","Relationship":null},"Podcast":{"Url":"","Window":"","Relationship":null},"Email":{"Url":"","Window":"","Relationship":null},"LinkedIn":{"Url":"","Window":"","Relationship":null},"Snapchat":{"Url":"","Window":"","Relationship":null}},"SiteLinks":null,"LogoffTimeout":10500000};
   </script>
   <script type="application/ld+json">
    {"@context":"http://schema.org","@type":"Organization","logo":"http://www.defense.gov/Portals/1/logo.png?ver=dXzN7YLTmMBRmmdtnELo5A%3d%3d","name":"U.S. DEPARTMENT OF DEFENSE","url":"http://www.defense.gov/","sameAs":[]}
   </script>
   <!--CDF(Css|/Portals/_default/skins/dgov2/resources/css/menu.css?cdv=900|DnnPageHeaderProvider|100)-->
   <div id="skip-link-holder">
    <a href="#skip-target" id="skip-link">
     Skip to main content (Press Enter).
    </a>
   </div>
   <header class="top" id="header-main">
    <div class="header-inner">
     <a class="logo" href="http://www.defense.gov/" target="">
      <span>
       U.S. DEPARTMENT OF DEFENSE
      </span>
      <img alt="U.S. DEPARTMENT OF DEFENSE" src="/Portals/1/logo.png?ver=dXzN7YLTmMBRmmdtnELo5A%3d%3d" title="U.S. DEPARTMENT OF DEFENSE"/>
     </a>
     <nav class="main">
      <ul>
       <li class="mobile-back">
        <a href="#">
         <i class="fa fa-chevron-left">
         </i>
         Back
        </a>
       </li>
       <li class="mobile-home">
        <a href="/">
         Home
        </a>
       </li>
       <li class="mobile-level1-placeholder">
        <a href="#">
         Place Holder
        </a>
       </li>
       <li class="desktop-blank">
       </li>
       <li class="top-level">
        <a href="http://www.defense.gov/Explore/Spotlight/Coronavirus/" tabindex="0" target="">
         Coronavirus Update
         <span class="mobile-arrow">
          <i class="fa fa-chevron-right">
          </i>
         </span>
         <i class="fas fa-chevron-down">
         </i>
        </a>
        <div class="arrow-down">
         <i>
         </i>
        </div>
       </li>
       <li class="parent top-level">
        <a aria-expanded="false" href="http://www.defense.gov/Whats-New/" tabindex="0" target="">
         What's New
         <span class="mobile-arrow">
          <i class="fa fa-chevron-right">
          </i>
         </span>
         <i class="fas fa-chevron-down">
         </i>
        </a>
        <div class="arrow-down">
         <i>
         </i>
        </div>
        <ul class="level2">
         <li class="parent">
          <a aria-expanded="false" href="http://www.defense.gov/explore/" tabindex="0" target="">
           <span class="main">
            Explore
           </span>
          </a>
          <ul class="parent">
           <li class="">
            <a href="http://www.defense.gov/Explore/News/" tabindex="0" target="">
             <span class="main">
              News
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Explore/Features/" tabindex="0" target="">
             <span class="main">
              Features
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Explore/Spotlight/" tabindex="0" target="">
             <span class="main">
              Spotlights
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Explore/Inside-DOD/" tabindex="0" target="">
             <span class="main">
              Blog: Inside DOD
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Explore/From-the-Services/" tabindex="0" target="">
             <span class="main">
              From the Services
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Watch/Live-Events/" tabindex="0" target="">
             <span class="main">
              Live Events
             </span>
            </a>
           </li>
          </ul>
         </li>
         <li class="parent">
          <a aria-expanded="false" href="http://www.defense.gov/Experience/" tabindex="0" target="">
           <span class="main">
            Multimedia
           </span>
          </a>
          <ul class="parent">
           <li class="">
            <a href="http://www.defense.gov/Experience/" tabindex="0" target="">
             <span class="main">
              Experience DOD
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Engage/" tabindex="0" target="">
             <span class="main">
              Quizzes
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Watch/" tabindex="0" target="">
             <span class="main">
              Feature Videos
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/observe/" tabindex="0" target="">
             <span class="main">
              Photo Gallery
             </span>
            </a>
           </li>
          </ul>
         </li>
        </ul>
       </li>
       <li class="parent top-level">
        <a aria-expanded="false" href="http://www.defense.gov/Our-Story/" tabindex="0" target="">
         Our Story
         <span class="mobile-arrow">
          <i class="fa fa-chevron-right">
          </i>
         </span>
         <i class="fas fa-chevron-down">
         </i>
        </a>
        <div class="arrow-down">
         <i>
         </i>
        </div>
        <ul class="level2">
         <li class="parent">
          <a aria-expanded="false" href="http://www.defense.gov/Our-Story/" tabindex="0" target="">
           <span class="main">
            About the DOD
           </span>
          </a>
          <ul class="parent">
           <li class="">
            <a href="http://www.defense.gov/Our-Story/Our-Forces/" tabindex="0" target="">
             <span class="main">
              Our Forces
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Our-Story/Combatant-Commands/" tabindex="0" target="">
             <span class="main">
              Combatant Commands
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Our-Story/Office-of-the-Secretary-of-Defense/" tabindex="0" target="">
             <span class="main">
              Office of the Secretary of Defense
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/KnowYourMilitary/" tabindex="0" target="">
             <span class="main">
              Know Your Military
             </span>
            </a>
           </li>
          </ul>
         </li>
         <li class="parent">
          <a aria-expanded="false" href="http://www.defense.gov/Our-Story/Meet-the-Team/" tabindex="0" target="">
           <span class="main">
            Our Leaders
           </span>
          </a>
          <ul class="parent">
           <li class="">
            <a href="http://www.defense.gov/Our-Story/Meet-the-Team/Secretary-of-Defense/" tabindex="0" target="">
             <span class="main">
              Secretary of Defense
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Our-Story/Meet-the-Team/Deputy-Secretary-of-Defense/" tabindex="0" target="">
             <span class="main">
              Deputy Secretary of Defense
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Our-Story/Meet-the-Team/Chairman-of-the-Joint-Chiefs-of-Staff/" tabindex="0" target="">
             <span class="main">
              Chairman of the Joint Chiefs of Staff
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Our-Story/Meet-the-Team/Vice-Chairman-of-the-Joint-Chiefs-of-Staff/" tabindex="0" target="">
             <span class="main">
              Vice Chairman of the Joint Chiefs of Staff
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Our-Story/Biographies/" tabindex="0" target="">
             <span class="main">
              More Leaders
             </span>
            </a>
           </li>
          </ul>
         </li>
        </ul>
       </li>
       <li class="parent top-level">
        <a aria-expanded="false" href="http://www.defense.gov/Newsroom/" tabindex="0" target="">
         Newsroom
         <span class="mobile-arrow">
          <i class="fa fa-chevron-right">
          </i>
         </span>
         <i class="fas fa-chevron-down">
         </i>
        </a>
        <div class="arrow-down">
         <i>
         </i>
        </div>
        <ul class="level2">
         <li class="parent">
          <a aria-expanded="false" href="http://www.defense.gov/Newsroom/" tabindex="0" target="">
           <span class="main">
            What's Happening
           </span>
          </a>
          <ul class="parent">
           <li class="">
            <a href="http://www.defense.gov/Watch/Live-Events/" tabindex="0" target="">
             <span class="main">
              Live Events
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Explore/News/" tabindex="0" target="">
             <span class="main">
              Latest News
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Newsroom/Today-in-DoD/" tabindex="0" target="">
             <span class="main">
              Today in DOD
             </span>
            </a>
           </li>
          </ul>
         </li>
         <li class="parent">
          <a aria-expanded="false" href="http://www.defense.gov/Newsroom/Press-Products/" tabindex="0" target="">
           <span class="main">
            Press Products
           </span>
          </a>
          <ul class="parent">
           <li class="">
            <a href="http://www.defense.gov/Newsroom/releases/" tabindex="0" target="">
             <span class="main">
              Releases
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Newsroom/Advisories/" tabindex="0" target="">
             <span class="main">
              Advisories
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Newsroom/Transcripts/" tabindex="0" target="">
             <span class="main">
              Transcripts
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Newsroom/Speeches/" tabindex="0" target="">
             <span class="main">
              Speeches
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Newsroom/Publications/" tabindex="0" target="">
             <span class="main">
              Publications
             </span>
            </a>
           </li>
           <li class="">
            <a href="http://www.defense.gov/Newsroom/Contracts/" tabindex="0" target="">
             <span class="main">
              Contracts
             </span>
            </a>
           </li>
          </ul>
         </li>
        </ul>
       </li>
      </ul>
      <div class="nav-search-icon">
       <i class="fa fa-search">
       </i>
      </div>
      <div class="nav-search">
       <input autocomplete="off" name="header-search" placeholder="Search topics, names, categories..." type="search" value=""/>
       <span class="search-icon">
        <i aria-label="Search" class="fa fa-search">
        </i>
       </span>
       <span class="close-icon">
        <i aria-label="Search" class="desktop-search-close">
        </i>
       </span>
      </div>
      <div class="level2-backdrop">
       <div class="backdrop-image">
       </div>
      </div>
     </nav>
    </div>
    <div id="mobile-overlay">
    </div>
    <div id="nav-drawer">
     <div aria-label="toggle navigation" aria-role="button" class="hide-on-mobile-nav-open" id="nav-burger">
      <span>
      </span>
      <span>
      </span>
      <span>
      </span>
      <span>
      </span>
     </div>
     <div class="drawer-inner">
      <div aria-label="toggle navigation" aria-role="button" class="internal" id="nav-burger">
       <span>
       </span>
       <span>
       </span>
       <span>
       </span>
       <span>
       </span>
      </div>
      <div class="search-wrap">
       <input autocomplete="off" id="search-main" name="search-main" type="search"/>
       <label for="search-main" id="search-main-icon">
        <i aria-label="Search" class="fa fa-search">
        </i>
       </label>
       <a class="skin-search-go" href="#">
        Search
       </a>
      </div>
      <nav>
       <div class="primary">
        <ul>
         <li class="mobile-back">
          <a href="#">
           <i class="fa fa-chevron-left">
           </i>
           Back
          </a>
         </li>
         <li class="mobile-home">
          <a href="/">
           Home
          </a>
         </li>
         <li class="mobile-level1-placeholder">
          <a href="#">
           Place Holder
          </a>
         </li>
         <li class="desktop-blank">
         </li>
         <li class="top-level">
          <a href="http://www.defense.gov/Explore/Spotlight/Coronavirus/" tabindex="0" target="">
           Coronavirus Update
           <span class="mobile-arrow">
            <i class="fa fa-chevron-right">
            </i>
           </span>
           <i class="fas fa-chevron-down">
           </i>
          </a>
          <div class="arrow-down">
           <i>
           </i>
          </div>
         </li>
         <li class="parent top-level">
          <a aria-expanded="false" href="http://www.defense.gov/Whats-New/" tabindex="0" target="">
           What's New
           <span class="mobile-arrow">
            <i class="fa fa-chevron-right">
            </i>
           </span>
           <i class="fas fa-chevron-down">
           </i>
          </a>
          <div class="arrow-down">
           <i>
           </i>
          </div>
          <ul class="level2">
           <li class="parent">
            <a aria-expanded="false" href="http://www.defense.gov/explore/" tabindex="0" target="">
             <span class="main">
              Explore
             </span>
            </a>
            <ul class="parent">
             <li class="">
              <a href="http://www.defense.gov/Explore/News/" tabindex="0" target="">
               <span class="main">
                News
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Explore/Features/" tabindex="0" target="">
               <span class="main">
                Features
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Explore/Spotlight/" tabindex="0" target="">
               <span class="main">
                Spotlights
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Explore/Inside-DOD/" tabindex="0" target="">
               <span class="main">
                Blog: Inside DOD
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Explore/From-the-Services/" tabindex="0" target="">
               <span class="main">
                From the Services
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Watch/Live-Events/" tabindex="0" target="">
               <span class="main">
                Live Events
               </span>
              </a>
             </li>
            </ul>
           </li>
           <li class="parent">
            <a aria-expanded="false" href="http://www.defense.gov/Experience/" tabindex="0" target="">
             <span class="main">
              Multimedia
             </span>
            </a>
            <ul class="parent">
             <li class="">
              <a href="http://www.defense.gov/Experience/" tabindex="0" target="">
               <span class="main">
                Experience DOD
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Engage/" tabindex="0" target="">
               <span class="main">
                Quizzes
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Watch/" tabindex="0" target="">
               <span class="main">
                Feature Videos
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/observe/" tabindex="0" target="">
               <span class="main">
                Photo Gallery
               </span>
              </a>
             </li>
            </ul>
           </li>
          </ul>
         </li>
         <li class="parent top-level">
          <a aria-expanded="false" href="http://www.defense.gov/Our-Story/" tabindex="0" target="">
           Our Story
           <span class="mobile-arrow">
            <i class="fa fa-chevron-right">
            </i>
           </span>
           <i class="fas fa-chevron-down">
           </i>
          </a>
          <div class="arrow-down">
           <i>
           </i>
          </div>
          <ul class="level2">
           <li class="parent">
            <a aria-expanded="false" href="http://www.defense.gov/Our-Story/" tabindex="0" target="">
             <span class="main">
              About the DOD
             </span>
            </a>
            <ul class="parent">
             <li class="">
              <a href="http://www.defense.gov/Our-Story/Our-Forces/" tabindex="0" target="">
               <span class="main">
                Our Forces
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Our-Story/Combatant-Commands/" tabindex="0" target="">
               <span class="main">
                Combatant Commands
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Our-Story/Office-of-the-Secretary-of-Defense/" tabindex="0" target="">
               <span class="main">
                Office of the Secretary of Defense
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/KnowYourMilitary/" tabindex="0" target="">
               <span class="main">
                Know Your Military
               </span>
              </a>
             </li>
            </ul>
           </li>
           <li class="parent">
            <a aria-expanded="false" href="http://www.defense.gov/Our-Story/Meet-the-Team/" tabindex="0" target="">
             <span class="main">
              Our Leaders
             </span>
            </a>
            <ul class="parent">
             <li class="">
              <a href="http://www.defense.gov/Our-Story/Meet-the-Team/Secretary-of-Defense/" tabindex="0" target="">
               <span class="main">
                Secretary of Defense
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Our-Story/Meet-the-Team/Deputy-Secretary-of-Defense/" tabindex="0" target="">
               <span class="main">
                Deputy Secretary of Defense
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Our-Story/Meet-the-Team/Chairman-of-the-Joint-Chiefs-of-Staff/" tabindex="0" target="">
               <span class="main">
                Chairman of the Joint Chiefs of Staff
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Our-Story/Meet-the-Team/Vice-Chairman-of-the-Joint-Chiefs-of-Staff/" tabindex="0" target="">
               <span class="main">
                Vice Chairman of the Joint Chiefs of Staff
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Our-Story/Biographies/" tabindex="0" target="">
               <span class="main">
                More Leaders
               </span>
              </a>
             </li>
            </ul>
           </li>
          </ul>
         </li>
         <li class="parent top-level">
          <a aria-expanded="false" href="http://www.defense.gov/Newsroom/" tabindex="0" target="">
           Newsroom
           <span class="mobile-arrow">
            <i class="fa fa-chevron-right">
            </i>
           </span>
           <i class="fas fa-chevron-down">
           </i>
          </a>
          <div class="arrow-down">
           <i>
           </i>
          </div>
          <ul class="level2">
           <li class="parent">
            <a aria-expanded="false" href="http://www.defense.gov/Newsroom/" tabindex="0" target="">
             <span class="main">
              What's Happening
             </span>
            </a>
            <ul class="parent">
             <li class="">
              <a href="http://www.defense.gov/Watch/Live-Events/" tabindex="0" target="">
               <span class="main">
                Live Events
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Explore/News/" tabindex="0" target="">
               <span class="main">
                Latest News
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Newsroom/Today-in-DoD/" tabindex="0" target="">
               <span class="main">
                Today in DOD
               </span>
              </a>
             </li>
            </ul>
           </li>
           <li class="parent">
            <a aria-expanded="false" href="http://www.defense.gov/Newsroom/Press-Products/" tabindex="0" target="">
             <span class="main">
              Press Products
             </span>
            </a>
            <ul class="parent">
             <li class="">
              <a href="http://www.defense.gov/Newsroom/releases/" tabindex="0" target="">
               <span class="main">
                Releases
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Newsroom/Advisories/" tabindex="0" target="">
               <span class="main">
                Advisories
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Newsroom/Transcripts/" tabindex="0" target="">
               <span class="main">
                Transcripts
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Newsroom/Speeches/" tabindex="0" target="">
               <span class="main">
                Speeches
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Newsroom/Publications/" tabindex="0" target="">
               <span class="main">
                Publications
               </span>
              </a>
             </li>
             <li class="">
              <a href="http://www.defense.gov/Newsroom/Contracts/" tabindex="0" target="">
               <span class="main">
                Contracts
               </span>
              </a>
             </li>
            </ul>
           </li>
          </ul>
         </li>
        </ul>
        <ul>
         <li class="parent top-level">
          <a aria-expanded="false" href="#" tabindex="0" target="">
           Legal &amp; Administrative
           <span class="mobile-arrow">
            <i class="fa fa-chevron-right">
            </i>
           </span>
          </a>
          <div class="arrow-down">
           <i>
           </i>
          </div>
          <ul class="level2">
           <ul class="">
            <li class="">
             <a href="/Legal-Administrative/Privacy-Security/ " title="">
              <span class="text text-link-12">
               Privacy &amp; Security
              </span>
             </a>
            </li>
            <li class="">
             <a href="/Legal-Administrative/Links-Disclaimer/ " title="">
              <span class="text text-link-17">
               Links Disclaimer
              </span>
             </a>
            </li>
            <li class="">
             <a href="http://dodcio.defense.gov/DoDSection508/Std_Stmt.aspx" rel="noopener" target="_blank" title="">
              <span class="text text-link-13">
               Section 508
              </span>
             </a>
            </li>
            <li class="">
             <a href="http://dodcio.defense.gov/DoD-Web-Policy/ " rel="noopener" target="_blank" title="">
              <span class="text text-link-14">
               Web Policy
              </span>
             </a>
            </li>
            <li class="">
             <a href="http://www.esd.whs.mil/DD/plainlanguage/ " rel="noopener" target="_blank" title="">
              <span class="text text-link-37">
               Plain Writing Act
              </span>
             </a>
            </li>
            <li class="">
             <a href="http://www.dodig.mil/ " rel="noopener" target="_blank" title="">
              <span class="text text-link-38">
               DOD IG
              </span>
             </a>
            </li>
            <li class="">
             <a href="https://policy.defense.gov/OUSDP-Offices/Reporting-Civilian-Casualties/ " rel="noopener" target="_blank" title="">
              <span class="text text-link-39">
               Reporting Civilian Casualties
              </span>
             </a>
            </li>
            <li class="">
             <a href="http://prhome.defense.gov/NoFear/ " rel="noopener" target="_blank" title="">
              <span class="text text-link-40">
               No FEAR Act
              </span>
             </a>
            </li>
            <li class="">
             <a href="http://www.dimoc.mil/resources/limitations/ " rel="noopener" target="_blank" title="">
              <span class="text text-link-41">
               Imagery Use
              </span>
             </a>
            </li>
            <li class="">
             <a href="https://www.esd.whs.mil/FOID/ " rel="noopener" target="_blank" title="">
              <span class="text text-link-42">
               FOIA
              </span>
             </a>
            </li>
            <li class="">
             <a href="http://open.defense.gov/ " rel="noopener" target="_blank" title="">
              <span class="text text-link-43">
               Open GOV
              </span>
             </a>
            </li>
            <li class="">
             <a href="https://cmo.defense.gov/Publications/NDBOP.aspx " rel="noopener" target="_blank" title="">
              <span class="text text-link-44">
               Strategic Plan
              </span>
             </a>
            </li>
            <li class="">
             <a href="https://www.usa.gov/ " rel="noopener" target="_blank" title="">
              <span class="text text-link-45">
               USA.gov
              </span>
             </a>
            </li>
            <li class="">
             <a href="https://business.defense.gov/ " rel="noopener" target="_blank" title="">
              <span class="text text-link-46">
               Small Business Act
              </span>
             </a>
            </li>
            <li class="">
             <a href="/site-index/ " title="">
              <span class="text text-link-47">
               Site Map
              </span>
             </a>
            </li>
           </ul>
          </ul>
         </li>
        </ul>
       </div>
       <div class="social">
        <ul class="">
         <li class="">
          <a href="https://twitter.com/DeptofDefense" rel="noopener" target="_blank" title="Twitter">
           <span class="social-icon fa fa-twitter social-link-4">
           </span>
          </a>
         </li>
         <li class="">
          <a href="https://www.facebook.com/DeptofDefense" rel="noopener" target="_blank" title="Facebook">
           <span class="social-icon fa fa-facebook social-link-1">
           </span>
          </a>
         </li>
         <li class="">
          <a href="https://www.instagram.com/deptofdefense/" rel="noopener" target="_blank" title="Instagram">
           <span class="social-icon fa fa-instagram social-link-3">
           </span>
          </a>
         </li>
         <li class="">
          <a href="https://www.youtube.com/deptofdefense" rel="noopener" target="_blank" title="YouTube">
           <span class="social-icon fa fa-youtube social-link-2">
           </span>
          </a>
         </li>
        </ul>
       </div>
      </nav>
     </div>
    </div>
   </header>
   <p id="skip-target-holder">
    <a aria-label="Skip Target" class="skip" id="skip-target" name="skip-target" tabindex="-1">
    </a>
   </p>
   <main>
    <div id="dnn_ContentPaneBanner">
     <div class="DnnModule DnnModule-DNN_HTML DnnModule-2310">
      <a name="2310">
      </a>
      <div class="empty-container base-container">
       <div id="dnn_ctr2310_ContentPane">
        <!-- Start_Module_2310 -->
        <div class="DNNModuleContent ModDNNHTMLC" id="dnn_ctr2310_ModuleContent">
         <div class="Normal" id="dnn_ctr2310_HtmlModule_lblContent">
          <div class="page-banner" style="background-image:url(https://media.defense.gov/2020/Jan/17/2002236356/1088/820/0/200116-N-SS432-0281.JPG);">
           <div class="page-banner-inner">
            <div class="content-wrap">
             <h1 class="page-title">
              Inside DOD
             </h1>
             <p>
              Blogs from around the Defense Department.
             </p>
            </div>
           </div>
          </div>
         </div>
        </div>
        <!-- End_Module_2310 -->
       </div>
      </div>
      <!--end of empty container -->
     </div>
    </div>
    <div class="slice-angle slice-angle-gray slice-angle-down-top">
     <div class="page-wrap">
      <div id="dnn_ContentPanePage">
       <div class="DnnModule DnnModule-ArticleCSDashboard DnnModule-2312">
        <a name="2312">
        </a>
        <div class="empty-container base-container">
         <div id="dnn_ctr2312_ContentPane">
          <!-- Start_Module_2312 -->
          <div class="DNNModuleContent ModArticleCSDashboardC" id="dnn_ctr2312_ModuleContent">
           <div id="dnn_ctr2312_Dashboard_ph">
            <div class="blog-feature-grid alist stories adash feature-grid" id="blogFeatureGrid-2312" v-cloak="">
             <div class="spinner3">
              <div class="bounce1">
              </div>
              <div class="bounce2">
              </div>
              <div class="bounce3">
              </div>
             </div>
             <h2 class="pull-title">
              Latest
             </h2>
             <div class="alist-inner">
              <feature-template more-text="More">
               <adaptive-blog-card :has-terms="true" :show-image="true" article-id="2535154" article-title="Assistive Tech Optimizes Options for Employees With Disabilities" article-url="https://www.defense.gov/Explore/Inside-DOD/Blog/Article/2535154/assistive-tech-optimizes-options-for-employees-with-disabilities/" image-caption="" image-url="https://media.defense.gov/2021/Mar/12/2002599314/1280/1280/0/210311-O-ZZ999-095.JPG" publish-date-ap="March 12, 2021" publish-date-jss="2021-03-12T09:43:00" term-name="Partnerships" term-url="http://www.defense.gov/Search-Results/Term/2582/partnerships/">
               </adaptive-blog-card>
               <adaptive-blog-card :has-terms="true" :show-image="true" article-id="2494459" article-title="Walter Reed: Get to Know the Man Behind the Medical Center" article-url="https://www.defense.gov/Explore/Inside-DOD/Blog/Article/2494459/walter-reed-get-to-know-the-man-behind-the-medical-center/" image-caption="" image-url="https://media.defense.gov/2021/Feb/05/2002576998/1280/1280/0/210203-A-ZZ999-101A.JPG" publish-date-ap="Feb. 5, 2021" publish-date-jss="2021-02-05T10:45:00" term-name="Know Your Military" term-url="http://www.defense.gov/Search-Results/Term/2580/know-your-military/">
               </adaptive-blog-card>
               <adaptive-blog-card :has-terms="true" :show-image="true" article-id="2456257" article-title="Meet the 2020 USO Service Members of the Year" article-url="https://www.defense.gov/Explore/Inside-DOD/Blog/Article/2456257/meet-the-2020-uso-service-members-of-the-year/" image-caption="" image-url="https://media.defense.gov/2020/Dec/23/2002556669/1280/1280/0/201222-O-ZZ999-087.JPG" publish-date-ap="Dec. 23, 2020" publish-date-jss="2020-12-23T13:14:00" term-name="Know Your Military" term-url="http://www.defense.gov/Search-Results/Term/2580/know-your-military/">
               </adaptive-blog-card>
               <adaptive-blog-card :has-terms="true" :show-image="true" article-id="2443158" article-title="Drive-Thru Winter Wonderland Greets Military Families" article-url="https://www.defense.gov/Explore/Inside-DOD/Blog/Article/2443158/drive-thru-winter-wonderland-greets-military-families/" image-caption="" image-url="https://media.defense.gov/2020/Dec/11/2002550382/1280/1280/0/201207-O-ZZ999-101.JPG" publish-date-ap="Dec. 11, 2020" publish-date-jss="2020-12-11T09:51:52" term-name="Know Your Military" term-url="http://www.defense.gov/Search-Results/Term/2580/know-your-military/">
               </adaptive-blog-card>
               <adaptive-blog-card :has-terms="true" :show-image="true" article-id="2422546" article-title="Healthy Holidays: How To Gather Safely During a Pandemic" article-url="https://www.defense.gov/Explore/Inside-DOD/Blog/Article/2422546/healthy-holidays-how-to-gather-safely-during-a-pandemic/" image-caption="" image-url="https://media.defense.gov/2020/Nov/16/2002536991/1280/1280/0/201127-F-PO640-0004.JPG" publish-date-ap="Nov. 20, 2020" publish-date-jss="2020-11-20T11:11:00" term-name="Observances" term-url="http://www.defense.gov/Search-Results/Term/2587/observances/">
               </adaptive-blog-card>
              </feature-template>
             </div>
             <div class="load-more-wrapper">
              <a class="btn-show-more btn btn-default btn-circle-hover hide">
               Load
            More
               <span>
               </span>
              </a>
             </div>
            </div>
            <!-- Want to keep all script blocks out of templates, including
    divs taken over by vue, such as blogFeatureGrid above-->
            <script src="https://s7.addthis.com/js/250/addthis_widget.js#pubid=" type="text/javascript">
             var addthis_config = {
        data_use_flash: false,
        data_use_cookies: false,
        ui_508_compliant: true
    }
            </script>
            <style>
             .blog-feature-grid .pull-title {
        display: none;
    }
            </style>
            <script type="text/javascript">
             $(document).ready(function () {
        //InitLoadMore(2312, '&TabId=421&language=en-US');
       $('.spinner3').fadeOut('fast');
    });
            </script>
            <!-- This can be used to contain items in a programmable reflex-grid
    NOTE: this is DEPRECATED, use <card-layout>.  Change is for naming
    purposes, but of course, card-layout is now getting improvements.
    -->
            <script id="vue-feature-template" type="text/x-template">
             <div class="feature-template">
        <div :class="'feature-template-container' + (removeGrid ? '' : ' dgov-grid dgov-grid-full')">
            <slot></slot>
        </div>
        <div class="more-row" v-if="thereAreMoreToView()">
            <a class="btn btn-default btn btn-insidedod btn-insidedod-ghost" v-on:click="viewMore" :title="moreText">Load More</a>
        </div>
        <div class="bottom-target"></div>
    </div>
            </script>
            <script type="text/javascript">
             (function () {
        const DEBUG = false;
        if (DEBUG) console.log("this is the feature-template component");
        const tempSel = "";
        const tempUse = tempSel ? tempSel : "#vue-feature-template";
        if (DEBUG) console.log("f-t20: passed in selector for template div", tempSel)
        if (DEBUG) console.log("f-121: selector template div to use", tempUse);
        const tempEl = $(tempUse)[0];
        if (DEBUG) console.log("f-t15: template element", tempEl);

        ///////
        //
        //  Different layouts
        //

        //
        // Feature Blog Layout
        //
        const desktopAndLg = {
            full: ["dgov-col-6:feature", "dgov-col-6:feature",
                "dgov-col-4", "dgov-col-4", "dgov-col-4"],
            4: ["dgov-col-12:feature",
                "dgov-col-4", "dgov-col-4", "dgov-col-4"],
            3: ["dgov-col-4", "dgov-col-4", "dgov-col-4"],
            2: ["dgov-col-6:feature", "dgov-col-6:feature"],
            1: ["dgov-col-12:feature"],
        };

        const blog_layouts = {
            desktop: desktopAndLg,
            lg: desktopAndLg,
            md: {
                full: ["dgov-col-12:feature", "dgov-col-6", "dgov-col-6", "dgov-col-6", "dgov-col-6"],
                4: ["dgov-col-12:feature",
                    "dgov-col-12:feature",
                    "dgov-col-6", "dgov-col-6"],
                3: ["dgov-col-12", "dgov-col-12", "dgov-col-12"],
                2: ["dgov-col-12:feature", "dgov-col-12:feature"],
                1: ["dgov-col-12:feature"],
            },
            xs: {
                full: ["dgov-col-12", "dgov-col-12", "dgov-col-12", "dgov-col-12", "dgov-col-12"],
                4: ["dgov-col-12", "dgov-col-12", "dgov-col-12", "dgov-col-12"],
                3: ["dgov-col-12", "dgov-col-12", "dgov-col-12"],
                2: ["dgov-col-12", "dgov-col-12"],
                1: ["dgov-col-12"],
            },
        }
        //
        // Story Layout
        //
        const grid3col = ["dgov-col-4", "dgov-col-4", "dgov-col-4"];
        const grid2col = ["dgov-col-6", "dgov-col-6"];
        const grid1col = ["dgov-col-12"];
        const layout3xn = {
            full: grid3col,
            2: grid2col,
            1: ["dgov-col-12"],
        }
        const layout2xn = {
            full: grid2col,
            1: ["dgov-col-12"],
        }
        const layout1xn = {
            full: grid1col,
        }
        const story_layouts = {
            desktop: layout3xn,
            lg: layout2xn,
            md: layout2xn,
            xs: layout1xn
        }

        Vue.component('feature-template', {
            name: 'feature-template',
            data: function () {
                return {
                    templateSelector: "",
                    numToShow: 5,
                    pageAmount: 6,
                };
            },
            props: {
                "template-mode": String,
                "more-text": String,
                "show-all": {
                    type: Boolean,
                    default: false,
                },
                "remove-grid": {
                    type: Boolean,
                    default: false,
                }
            },
            template: tempEl, // matches ID in template above
            mounted: function () {
                window.addEventListener('resize', this.resize)
                this.resize();
            },
            methods: {
                resize: function () {
                    if (DEBUG) console.log("resizing");
                    this.markChildren();
                },
                getLayout: function (layoutName) {
                    // get particular layout based on layoutName argument
                    // internally: also uses number of children and media size
                    const numItems = this.$children.length;
                    const mediaSize = this.getMediaType();

                    let layouts = this.getLayouts(this.templateMode);

                    /* if there is a set for the mediasize and number, pick it,
                     * otherwise layout remains the starting one above
                     * Note: Every case should have a layout but just in case
                     * this fails more gracefully, probably.
                     */
                    const layoutsForMediaSize = layouts[mediaSize] ? layouts[mediaSize] : layouts.desktop;
                    const lfms = layoutsForMediaSize;
                    if (lfms) {
                        if (lfms[numItems]) {
                            layout = lfms[numItems];
                        } else if (lfms.full) {
                            layout = lfms.full;
                        }
                    }
                    else {
                        // using dgov-grid these are classes for up to five children
                        const default_layout = ["dgov-col-6:feature", "dgov-col-6:feature", "dgov-col-4",
                            "dgov-col-4", "dgov-col-4"];
                        layout = default_layout;
                    }
                    return layout;
                },
                getLayouts: function (layoutName) {
                    let layouts;
                    switch (layoutName) {
                        case "override":
                            layouts = window._dgov_feature_layout_override;
                            break;
                        case "story":
                            layouts = story_layouts;
                            break;
                        case "blog":
                        default:
                            layouts = blog_layouts;
                            break;
                    }
                    return layouts;
                },
                getMediaType: function () {
                    const isXS = window.matchMedia("(max-width: 767px)").matches;
                    const isMD = window.matchMedia("(min-width: 768px) and (max-width: 991px)").matches;
                    const isLG = window.matchMedia("(min-width: 992px) and (max-width: 1199px)").matches;
                    const isGiant = window.matchMedia("(min-width: 1200px)").matches;
                    if (isXS) { return "xs"; }
                    else if (isMD) { return "md"; }
                    else if (isLG) { return "lg"; }
                    else /* if (isGiant) */ { return "desktop" };
                },
                markChildren: function () {
                    const numItems = this.$children.length;
                    const mediaSize = this.getMediaType();

                    let layout = this.getLayout(this.templateMode);

                    const layoutLen = layout.length;
                    for (let i = 0; i < this.$children.length; i++) {
                        const item = this.$children[i]
                        if (DEBUG) console.log('layout', layout.length, layout);

                        if (i >= layout.length) {
                            // hide
                            //item.addClass("hidden-item");
                            const pieces = layout[layout.length - 1].split(":");
                            const reflexClass = pieces[0];
                            const cardType = pieces[1];
                            if (item.setCardType) item.setCardType(cardType); // undefined means default
                            if (item.resetClass) item.resetClass();
                            if (item.addClass) item.addClass(reflexClass);
                        } else {
                            const pieces = layout[i].split(":");
                            const reflexClass = pieces[0];
                            const cardType = pieces[1]; // might be undefined
                            if (DEBUG) console.log("f-t85:", pieces, reflexClass, cardType);
                            if (item.setCardType) item.setCardType(cardType); // undefined means default
                            if (item.resetClass) item.resetClass();
                            if (item.addClass) item.addClass(reflexClass);
                        }

                        if (!this.showAll && (i >= this.numToShow)) {
                            if (item.addClass) item.addClass("hidden-item");
                        }

                    }
                },
                thereAreMoreToView: function () {
                    if (!this.showAll && (this.numToShow < this.$children.length)) {
                        return true;
                    }
                    else {
                        return false;
                    }
                },
                viewMore: function () {
                    // view more!
                    this.numToShow += this.pageAmount;
                    if (DEBUG) console.log("viewMore event, numToShow", this.numToShow);
                    this.resize();
                    setTimeout(function () {
                        const targel = $('.bottom-target')[0];
                        if (targel.scrollIntoView) {
                            targel.scrollIntoView(false);
                        }
                    }, 100);
                },
            }
        });
    })();
            </script>
            <style>
             .feature-template .dgov-grid.feature-template-container .hidden-item {
    display:none;
}
.feature-grid.alist.stories .feature-template .item a.title,
.feature-grid.alist.stories .feature-template .item a.title:link {
    font-size:1.4rem;
}

.more-row {
    display: flex;
    align-items: center;
    flex-direction: column;
    padding: 15px;
}

/* Note: this relates to lack of encapsulation where
    Dashboard applies .list class to parent container.  Would be better
    to have an event so that the card code 'knows' the card is in 'list'
    mode.  This rule isn't needed however, but is documentation since this
    may be an issue if the structure changes to include future features.
    Special rule is in story-card, may be moved or similar for other types
    of cards.    */
.alist.stories.list .feature-template .feature-template-container {
    display:block;
}


.more-row {
    display: flex;
    align-items: center;
    flex-direction: column;
    padding: 15px;
}

/*.feature-template-container {
    display: flex;
    flex-direction: row;
}*/
            </style>
            <script id="vue-adaptive-blog-card" type="text/x-template">
             <div class="adaptive-item-card" v-bind:class="classes.join(' ')">
        <!-- 'feature' CardType -->
        <featured-blog-card v-if="cardType=='feature'"
                            :show-image="showImage"
                            :has-terms="hasTerms"
                            :article-id="articleId"
                            :article-title="articleTitle"
                            :article-url="articleUrl"
                            :can-edit="canEdit"
                            :edit-url="editUrl"
                            :edit-image="editImage"   
                            :image-url="imageUrl"
                            :image-caption="imageCaption"
                            :is-video="isVideo"
                            :term-url="termUrl"
                            :term-name="termName"
                            :publish-date-jss="publishDateJss"
                            :publish-date-ap="publishDateAp">
            <slot></slot>
        </featured-blog-card>
        <!-- Default Card -->
        <blog-card v-else
                   :show-image="showImage"
                   :has-terms="hasTerms"
                   :article-id="articleId"
                   :article-title="articleTitle"
                   :article-url="articleUrl"
                   :can-edit="canEdit"
                    :edit-url="editUrl"
                    :edit-image="editImage"   
                   :image-url="imageUrl"
                   :image-caption="imageCaption"
                   :is-video="isVideo"
                   :term-url="termUrl"
                   :term-name="termName"
                   :publish-date-jss="publishDateJss"
                   :publish-date-ap="publishDateAp">
            <slot></slot>
        </blog-card>
    </div>
            </script>
            <script type="text/javascript">
             (function () {
        const DEBUG = false;
        if (DEBUG) console.log("this is the blog-card (default card) component");
        const tempSel = "";
        const tempUse = tempSel ? tempSel : "#vue-adaptive-blog-card";
        if (DEBUG) console.log("s-s13:", tempSel, tempUse);
        const tempEl = $(tempUse)[0];
        if (DEBUG) console.log("s-s15:", tempEl);
        Vue.component('adaptive-blog-card', {
            name: 'adaptive-blog-card',
            data: function () {
                return {
                    templateSelector: "",
                    classes: [],
                    cardType: null,
                };
            },
            props: [
                "article-id",
                "article-url",
                "can-edit",
                "edit-image",
                "edit-url",
                "image-caption",
                "image-url",
                "is-video",
                "show-image",
                "article-title",
                "has-terms",
                "term-url",
                "term-name",
                "publish-date-jss",
                "publish-date-ap",
            ],
            template: tempEl, // el that matches ID in template OR override passed in
            methods: {
                addClass: function (newClass) {
                    this.classes.push(newClass);
                },
                resetClass: function () {
                    this.classes = [];
                },
                setCardType: function (cardType) {
                    // we only do one card type so ignore.  This is an event from the layout
                    // for the adaptive-card.
                    this.cardType = cardType;
                    if (DEBUG) console.log("set this.cardType", this.cardType);

                }
            },
        });

    })();
            </script>
            <script id="vue-featured-blog-card" type="text/x-template">
             <div class="featured-item-card" v-bind:class="classes.join(' ')"
         v-on:mouseover="hoverOn"
         v-on:mouseleave="hoverOff">
        <div class="item blog-item explore-item dgov-card dgov-card-2" v-bind:class="itemClasses()">
                <div class="poster-outer">
                    <div class="poster item-card-poster" v-bind:class="{'video-wrap-container':isVideo}">
                        <a :href="articleUrl" title="imageCaption">
                            <span v-if="isVideo">
                                <img src="/Portals/_default/Skins/DGOV2/Resources/img/play-default.png" class="defaultVideoOverlay">
                                <img src="/Portals/_default/Skins/DGOV2/Resources/img/play-hover.png" class="hoverVideoOverlay">
                            </span>
                            <div v-bind:style="{ backgroundImage: 'url('+imageUrl+')' }">
                                <img class="visible-print" :src="imageUrl" />
                            </div>
                        </a>
                        <slot></slot> <!-- for edit pencil -->
                        <div class="title-bar">
                            <a class="title" :href="articleUrl">
                                <span v-if="isVideo" class="sr-only">Video: </span>
                                {{articleTitle}}
                            </a>
                        </div>

                    </div>
                </div>
                <div class="item-card-info" :data-url="articleUrl">
                    <!-- moved up <div class="title-bar"> <a class="title" :href="articleUrl"> {{articleTitle}} </a> </div>-->
                    <div class="secondary-bar">
                        <div class="category-block">
                            <div class="cat-container">
                                <div class="cat-wrap">
                                    <!--<a class="category" href=""><span></span></a>-->
                                    <a class="category" :href="termUrl"><span>{{termName}}</span></a>
                                </div>
                            </div>
                        </div>
                        <div class="social-time-block">
                            <div class="social-time-container">
                                <div class="vcenter-hright-content">
                                    <div class="social">
                                        <div class="addthis_toolbox addthis_default_style social-inner" :addthis:url="articleUrl">
                                            <a class="addthis_button_facebook social-link"
                                                title="Facebook" href="#"><span class="fa fa-facebook"></span></a>
                                            <a class="addthis_button_twitter social-link" title="Twitter" href="#">
                                                <span class="fa fa-twitter"></span>
                                            </a>
                                            <div class="atclear"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="vcenter-hright-content">
                                    <div class="time">
                                        <time :data-dateago="publishDateJss" :data-dateap="publishDateAp">
                                        {{publishDateAp}}
                                        </time>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div style="clear:both"></div>
            </div>
    </div>
            </script>
            <script type="text/javascript">
             (function () {
        const DEBUG = false;
        if (DEBUG) console.log("this is the featured-item-card component");
        const tempSel = "";
        const tempUse = tempSel ? tempSel : "#vue-featured-blog-card";
        if (DEBUG) console.log("s-s13:", tempSel, tempUse);
        const tempEl = $(tempUse)[0];
        if (DEBUG) console.log("s-s15:", tempEl);
        Vue.component('featured-blog-card', {
            name: 'featured-blog-card',
            data: function () {
                return {
                    templateSelector: "",
                    classes: [],
                    hover: false,
                };
            },
            props: [
                "article-id",
                "article-url",
                "can-edit",
                "edit-image",
                "edit-url",
                "image-caption",
                "image-url",
                "is-video",
                "show-image",
                "article-title",
                "has-terms",
                "term-url",
                "term-name",
                "publish-date-jss",
                "publish-date-ap",
            ],
            template: tempEl, // el that matches ID in template OR override passed in
            methods: {
                addClass: function (newClass) {
                    this.classes.push(newClass);
                },
                hoverOn: function () {
                    if (DEBUG) console.log("fic106: hover on");
                    // css :hover solution is not currently used... maybe tricky
                    // this approach is borrowed from the current non-vue way this is done
                    this.hover = true;
                },
                hoverOff: function () {
                    if (DEBUG) console.log("fic-110: hover off");
                    this.hover = false;
                },
                itemClasses: function () {
                    let classes = 'item-' + this.articleId;
                    if (this.hover) {
                        classes += " hover";
                    }
                    if (DEBUG) console.log("f-i-c115:", classes);
                    return classes;
                },
                resetClass: function () {
                    this.classes = [];
                },
                setCardType: function (cardType) {
                    // we only do one card type so ignore.  This is an event from the layout
                    // for the adaptive-card.
                    if (DEBUG) console.log("ignoring card type:", cardType);
                }
            },
        });

    })();
            </script>
            <!--
    Note:
        Other parts of file can be put in component directory.
        In this case so I could view it side by  side with the HTML template for
        CSS debugging.
-->
            <style>
             [v-cloak] > * {
        display: none
    }

    .flex-div {
        flex: 1;
    }

    .vcenter-hright-content {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-end;
    }

    .featured-item-card .item.explore-item.blog-item {
        text-align: center;
        padding-bottom: 0;
        overflow: hidden;
        border-top-left-radius: 4px;
        border-top-right-radius: 4px;
    }

    .featured-item-card .item.explore-item.blog-item a[title="Edit"] {
        position:absolute;
        z-index: 9;
        top: 1em;
        right: 1em;
        bottom: auto;
        padding: .25em;
        line-height: 16px;
        background-color: rgba(255,255,255,.3);
        border-radius: 5px;
        border: solid rgba(0,0,0,0.4) 1px;
    }

    /*  The top selector is for when the title-bar overlays the images, the bottom, when it's below.
        It is the same with several of the following rules.
    */
    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .title-bar,
    .featured-item-card .item.explore-item.blog-item .item-card-info .title-bar {
        background: linear-gradient(99deg, rgba(0,0,0,1) 0%, rgba(0,0,0,0.5) 100%);
        padding: 20px;
        position: absolute;
        top: auto;
        bottom: -1px;
        transform: scale(1); /* Counteract div targeted rule for zooming image */
        text-align: left;
    }

    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .title-bar .title,
    .featured-item-card .item.explore-item.blog-item .item-card-info .title-bar .title {
        margin: 0;
        padding: 0;
        font-size: 1.4rem;
        font-family: Lato, serif;
        font-weight: 700;
        line-height: 1.2;
        color: #fff;
        text-rendering: optimizelegibility;
        display: inline-block;
    }

    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar {
        background: rgba(255,255,255,.9);
        padding: 10px 20px;
        display: flex;
        align-items: center;
    }

    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .category-block {
        flex:1;
    }
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .social-time-block {

    }


    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar .cat-container,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .cat-container {
        display: flex;
        height: 100%;
        flex-direction: column;
        justify-content: center;
    }

    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar .cat-container .cat-wrap,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .cat-container .cat-wrap {
    }

    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar .category,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .category {
        font-size: 20px;
        color: #893636;
    }

/* social-date-container: social buttons and date container share  space in reflex-grid */
    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar .social-time-container,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .social-time-container {
        display: flex;
        justify-content: flex-end;
    }


    .featured-item-card .item.explore-item.blog-item .social .social-inner .social-link {
        width: 35px;
        height: 35px;
        min-width: 35px;
        min-height: 35px;
        font-size: 18px;
        margin-right: 15px;
        margin-bottom: 0;
    }

    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar .time,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .time {
        display: block;
        float: none; /*right;*/
        margin-top: 0;
        font-size: 16px;
        color: #717171;
    }


    .alist.stories .featured-item-card .item time {
        order: unset;
        font-size: 16px;
        /*padding-top: 10px;*/
        padding: 0;
    }


    .featured-item-card .item.explore-item.blog-item .bar {
        display: flex;
        align-items: center;
    }

    .featured-item-card .item.explore-item.blog-item .bar .expanse {
        flex: 1;
    }

    .featured-item-card .item.explore-item.blog-item .social .social-inner .blog-social-block {
        margin-top: 10px;
        display: flex;
    }

    .featured-item-card .item.explore-item.blog-item .poster.item-card-poster {
        float: none;
        width: 100%;
        display: block;
        border-radius: 4px 4px 0 0;
    }

    .featured-item-card .item.explore-item.blog-item a.category,
    .featured-item-card .item.explore-item.blog-item a.category:link {
        text-align: left;
        font-size: 20px;
        color: #893636;
        margin: auto;
        position: relative;
        display: block;
        text-transform: none;
        float: none;
    }
            </style>
            <script id="vue-blog-card" type="text/x-template">
             <div class="item-card" v-bind:class="classes.join(' ')"
         v-on:mouseover="hoverOn"
         v-on:mouseleave="hoverOff">
        <div class="blog-item-card item explore-item blog-item blog-item-alt"
             v-bind:class="itemClasses()">
            <div v-if="showImage" class="poster-outer">
                <div class="poster blog-card dgov-card dgov-card-2" v-bind:class="{'video-wrap-container':isVideo}">
                    <a :href="articleUrl" :title="imageCaption">
                        <span v-if="isVideo">
                            <img src="/Portals/_default/Skins/DGOV2/Resources/img/play-default.png" class="defaultVideoOverlay">
                            <img src="/Portals/_default/Skins/DGOV2/Resources/img/play-hover.png" class="hoverVideoOverlay">
                        </span>
                        <div v-bind:style="{ backgroundImage: 'url('+imageUrl+')' }">
                            <img class="visible-print" :src="imageUrl" />
                        </div>
                    </a>
                    <slot></slot>
                </div>
                <blog-card-edit-span :isEditMode="canEdit" :editUrl="editUrl" :imageUrl="editImage"></blog-card-edit-span>
            </div>

            <div class="blog-card" :data-url="articleUrl">
                <a v-if="hasTerms" class="category" :href="termUrl"><span>{{termName}}</span></a>
                <a class="title" :href="articleUrl"><span v-if="isVideo" class="sr-only">Video: </span>{{articleTitle}}</a>
            </div>
            <div class="vertical-filler"></div>

            <div class="bar">
                <div class="expanse"></div>
                <div class="social">
                    <div class="addthis_toolbox addthis_default_style social-inner" :addthis:url="articleUrl">
                        <div class="blog-social-block">
                            <a class="addthis_button_facebook social-link" title="Facebook" href="#">
                                <span class="fa fa-facebook"></span>
                            </a>
                            <a class="addthis_button_twitter social-link" title="Twitter" href="#">
                                <span class="fa fa-twitter"></span>
                            </a>
                        </div>
                        <div class="atclear"></div>
                    </div>
                </div>
                <div class="time">
                    <time class="time-display" :data-dateago="publishDateJss" :data-dateap="publishDateAp">
                        {{publishDateAp}}
                    </time>
                </div>
                <div class="expanse"></div>
            </div>

            <div style="clear:both"></div>
        </div>
    </div>
            </script>
            <!--  here is a card-edit-span element... need to share this, but the vue component token is not a good way
    because it would be multiply imported every time it's used by a card.  It should be linked with "registerscript"
    -->
            <script id="vue-blog-card-edit-span-template" type="text/x-template">
             <a title="Edit" v-if="isEditMode" class="blog-card-edit-span" :href="editUrl" alt="edit link">
        <img title="Edit" :src="imageUrl" alt="edit pencil" />
    </a>
            </script>
            <script type="text/javascript">
             (function () {
        const DEBUG = false;
        if (DEBUG) console.log("this is the item-card (default card) component");
        const tempSel = "";
        const tempUse = tempSel ? tempSel : "#vue-blog-card";
        if (DEBUG) console.log("s-s50: template selector", tempSel, tempUse);
        const tempEl = $(tempUse)[0];

        if (DEBUG) console.log("s-s53: template", tempEl);

        //$('.blog-item-card.item.explore-item.blog-item').hover(function () {
        //    console.log("i-c56: hovering", this)
        //    $(this).addClass('hover');
        //}, function () {
        //    $(this).removeClass('hover');
        //});

        Vue.component('blog-card', {
            name: 'blog-card',
            data: function () {
                return {
                    templateSelector: "",
                    classes: [],
                    hover: false,
                };
            },
            props: [
                "article-id",
                "article-url",
                "can-edit",
                "edit-image",
                "edit-url",
                "image-caption",
                "image-url",
                "show-image",
                "article-title",
                "has-terms",
                "is-video",
                "term-url",
                "term-name",
                "publish-date-jss",
                "publish-date-ap",
            ],
            template: tempEl, // el that matches ID in template OR override passed in
            mounted: function () {
                if (DEBUG) console.log("v-ic76: props", this.articleId, JSON.stringify(this.$props, null, 2));
                // Done this the vue way, tested with this, left for in place documentation
                // This is more or less how it's done elsewhere currently.
                //console.log("ic96: mounted")
                //$(this.$el).hover(function (ev) {
                //    console.log("hover")
                //    $(this).closest(".item").addClass('hover');
                //});
            },
            methods: {
                addClass: function (newClass) {
                    this.classes.push(newClass);
                },
                hoverOn: function () {
                    //if (DEBUG) console.log("i-c106: hover on");
                    // css :hover solution is not currently used... maybe tricky
                    // this approach is borrowed from the current non-vue way this is done
                    this.hover = true;
                },
                hoverOff: function () {
                    //if (DEBUG) console.log("ic-110: hover off");
                    this.hover = false;
                },
                itemClasses: function () {
                    let classes = 'item-' + this.articleId;
                    if (this.hover) {
                        classes += " hover";
                    }
                    if (DEBUG) console.log("i-c115:", classes);
                    return classes;
                },
                resetClass: function () {
                    this.classes = [];
                },
                setCardType: function (cardType) {
                    // we only do one card type plus so ignore.  This is an event from the layout
                    // for the adaptive-card.

                    if (DEBUG) console.log("ignoring card type:", cardType);
                }
            },
        });

        Vue.component('blog-card-edit-span', {
            name: 'blog-card-edit-span',
            template: "#vue-blog-card-edit-span-template",
            props: ["editUrl", "imageUrl", "isEditMode"],
        });


    })();
            </script>
            <style>
             /* LIST */
    .alist.stories.blogs.list .blog-item-card.item.explore-item .poster-outer {
        display: none;
    }


    .item-card {
        height: 100%;
        background-color: #fff;
        border-radius: 4px;
    }

    .blog-item-card.item.explore-item.blog-item {
        text-align: center;
        padding-bottom: 0px;
        display: flex;
        flex-direction: column;
        height: 100%;
    }

        .blog-item-card.item.explore-item.blog-item a[title="Edit"] {
            position: absolute;
            z-index: 9;
            top: 1em;
            right: 1em;
            bottom: auto;
            padding: .25em;
            line-height: 16px;
            background-color: rgba(255,255,255,.3);
            border-radius: 5px;
            border: solid rgba(0,0,0,0.4) 1px;
        }

    .item-card .blog-item-card.item.explore-item.blog-item .blog-card {
        display: flex;
        flex-direction: column;
        padding: 20px 25px 0px;
        flex: 1;
    }


    .item-card .blog-item-card.item.explore-item.blog-item .vertical-filler {
        flex: 1;
    }

    .blog-item-card.item.explore-item.blog-item .bar {
        display: flex;
        align-items: center;
        padding-bottom: 25px;
    }

        .blog-item-card.item.explore-item.blog-item .bar .expanse {
            flex: 1;
        }

    .blog-item-card.item.explore-item.blog-item .social .social-inner .blog-social-block {
        margin-top: 10px;
        display: flex;
    }

    .blog-item-card.item.explore-item.blog-item .social .social-inner .social-link {
        width: 35px;
        height: 35px;
        font-size: 18px;
        margin-right: 15px;
    }

    .blog-item-card.item.explore-item.blog-item time {
        padding: 0;
        font-size: 16px;
        color: #717171;
    }

    .blog-item-card.item.explore-item.blog-item .poster.blog-card {
        float: none;
        width: 100%;
        display: block;
        border-radius: 4px;
        padding: 0;
    }

    .alist.stories .item a.title, .alist.stories .item a.title:link {
        font-size: 1.4rem;
    }

    .blog-item-card.item.explore-item.blog-item a.category,
    .blog-item-card.item.explore-item.blog-item a.category:link {
        text-align: center;
        font-size: 20px;
        color: #893636;
        margin: auto;
        position: relative;
        display: block;
        margin-top: 0;
        margin-bottom: 10px;
        text-transform: none;
        float: none;
    }

    /* edit pencil in image */
    .blog-item-card.item.explore-item .blog-card-edit-span {
        position: absolute;
        z-index: 9;
        top: 25px;
        right: 25px;
        bottom: auto;
        padding: .25em;
        line-height: 16px;
        background-color: rgba(255,255,255,.3);
        border-radius: 5px;
        border: solid rgba(0,0,0,0.4) 1px;
    }

    .blog-item-card.item.explore-item .blog-card-edit-span img {
        position: unset;
        left: auto;
    }

    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
        /* IE10+ CSS styles go here
        Some nice spacing with flexbox needs simplification to do in IE, this is
        not so bad though.
    */

        /*.item-card {
        display: block;
    }*/

        .blog-item-card.item.explore-item.blog-item {
            display: block;
        }
    }
            </style>
            <!--
    This fragment compiles a Vue template located in a div with
    an id of "blogFeatureGrid-2312".
-->
            <script type="text/javascript">
             (function () {
        const DEBUG = false;
        if (DEBUG) console.log("m-i2: vue:initialize:blogFeatureGrid");
        document.addEventListener("DOMContentLoaded", function () {
            if (DEBUG) console.log("initializing vue on blogFeatureGrid in module 2312")
            const elTarg = "#blogFeatureGrid-2312";

            // supports sending in "data" and "methods" by naming convention
            let modData = {};
            let modMethods = {};
            const typeofModData = typeof(blogFeatureGrid2312_data);
            const typeofModMethods = typeof(blogFeatureGrid2312_methods);

            if (typeofModData != "undefined") {
                modData = blogFeatureGrid2312_data;
            }
            if (typeofModMethods != "undefined") {
                modMethods = blogFeatureGrid2312_methods;
            }
            const el = $(elTarg)[0];
            const moduleVue = new Vue({
                el: el,
                mounted: function () {
                    // call the callback if exists.
                    // naming vueToken_mounted_2312
                    if (DEBUG) console.log("cb?", typeof (vueToken_mounted_2312));
                    if (typeof (vueToken_mounted_2312) === "function" ) {
                        const mountedCB = vueToken_mounted_2312;
                        if (mountedCB) {
                            // currently no arguments, just a time event, e.g. when slick
                            // could be initialized.
                            this.$nextTick(mountedCB);
                        }
                    }
                },
                data: modData,
                methods: modMethods,
            });

        });
    })();
            </script>
           </div>
          </div>
          <div class="dgov-grid">
           <div class="dgov-col-md-12" style="text-align: center;">
            <a class="btn btn-insidedod" href="/Explore/InsideDOD/Listing/">
             View More
            </a>
           </div>
          </div>
          <!-- End_Module_2312 -->
         </div>
        </div>
        <!--end of empty container -->
       </div>
       <div class="DnnModule DnnModule-DNN_HTML DnnModule-2314">
        <a name="2314">
        </a>
        <div class="empty-container base-container">
         <div id="dnn_ctr2314_ContentPane">
          <!-- Start_Module_2314 -->
          <script>
           $(document).ready(function() {
		$('.nav-tabs > li > a').click(function(event){
		event.preventDefault();
					
		
		var active_tab_selector = $('.nav-tabs > li.active > a').attr('href');					
					
		
		var actived_nav = $('.nav-tabs > li.active');
		actived_nav.removeClass('active');
					
		
		$(this).parents('li').addClass('active');
					
		
		$(active_tab_selector).removeClass('active');
		$(active_tab_selector).addClass('hide');
					
		
		var target_tab_selector = $(this).attr('href');
		$(target_tab_selector).removeClass('hide');
		$(target_tab_selector).addClass('active');
	     });
	  });
          </script>
          <div class="nav-tabs hide" id="blog-sort-bar">
           <div class="DNNModuleContent ModDNNHTMLC" id="dnn_ctr2314_ModuleContent">
            <div class="Normal" id="dnn_ctr2314_HtmlModule_lblContent">
             <div class="dgov-grid dgov-grid-bleed dgov-justify-center">
              <div class="dgov-col-sm-auto dgov-col-xs-12">
               <p>
                Sort By Topic:
               </p>
              </div>
              <div class="dgov-col-sm-auto dgov-col-xs-12 text-right">
               <div class="buttons">
                <ul class="nav nav-tabs">
                 <li class="active">
                  <a class="btn btn-default btn-default-ghost" href="#blog-armed">
                   Armed With Science
                  </a>
                 </li>
                 <li>
                  <a class="btn btn-default btn-default-ghost" href="#blog-kym">
                   Know Your Military
                  </a>
                 </li>
                </ul>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
          <!-- End_Module_2314 -->
         </div>
        </div>
        <!--end of empty container -->
       </div>
       <div class="DnnModule DnnModule-ArticleCSDashboard DnnModule-2326">
        <a name="2326">
        </a>
        <div class="empty-container base-container">
         <div id="dnn_ctr2326_ContentPane">
          <!-- Start_Module_2326 -->
          <div class="blog-list-each hide" id="blog-armed">
           <h2 class="pull-title">
            Armed With Science
           </h2>
           <div class="DNNModuleContent ModArticleCSDashboardC" id="dnn_ctr2326_ModuleContent">
            <div id="dnn_ctr2326_Dashboard_ph">
             <style>
              [v-cloak], [v-cloak] > * {
        display: none !important;
    }
             </style>
             <div class="blog-grid alist stories adash" id="blogGrid-2326" v-cloak="">
              <h2 class="pull-title">
               Armed With Science
              </h2>
              <div class="alist-inner">
               <card-layout :more-available-callback="moreAvailableCallback" :no-empty-rows="true" :num-to-show="9" :page-amount="9" more-text="View More" template-mode="story">
                <adaptive-blog-card :has-terms="true" :show-image="true" article-alt="Service members looking at computer screen." article-id="2082161" article-title="Who Wants to Work With a Hacker?" article-url="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2082161/who-wants-to-work-with-a-hacker/" article-url-or-link="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2082161/who-wants-to-work-with-a-hacker/" article-url-or-link-absolute="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2082161/who-wants-to-work-with-a-hacker/" content-type-name="Blog" content-type-val="515" image-caption="" image-url="https://media.defense.gov/2020/Feb/12/2002248391/1280/1280/0/200205-M-VG714-0054.JPG" open-in-new="" publish-date-ap="Feb. 12, 2020" publish-date-jss="2020-02-12T12:45:00" term-name="Armed With Science" term-url="http://www.defense.gov/Search-Results/Term/2586/armed-with-science/">
                 <div slot="summary">
                  The Defense Department’s Cyber Crime Center Vulnerability Disclosure Program welcomes certain hackers to keep them on their toes.
                 </div>
                </adaptive-blog-card>
                <adaptive-blog-card :has-terms="true" :show-image="true" article-alt="An airman straps a simulated Ebola patient to a litter during a Transport Isolation System training exercise at Joint Base Charleston, S.C." article-id="2064716" article-title="Defense Research Contributes to Ebola Vaccine Effort" article-url="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2064716/defense-research-contributes-to-ebola-vaccine-effort/" article-url-or-link="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2064716/defense-research-contributes-to-ebola-vaccine-effort/" article-url-or-link-absolute="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2064716/defense-research-contributes-to-ebola-vaccine-effort/" content-type-name="Blog" content-type-val="515" image-caption="" image-url="https://media.defense.gov/2020/Jan/28/2002239887/1280/1280/0/191023-F-YM277-1143A.JPG" open-in-new="" publish-date-ap="Jan. 24, 2020" publish-date-jss="2020-01-24T09:21:00" term-name="Armed With Science" term-url="http://www.defense.gov/Search-Results/Term/2586/armed-with-science/">
                 <div slot="summary">
                  The approval of an Ebola vaccine represents the culmination of nearly two decades of efforts by DOD teams and the public and private sectors.
                 </div>
                </adaptive-blog-card>
                <adaptive-blog-card :has-terms="true" :show-image="true" article-alt="A computer graphic uses lines and codes to portray a  human head." article-id="2067593" article-title="Artificial Intelligence Research and Development" article-url="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2067593/artificial-intelligence-research-and-development/" article-url-or-link="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2067593/artificial-intelligence-research-and-development/" article-url-or-link-absolute="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2067593/artificial-intelligence-research-and-development/" content-type-name="Blog" content-type-val="515" image-caption="A computer graphic uses lines and codes to portray a  human head." image-url="https://media.defense.gov/2019/Dec/03/2002219354/1280/1280/0/191203-A-ZZ999-001.JPG" open-in-new="" publish-date-ap="Dec. 2, 2019" publish-date-jss="2019-12-02T00:00:00" term-name="Armed With Science" term-url="http://www.defense.gov/Search-Results/Term/2586/armed-with-science/">
                 <div slot="summary">
                  I. Vision for AI ResearchArtificial Intelligence, or AI, remains in an age of discovery. To create a pipeline of breakthroughs for tomorrow’s economy and security, we must deepen our commitment to AI research and engineering, as part of a reinvigoration of research and invention in the United States.A common idea spans the work of Vannevar Bush, director of defense
                 </div>
                </adaptive-blog-card>
               </card-layout>
               <div class="more-page-button" v-if="!moreAvailable">
                <a class="btn btn-default btn-default-ghost" href="http://www.defense.gov/Search-Results/" v-if="false">
                 <span>
                  See More
                 </span>
                </a>
               </div>
              </div>
             </div>
             <!-- Want to keep all script blocks out of templates, including
    divs taken over by vue, such as blogFeatureGrid above -->
             <script src="https://s7.addthis.com/js/250/addthis_widget.js#pubid=" type="text/javascript">
              var addthis_config = {
        data_use_flash: false,
        data_use_cookies: false,
        ui_508_compliant: true
    }
             </script>
             <style>
              [v-cloak],
    [v-cloak] > * {
        display: none
    }

    .blog-grid .pull-title {
        display: none;
    }

    .blog-grid.alist.stories.adash .more-page-button {
        margin-top: 2rem;
        display: flex;
        width: 100%;
        justify-content: center;
    }
             </style>
             <script type="text/javascript">
              (function () {

        const DEBUG = false;
        if (DEBUG) console.log("Loading Blog Grid Dashboard");

        // this is detected by vue initialize based on naming convention
        // using the initialize argument
        window.blogGrid2326_data = {
            moreAvailable: false,
        };

        window.blogGrid2326_methods = {
            moreAvailableCallback: function (moreAvail) {
                if (DEBUG) console.log("DGOV2 BG: moreAvail", moreAvail);
                this.moreAvailable = moreAvail;
            },
        }
    })();
             </script>
             <script id="vue-adaptive-blog-card" type="text/x-template">
              <div class="adaptive-item-card" v-bind:class="classes.join(' ')">
        <!-- 'feature' CardType -->
        <featured-blog-card v-if="cardType=='feature'"
                            :show-image="showImage"
                            :has-terms="hasTerms"
                            :article-id="articleId"
                            :article-title="articleTitle"
                            :article-url="articleUrl"
                            :can-edit="canEdit"
                            :edit-url="editUrl"
                            :edit-image="editImage"   
                            :image-url="imageUrl"
                            :image-caption="imageCaption"
                            :is-video="isVideo"
                            :term-url="termUrl"
                            :term-name="termName"
                            :publish-date-jss="publishDateJss"
                            :publish-date-ap="publishDateAp">
            <slot></slot>
        </featured-blog-card>
        <!-- Default Card -->
        <blog-card v-else
                   :show-image="showImage"
                   :has-terms="hasTerms"
                   :article-id="articleId"
                   :article-title="articleTitle"
                   :article-url="articleUrl"
                   :can-edit="canEdit"
                    :edit-url="editUrl"
                    :edit-image="editImage"   
                   :image-url="imageUrl"
                   :image-caption="imageCaption"
                   :is-video="isVideo"
                   :term-url="termUrl"
                   :term-name="termName"
                   :publish-date-jss="publishDateJss"
                   :publish-date-ap="publishDateAp">
            <slot></slot>
        </blog-card>
    </div>
             </script>
             <script type="text/javascript">
              (function () {
        const DEBUG = false;
        if (DEBUG) console.log("this is the blog-card (default card) component");
        const tempSel = "";
        const tempUse = tempSel ? tempSel : "#vue-adaptive-blog-card";
        if (DEBUG) console.log("s-s13:", tempSel, tempUse);
        const tempEl = $(tempUse)[0];
        if (DEBUG) console.log("s-s15:", tempEl);
        Vue.component('adaptive-blog-card', {
            name: 'adaptive-blog-card',
            data: function () {
                return {
                    templateSelector: "",
                    classes: [],
                    cardType: null,
                };
            },
            props: [
                "article-id",
                "article-url",
                "can-edit",
                "edit-image",
                "edit-url",
                "image-caption",
                "image-url",
                "is-video",
                "show-image",
                "article-title",
                "has-terms",
                "term-url",
                "term-name",
                "publish-date-jss",
                "publish-date-ap",
            ],
            template: tempEl, // el that matches ID in template OR override passed in
            methods: {
                addClass: function (newClass) {
                    this.classes.push(newClass);
                },
                resetClass: function () {
                    this.classes = [];
                },
                setCardType: function (cardType) {
                    // we only do one card type so ignore.  This is an event from the layout
                    // for the adaptive-card.
                    this.cardType = cardType;
                    if (DEBUG) console.log("set this.cardType", this.cardType);

                }
            },
        });

    })();
             </script>
             <script id="vue-featured-blog-card" type="text/x-template">
              <div class="featured-item-card" v-bind:class="classes.join(' ')"
         v-on:mouseover="hoverOn"
         v-on:mouseleave="hoverOff">
        <div class="item blog-item explore-item dgov-card dgov-card-2" v-bind:class="itemClasses()">
                <div class="poster-outer">
                    <div class="poster item-card-poster" v-bind:class="{'video-wrap-container':isVideo}">
                        <a :href="articleUrl" title="imageCaption">
                            <span v-if="isVideo">
                                <img src="/Portals/_default/Skins/DGOV2/Resources/img/play-default.png" class="defaultVideoOverlay">
                                <img src="/Portals/_default/Skins/DGOV2/Resources/img/play-hover.png" class="hoverVideoOverlay">
                            </span>
                            <div v-bind:style="{ backgroundImage: 'url('+imageUrl+')' }">
                                <img class="visible-print" :src="imageUrl" />
                            </div>
                        </a>
                        <slot></slot> <!-- for edit pencil -->
                        <div class="title-bar">
                            <a class="title" :href="articleUrl">
                                <span v-if="isVideo" class="sr-only">Video: </span>
                                {{articleTitle}}
                            </a>
                        </div>

                    </div>
                </div>
                <div class="item-card-info" :data-url="articleUrl">
                    <!-- moved up <div class="title-bar"> <a class="title" :href="articleUrl"> {{articleTitle}} </a> </div>-->
                    <div class="secondary-bar">
                        <div class="category-block">
                            <div class="cat-container">
                                <div class="cat-wrap">
                                    <!--<a class="category" href=""><span></span></a>-->
                                    <a class="category" :href="termUrl"><span>{{termName}}</span></a>
                                </div>
                            </div>
                        </div>
                        <div class="social-time-block">
                            <div class="social-time-container">
                                <div class="vcenter-hright-content">
                                    <div class="social">
                                        <div class="addthis_toolbox addthis_default_style social-inner" :addthis:url="articleUrl">
                                            <a class="addthis_button_facebook social-link"
                                                title="Facebook" href="#"><span class="fa fa-facebook"></span></a>
                                            <a class="addthis_button_twitter social-link" title="Twitter" href="#">
                                                <span class="fa fa-twitter"></span>
                                            </a>
                                            <div class="atclear"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="vcenter-hright-content">
                                    <div class="time">
                                        <time :data-dateago="publishDateJss" :data-dateap="publishDateAp">
                                        {{publishDateAp}}
                                        </time>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div style="clear:both"></div>
            </div>
    </div>
             </script>
             <script type="text/javascript">
              (function () {
        const DEBUG = false;
        if (DEBUG) console.log("this is the featured-item-card component");
        const tempSel = "";
        const tempUse = tempSel ? tempSel : "#vue-featured-blog-card";
        if (DEBUG) console.log("s-s13:", tempSel, tempUse);
        const tempEl = $(tempUse)[0];
        if (DEBUG) console.log("s-s15:", tempEl);
        Vue.component('featured-blog-card', {
            name: 'featured-blog-card',
            data: function () {
                return {
                    templateSelector: "",
                    classes: [],
                    hover: false,
                };
            },
            props: [
                "article-id",
                "article-url",
                "can-edit",
                "edit-image",
                "edit-url",
                "image-caption",
                "image-url",
                "is-video",
                "show-image",
                "article-title",
                "has-terms",
                "term-url",
                "term-name",
                "publish-date-jss",
                "publish-date-ap",
            ],
            template: tempEl, // el that matches ID in template OR override passed in
            methods: {
                addClass: function (newClass) {
                    this.classes.push(newClass);
                },
                hoverOn: function () {
                    if (DEBUG) console.log("fic106: hover on");
                    // css :hover solution is not currently used... maybe tricky
                    // this approach is borrowed from the current non-vue way this is done
                    this.hover = true;
                },
                hoverOff: function () {
                    if (DEBUG) console.log("fic-110: hover off");
                    this.hover = false;
                },
                itemClasses: function () {
                    let classes = 'item-' + this.articleId;
                    if (this.hover) {
                        classes += " hover";
                    }
                    if (DEBUG) console.log("f-i-c115:", classes);
                    return classes;
                },
                resetClass: function () {
                    this.classes = [];
                },
                setCardType: function (cardType) {
                    // we only do one card type so ignore.  This is an event from the layout
                    // for the adaptive-card.
                    if (DEBUG) console.log("ignoring card type:", cardType);
                }
            },
        });

    })();
             </script>
             <!--
    Note:
        Other parts of file can be put in component directory.
        In this case so I could view it side by  side with the HTML template for
        CSS debugging.
-->
             <style>
              [v-cloak] > * {
        display: none
    }

    .flex-div {
        flex: 1;
    }

    .vcenter-hright-content {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-end;
    }

    .featured-item-card .item.explore-item.blog-item {
        text-align: center;
        padding-bottom: 0;
        overflow: hidden;
        border-top-left-radius: 4px;
        border-top-right-radius: 4px;
    }

    .featured-item-card .item.explore-item.blog-item a[title="Edit"] {
        position:absolute;
        z-index: 9;
        top: 1em;
        right: 1em;
        bottom: auto;
        padding: .25em;
        line-height: 16px;
        background-color: rgba(255,255,255,.3);
        border-radius: 5px;
        border: solid rgba(0,0,0,0.4) 1px;
    }

    /*  The top selector is for when the title-bar overlays the images, the bottom, when it's below.
        It is the same with several of the following rules.
    */
    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .title-bar,
    .featured-item-card .item.explore-item.blog-item .item-card-info .title-bar {
        background: linear-gradient(99deg, rgba(0,0,0,1) 0%, rgba(0,0,0,0.5) 100%);
        padding: 20px;
        position: absolute;
        top: auto;
        bottom: -1px;
        transform: scale(1); /* Counteract div targeted rule for zooming image */
        text-align: left;
    }

    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .title-bar .title,
    .featured-item-card .item.explore-item.blog-item .item-card-info .title-bar .title {
        margin: 0;
        padding: 0;
        font-size: 1.4rem;
        font-family: Lato, serif;
        font-weight: 700;
        line-height: 1.2;
        color: #fff;
        text-rendering: optimizelegibility;
        display: inline-block;
    }

    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar {
        background: rgba(255,255,255,.9);
        padding: 10px 20px;
        display: flex;
        align-items: center;
    }

    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .category-block {
        flex:1;
    }
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .social-time-block {

    }


    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar .cat-container,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .cat-container {
        display: flex;
        height: 100%;
        flex-direction: column;
        justify-content: center;
    }

    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar .cat-container .cat-wrap,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .cat-container .cat-wrap {
    }

    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar .category,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .category {
        font-size: 20px;
        color: #893636;
    }

/* social-date-container: social buttons and date container share  space in reflex-grid */
    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar .social-time-container,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .social-time-container {
        display: flex;
        justify-content: flex-end;
    }


    .featured-item-card .item.explore-item.blog-item .social .social-inner .social-link {
        width: 35px;
        height: 35px;
        min-width: 35px;
        min-height: 35px;
        font-size: 18px;
        margin-right: 15px;
        margin-bottom: 0;
    }

    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar .time,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .time {
        display: block;
        float: none; /*right;*/
        margin-top: 0;
        font-size: 16px;
        color: #717171;
    }


    .alist.stories .featured-item-card .item time {
        order: unset;
        font-size: 16px;
        /*padding-top: 10px;*/
        padding: 0;
    }


    .featured-item-card .item.explore-item.blog-item .bar {
        display: flex;
        align-items: center;
    }

    .featured-item-card .item.explore-item.blog-item .bar .expanse {
        flex: 1;
    }

    .featured-item-card .item.explore-item.blog-item .social .social-inner .blog-social-block {
        margin-top: 10px;
        display: flex;
    }

    .featured-item-card .item.explore-item.blog-item .poster.item-card-poster {
        float: none;
        width: 100%;
        display: block;
        border-radius: 4px 4px 0 0;
    }

    .featured-item-card .item.explore-item.blog-item a.category,
    .featured-item-card .item.explore-item.blog-item a.category:link {
        text-align: left;
        font-size: 20px;
        color: #893636;
        margin: auto;
        position: relative;
        display: block;
        text-transform: none;
        float: none;
    }
             </style>
             <script id="vue-blog-card" type="text/x-template">
              <div class="item-card" v-bind:class="classes.join(' ')"
         v-on:mouseover="hoverOn"
         v-on:mouseleave="hoverOff">
        <div class="blog-item-card item explore-item blog-item blog-item-alt"
             v-bind:class="itemClasses()">
            <div v-if="showImage" class="poster-outer">
                <div class="poster blog-card dgov-card dgov-card-2" v-bind:class="{'video-wrap-container':isVideo}">
                    <a :href="articleUrl" :title="imageCaption">
                        <span v-if="isVideo">
                            <img src="/Portals/_default/Skins/DGOV2/Resources/img/play-default.png" class="defaultVideoOverlay">
                            <img src="/Portals/_default/Skins/DGOV2/Resources/img/play-hover.png" class="hoverVideoOverlay">
                        </span>
                        <div v-bind:style="{ backgroundImage: 'url('+imageUrl+')' }">
                            <img class="visible-print" :src="imageUrl" />
                        </div>
                    </a>
                    <slot></slot>
                </div>
                <blog-card-edit-span :isEditMode="canEdit" :editUrl="editUrl" :imageUrl="editImage"></blog-card-edit-span>
            </div>

            <div class="blog-card" :data-url="articleUrl">
                <a v-if="hasTerms" class="category" :href="termUrl"><span>{{termName}}</span></a>
                <a class="title" :href="articleUrl"><span v-if="isVideo" class="sr-only">Video: </span>{{articleTitle}}</a>
            </div>
            <div class="vertical-filler"></div>

            <div class="bar">
                <div class="expanse"></div>
                <div class="social">
                    <div class="addthis_toolbox addthis_default_style social-inner" :addthis:url="articleUrl">
                        <div class="blog-social-block">
                            <a class="addthis_button_facebook social-link" title="Facebook" href="#">
                                <span class="fa fa-facebook"></span>
                            </a>
                            <a class="addthis_button_twitter social-link" title="Twitter" href="#">
                                <span class="fa fa-twitter"></span>
                            </a>
                        </div>
                        <div class="atclear"></div>
                    </div>
                </div>
                <div class="time">
                    <time class="time-display" :data-dateago="publishDateJss" :data-dateap="publishDateAp">
                        {{publishDateAp}}
                    </time>
                </div>
                <div class="expanse"></div>
            </div>

            <div style="clear:both"></div>
        </div>
    </div>
             </script>
             <!--  here is a card-edit-span element... need to share this, but the vue component token is not a good way
    because it would be multiply imported every time it's used by a card.  It should be linked with "registerscript"
    -->
             <script id="vue-blog-card-edit-span-template" type="text/x-template">
              <a title="Edit" v-if="isEditMode" class="blog-card-edit-span" :href="editUrl" alt="edit link">
        <img title="Edit" :src="imageUrl" alt="edit pencil" />
    </a>
             </script>
             <script type="text/javascript">
              (function () {
        const DEBUG = false;
        if (DEBUG) console.log("this is the item-card (default card) component");
        const tempSel = "";
        const tempUse = tempSel ? tempSel : "#vue-blog-card";
        if (DEBUG) console.log("s-s50: template selector", tempSel, tempUse);
        const tempEl = $(tempUse)[0];

        if (DEBUG) console.log("s-s53: template", tempEl);

        //$('.blog-item-card.item.explore-item.blog-item').hover(function () {
        //    console.log("i-c56: hovering", this)
        //    $(this).addClass('hover');
        //}, function () {
        //    $(this).removeClass('hover');
        //});

        Vue.component('blog-card', {
            name: 'blog-card',
            data: function () {
                return {
                    templateSelector: "",
                    classes: [],
                    hover: false,
                };
            },
            props: [
                "article-id",
                "article-url",
                "can-edit",
                "edit-image",
                "edit-url",
                "image-caption",
                "image-url",
                "show-image",
                "article-title",
                "has-terms",
                "is-video",
                "term-url",
                "term-name",
                "publish-date-jss",
                "publish-date-ap",
            ],
            template: tempEl, // el that matches ID in template OR override passed in
            mounted: function () {
                if (DEBUG) console.log("v-ic76: props", this.articleId, JSON.stringify(this.$props, null, 2));
                // Done this the vue way, tested with this, left for in place documentation
                // This is more or less how it's done elsewhere currently.
                //console.log("ic96: mounted")
                //$(this.$el).hover(function (ev) {
                //    console.log("hover")
                //    $(this).closest(".item").addClass('hover');
                //});
            },
            methods: {
                addClass: function (newClass) {
                    this.classes.push(newClass);
                },
                hoverOn: function () {
                    //if (DEBUG) console.log("i-c106: hover on");
                    // css :hover solution is not currently used... maybe tricky
                    // this approach is borrowed from the current non-vue way this is done
                    this.hover = true;
                },
                hoverOff: function () {
                    //if (DEBUG) console.log("ic-110: hover off");
                    this.hover = false;
                },
                itemClasses: function () {
                    let classes = 'item-' + this.articleId;
                    if (this.hover) {
                        classes += " hover";
                    }
                    if (DEBUG) console.log("i-c115:", classes);
                    return classes;
                },
                resetClass: function () {
                    this.classes = [];
                },
                setCardType: function (cardType) {
                    // we only do one card type plus so ignore.  This is an event from the layout
                    // for the adaptive-card.

                    if (DEBUG) console.log("ignoring card type:", cardType);
                }
            },
        });

        Vue.component('blog-card-edit-span', {
            name: 'blog-card-edit-span',
            template: "#vue-blog-card-edit-span-template",
            props: ["editUrl", "imageUrl", "isEditMode"],
        });


    })();
             </script>
             <style>
              /* LIST */
    .alist.stories.blogs.list .blog-item-card.item.explore-item .poster-outer {
        display: none;
    }


    .item-card {
        height: 100%;
        background-color: #fff;
        border-radius: 4px;
    }

    .blog-item-card.item.explore-item.blog-item {
        text-align: center;
        padding-bottom: 0px;
        display: flex;
        flex-direction: column;
        height: 100%;
    }

        .blog-item-card.item.explore-item.blog-item a[title="Edit"] {
            position: absolute;
            z-index: 9;
            top: 1em;
            right: 1em;
            bottom: auto;
            padding: .25em;
            line-height: 16px;
            background-color: rgba(255,255,255,.3);
            border-radius: 5px;
            border: solid rgba(0,0,0,0.4) 1px;
        }

    .item-card .blog-item-card.item.explore-item.blog-item .blog-card {
        display: flex;
        flex-direction: column;
        padding: 20px 25px 0px;
        flex: 1;
    }


    .item-card .blog-item-card.item.explore-item.blog-item .vertical-filler {
        flex: 1;
    }

    .blog-item-card.item.explore-item.blog-item .bar {
        display: flex;
        align-items: center;
        padding-bottom: 25px;
    }

        .blog-item-card.item.explore-item.blog-item .bar .expanse {
            flex: 1;
        }

    .blog-item-card.item.explore-item.blog-item .social .social-inner .blog-social-block {
        margin-top: 10px;
        display: flex;
    }

    .blog-item-card.item.explore-item.blog-item .social .social-inner .social-link {
        width: 35px;
        height: 35px;
        font-size: 18px;
        margin-right: 15px;
    }

    .blog-item-card.item.explore-item.blog-item time {
        padding: 0;
        font-size: 16px;
        color: #717171;
    }

    .blog-item-card.item.explore-item.blog-item .poster.blog-card {
        float: none;
        width: 100%;
        display: block;
        border-radius: 4px;
        padding: 0;
    }

    .alist.stories .item a.title, .alist.stories .item a.title:link {
        font-size: 1.4rem;
    }

    .blog-item-card.item.explore-item.blog-item a.category,
    .blog-item-card.item.explore-item.blog-item a.category:link {
        text-align: center;
        font-size: 20px;
        color: #893636;
        margin: auto;
        position: relative;
        display: block;
        margin-top: 0;
        margin-bottom: 10px;
        text-transform: none;
        float: none;
    }

    /* edit pencil in image */
    .blog-item-card.item.explore-item .blog-card-edit-span {
        position: absolute;
        z-index: 9;
        top: 25px;
        right: 25px;
        bottom: auto;
        padding: .25em;
        line-height: 16px;
        background-color: rgba(255,255,255,.3);
        border-radius: 5px;
        border: solid rgba(0,0,0,0.4) 1px;
    }

    .blog-item-card.item.explore-item .blog-card-edit-span img {
        position: unset;
        left: auto;
    }

    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
        /* IE10+ CSS styles go here
        Some nice spacing with flexbox needs simplification to do in IE, this is
        not so bad though.
    */

        /*.item-card {
        display: block;
    }*/

        .blog-item-card.item.explore-item.blog-item {
            display: block;
        }
    }
             </style>
             <!--
    The card-layout element is used to contain items in a programmable reflex-grid
    using the dgov fork of these classes.
 -->
             <script id="vue-card-layout" type="text/x-template">
              <div class="card-layout">
        <div class="dgov-grid dgov-grid-full card-layout-container">
            <slot></slot>
        </div>
        <div class="more-row" v-if="thereAreMoreToView()">
            <a class="btn btn-default" v-on:click="viewMore" :title="moreText">{{moreText}}</a>
        </div>
        <div class="bottom-target"></div>
    </div>
             </script>
             <script type="text/javascript">
              (function () {
        const DEBUG = false;
        if (DEBUG) console.log("cl17: this is the card-layout component");
        const tempSel = "";
        const tempUse = tempSel ? tempSel : "#vue-card-layout";
        if (DEBUG && tempSel &&tempSel.length) console.log("cl20: passed in selector for template div", tempSel)
        if (DEBUG) console.log("cl21: selector template div to use", tempUse);
        const tempEl = $(tempUse)[0];
        if (DEBUG) console.log("cl23: template element", tempEl);

        const defaults = {
            numToShow: 5,
            pageAmount: 6,
        };

        Vue.component('card-layout', {
            name: 'card-layout',
            data: function () {
                return {
                    templateSelector: "",
                    numToShowData: defaults.numToShow,
                    pageAmountData: defaults.pageAmount,
                };
            },
            props: {
                "template-mode": String,
                "more-text": String,
                "more-available-callback": Function,
                "page-amount": Number,
                "no-empty-rows": Boolean,
                "num-to-show": Number,
                "show-all": {
                    type: Boolean,
                    default: false,
                },
            },
            template: tempEl, // matches ID in template above
            mounted: function () {
                // props have proper names when interacting with 'data' members
                // Note, since the prop is used only on mount, changing it
                // in the dom has no subsequent effect (but could if desired)
                if (DEBUG) console.log("cl149: props", this.$props);
                if (this.pageAmount) {
                    this.pageAmountData = this.pageAmount;
                }
                if (this.numToShow) {
                    this.numToShowData = this.numToShow;
                }
                if (DEBUG) console.log("cl62: num-to-show prop", this.numToShow);
                if (DEBUG) console.log("cl63: page-amount prop", this.pageAmount);
                if (DEBUG) console.log("cl64: numToShowData", this.numToShowData);
                if (DEBUG) console.log("cl65: pageAmountData", this.pageAmountData);
                window.addEventListener('resize', this.resize)
                this.resize();
            },
            methods: {
                resize: function () {
                    if (DEBUG) console.log("cl71: resizing");
                    this.markChildren();
                },
                getExtraRowLen: function (layoutName) {
                    const layouts = this.getLayouts(layoutName);
                    const mediaSize = this.getMediaType();
                    const layoutsFMS = layouts[mediaSize] ? layouts[mediaSize] : layouts.desktop;
                    const extraRowLen = layoutsFMS.meta ? layoutsFMS.meta.extraRowLen : null;

                    if (DEBUG) console.log("cl80:", layoutName, layouts, extraRowLen);

                    return extraRowLen;
                },
                getExtraRow: function (layoutName) {
                    const lfms = this.getLayoutsForMediaSize(layoutName);
                    return lfms ? lfms.extraRow : null;
                },
                getLayoutsForMediaSize: function (layoutName) {
                    // if mediaSize is not present in dictionary then uses 'desktop'
                    // ergo: 'desktop' property is mandatory
                    const mediaSize = this.getMediaType();

                    let layouts = this.getLayouts(layoutName);

                    /* if there is a set for the mediasize and number, pick it,
                     * otherwise layout remains the starting one above
                     * Note: Every case should have a layout but just in case
                     * this fails more gracefully, probably.
                     */
                    const layoutsForMediaSize = layouts[mediaSize] ? layouts[mediaSize] : layouts.desktop;
                    return layoutsForMediaSize;
                },
                getLayout: function (layoutName) {
                    // get particular layout based on layoutName argument
                    // internally: also uses number of children and media size
                    const numItems = this.$children.length;
                    const lfms = this.getLayoutsForMediaSize(layoutName);
                    if (lfms) {
                        if (lfms[numItems]) {
                            layout = lfms[numItems];
                        } else if (lfms.full) {
                            layout = lfms.full;
                        }
                    }
                    else {
                        // using dgov-grid these are classes for up to five children
                        const default_layout = ["dgov-col-6:feature", "dgov-col-6:feature", "dgov-col-4",
                            "dgov-col-4", "dgov-col-4"];
                        layout = default_layout;
                    }
                    return layout;
                },
                getLayouts: function (layoutName) {
                    let layouts;
                    switch (layoutName) {
                        case "feature-column":
                            layouts = fc_layouts;
                            break;
                        case "feature-grid":
                            layouts = fg_layouts;
                            break;
                        case "override":
                            layouts = window._dgov_feature_layout_override;
                            break;
                        case "story":
                            layouts = story_layouts;
                            break;
                        case "blog":
                        default:
                            layouts = blog_layouts;
                            break;
                    }
                    return layouts;
                },
                getMediaType: function () {
                    // @@TODO: put in a shared file
                    const isXS = window.matchMedia("(max-width: 767px)").matches;
                    const isMD = window.matchMedia("(min-width: 768px) and (max-width: 991px)").matches;
                    const isLG = window.matchMedia("(min-width: 992px) and (max-width: 1199px)").matches;
                    const isGiant = window.matchMedia("(min-width: 1200px)").matches;
                    if (isXS) { return "xs"; }
                    else if (isMD) { return "md"; }
                    else if (isLG) { return "lg"; }
                    else /* if (isGiant) */ { return "desktop" };
                },
                markChildren: function () {
                    const numItems = this.$children.length;
                    const mediaSize = this.getMediaType();

                    let layout = this.getLayout(this.templateMode);
                    let extraRow = this.getExtraRow(this.templateMode);
                    const extraRowLen = this.getExtraRowLen(this.templateMode)
                    const layoutLen = layout.length;
                    if (DEBUG) console.log("cl163 eRL:", extraRowLen);
                    let numLastLine = 0; // important default
                    if (extraRowLen) {
                        /* make sure extra rows are full, the number needed
                         * changes based on layout.
                         * Note: this probably has kinks with the extraRow features...
                         * should use extraRow.length.  Do when relevant.
                         */
                        if (DEBUG) console.log("cl170: layoutLen, eRL", layoutLen, extraRowLen);
                        /* numExtra calculation:
                         *  layoutlen is how much we're trying to show,
                         *  how many more are there I need to show?
                        */
                        const numExtra = this.numToShowData - layoutLen;
                        /*
                         * numLastLine calculation:
                         * this.$children.length is the total to show;
                         * how much longer is that than layout length?
                         * modulus the extraRowLen... that's how many
                         *  are on the last line.
                         * So I can use that for some modes that want to know.
                         * NOTE: full lines don't count, so if all full, will == 0
                        */
                        numLastLine = (this.$children.length - layoutLen) % extraRowLen;
                        if (DEBUG) console.log("cl186: numExtra, numLastLine", numExtra, numLastLine);


                        const lastRowLen = numExtra % extraRowLen;
                        if (DEBUG) console.log("clx174: lastRowLen", lastRowLen);
                        if (lastRowLen != 0) {
                            // how many more to fill this row?
                            // will be 0 if numEx
                            const moreNeeded = extraRowLen - lastRowLen;
                            if (DEBUG) console.log("cl178: moreNeeded", moreNeeded);
                            const adjustedNumToShow = this.numToShowData + moreNeeded;
                            if (DEBUG) console.log("cl180: adjustNumToShow", adjustedNumToShow, "was", this.numToShow);
                            this.numToShowData = adjustedNumToShow;
                            if (DEBUG) console.log("cl182: numToShowData, numItems:", this.numToShowData, this.numItems);
                        }

                        // it's numToShowData because the property gets the name.
                        if (DEBUG) console.log("clx184: numToShowData", this.numToShowData);
                    }

                    let numChildren = this.$children.length;
                    for (let i = 0; i < numChildren ; i++) {
                        const item = this.$children[i]

                        if (i >= layout.length) {
                            // hide
                            //item.addClass("hidden-item");
                            let reflexClass, cardType;
                            if (extraRow) {
                                const ind = (i - layout.length) % extraRow.length;
                                const lay = extraRow[ind];
                                const pieces = lay.split(":");
                                reflexClass = pieces[0];
                                cardType = pieces[1] ? pieces[1] : null;
                            }
                            else {
                                const pieces = layout[layout.length - 1].split(":");
                                reflexClass = pieces[0];
                                cardType = pieces[1] ? pieces[1] : null;
                            }
                            if (item.setCardType) item.setCardType(cardType); // undefined means default
                            if (item.resetClass) item.resetClass();
                            if (item.addClass) item.addClass(reflexClass);
                        } else {
                            const pieces = layout[i].split(":");
                            const reflexClass = pieces[0];
                            const cardType = pieces[1]; // might be undefined
                            // if (DEBUG) console.log("f-t85:", pieces, reflexClass, cardType);
                            if (item.setCardType) item.setCardType(cardType); // undefined means default
                            if (item.resetClass) item.resetClass();
                            if (item.addClass) item.addClass(reflexClass);
                        }

                        if (!this.showAll && (i >= this.numToShowData)) {
                            if (item.addClass) item.addClass("hidden-item");
                        }
                        /* Simple first draf of noEmptyRows options... may need work
                         * possibly pretty specific to motivating use case.
                         *
                        */
                        //if (DEBUG) console.log("noEmptyRows", this.noEmptyRows);
                        if (this.noEmptyRows && (numLastLine != 0)) {
                            const showItem = i < numChildren - numLastLine;
                            if (DEBUG) console.log("i, show?", i, showItem);
                            if (!showItem && item.addClass) item.addClass("hidden-item");
                        }


                    }
                },
                thereAreMoreToView: function () {
                    let moreToView = null;
                    if (!this.showAll && (this.numToShowData < this.$children.length)) {
                        moreToView = true;
                    }
                    else {
                        moreToView = false;
                    }
                    if (this.moreAvailableCallback) {
                        this.moreAvailableCallback(moreToView)
                    }
                    return moreToView;
                },
                viewMore: function () {
                    // view more!
                    this.numToShowData += this.pageAmountData;
                    if (DEBUG) console.log("viewMore event, numToShow", this.numToShowData);
                    this.resize();
                    let self = this;
                    setTimeout(function () {
                        if (DEBUG) console.log("tempUse, tempEl", tempUse, tempEl);
                        const targel = $(self.$el).find('.bottom-target')[0];
                        if (targel.scrollIntoView) {
                            targel.scrollIntoView(false);
                        }
                    }, 100);
                },
            }
        });
        /* /////

            Layouts Library

                layout types:
                    * blog
                    * story
                    * feature-grid
                    * feature-column

                Below are the data structures, they are used in the methods
                above to choose the right final layout based on the media size
                and also the length of the list.
                Each set of "layouts" is a valid json structure of this shape:
                    whatever_layouts = {
                        desktop: {
                            meta: {...},
                            full: [...],
                            4: [...],
                        },
                        ld: {...},
                        mk: {...},
                        xs: {...}
                    }
                You can see it as a dictionary/hash in which we:
                    0. Layout is performed for all immediate children which
                       are inserted to the default/general vue component "slot".
                    1. Look up the media size
                    2. Then we see if there is a key ("object member") named
                       with the number that matches the length of items
                       being laid out, like "4" in the example.
                    3. If no key matches the length of items being laid out,
                       then the "full" member is used.
                    4. What is picked out then is a list.  The list is a list
                       of strings with a class to apply (we're using dgove reflex grid
                       classes) optionally followed by ":" and a card type name.
                    5. Available card types depend on the type of card or adaptive
                       cards imported. If the card type is not recognized, a default
                       card will be used.
                    6. The "full" list will always be used when there are more
                       items than exist in the "layout" list. By default what happens
                       is all items laid out beyond the end of the layout list
                       use the FINAL layout spec in the list.
                    7. The meta object seen above, within a media-level object
                       allows setting things that might differ, like the page
                       size and row length, or what to repeat instead of
                       the last element as mentioned in point 6.

            If I was you I'd check the structures to check that the above is still
            accurate.  This is why I have not documented the meta object, I'm using
            it whenever I need to, and you might as well look at the structure below
            to see what's going on, then looking for the property names in the methods
            above to see what they override or affect.


        ///// */

        //
        // Feature Blog Layout
        //
        const desktopAndLg = {
            full: ["dgov-col-6:feature", "dgov-col-6:feature",
                "dgov-col-4", "dgov-col-4", "dgov-col-4"],
            4: ["dgov-col-12:feature",
                "dgov-col-4", "dgov-col-4", "dgov-col-4"],
            3: ["dgov-col-4", "dgov-col-4", "dgov-col-4"],
            2: ["dgov-col-6:feature", "dgov-col-6:feature"],
            1: ["dgov-col-12:feature"],
        };

        const blog_layouts = {
            desktop: desktopAndLg,
            lg: desktopAndLg,
            md: {
                full: ["dgov-col-12:feature", "dgov-col-6", "dgov-col-6", "dgov-col-6", "dgov-col-6"],
                4: ["dgov-col-12:feature",
                    "dgov-col-12:feature",
                    "dgov-col-6", "dgov-col-6"],
                3: ["dgov-col-12", "dgov-col-12", "dgov-col-12"],
                2: ["dgov-col-12:feature", "dgov-col-12:feature"],
                1: ["dgov-col-12:feature"],
            },
            xs: {
                full: ["dgov-col-12", "dgov-col-12", "dgov-col-12", "dgov-col-12", "dgov-col-12"],
                4: ["dgov-col-12", "dgov-col-12", "dgov-col-12", "dgov-col-12"],
                3: ["dgov-col-12", "dgov-col-12", "dgov-col-12"],
                2: ["dgov-col-12", "dgov-col-12"],
                1: ["dgov-col-12"],
            },
        }
        //
        // Story Layout
        //
        const grid3col = ["dgov-col-4", "dgov-col-4", "dgov-col-4"];
        const grid2col = ["dgov-col-6", "dgov-col-6"];
        const grid1col = ["dgov-col-12"];
        const layout3xn = {
            meta: {
                extraRowLen: 3,
            },
            full: grid3col,
            2: grid2col,
            1: ["dgov-col-12"],
        }
        const layout2xn = {
            meta: {
                extraRowLen: 2,
            },
            full: grid2col,
            1: ["dgov-col-12"],
        }
        const layout1xn = {
            meta: {
                //extraRowLen: 1,
            },
            full: grid1col,
        }
        const story_layouts = {
            desktop: layout3xn,
            lg: layout2xn,
            md: layout2xn,
            xs: layout1xn
        }

        /* feature-grid layout */

        const _fg_desktopAndLg = {
            meta: {
                extraRowLen: 3,
            },
            full: ["dgov-col-12:featured-story",
                "dgov-col-12:featured-story.even",
                "dgov-col-4", "dgov-col-4", "dgov-col-4"],
        };

        const _fg_lg = {
            meta: {
                extraRowLen: 2,
            },
            full: ["dgov-col-12:featured-story",
                "dgov-col-12:featured-story.even",
                "dgov-col-6", "dgov-col-6",],
        };

        const _fg_mdAndXs = {
            full: ["dgov-col-12"],

        }

        const fg_layouts = {
            desktop: _fg_desktopAndLg,
            lg: _fg_lg,
            md: _fg_mdAndXs,
            xs: _fg_mdAndXs,
        }

        /* feature-column layout */

        const _fc_feat = {
            full: ["dgov-col-12:featured-story",
                "dgov-col-12:featured-story.even",],
            extraRow: ["dgov-col-12:featured-story",
                "dgov-col-12:featured-story.even",],
        };

        const _fc_stand = {
            full: ["dgov-col-12",],

        }

        const fc_layouts = {
            desktop: _fc_feat,
            lg: _fc_feat,
            md: _fc_stand,
            xs: _fc_stand,
        }

        // End of Layouts
    })();
             </script>
             <style>
              .card-layout .dgov-grid.card-layout-container .hidden-item {
    display:none;
}
.feature-grid.alist.stories .card-layout .item a.title,
.feature-grid.alist.stories .card-layout .item a.title:link {
    font-size:1.4rem;
}

.card-layout .more-row {
    display: flex;
    align-items: center;
    flex-direction: column;
    padding: 15px;
    padding-top: 2rem;
}

/* Note: this relates to lack of encapsulation where
    Dashboard applies .list class to parent container.  Would be better
    to have an event so that the card code 'knows' the card is in 'list'
    mode.  This rule isn't needed however, but is documentation since this
    may be an issue if the structure changes to include future features.
    Special rule is in story-card, may be moved or similar for other types
    of cards.    */
.alist.stories.list .card-layout .card-layout-container {
    display:block;
}


/*.feature-template-container {
    display: flex;
    flex-direction: row;
}*/
             </style>
             <!--
    This fragment compiles a Vue template located in a div with
    an id of "blogGrid-2326".
-->
             <script type="text/javascript">
              (function () {
        const DEBUG = false;
        if (DEBUG) console.log("m-i2: vue:initialize:blogGrid");
        document.addEventListener("DOMContentLoaded", function () {
            if (DEBUG) console.log("initializing vue on blogGrid in module 2326")
            const elTarg = "#blogGrid-2326";

            // supports sending in "data" and "methods" by naming convention
            let modData = {};
            let modMethods = {};
            const typeofModData = typeof(blogGrid2326_data);
            const typeofModMethods = typeof(blogGrid2326_methods);

            if (typeofModData != "undefined") {
                modData = blogGrid2326_data;
            }
            if (typeofModMethods != "undefined") {
                modMethods = blogGrid2326_methods;
            }
            const el = $(elTarg)[0];
            const moduleVue = new Vue({
                el: el,
                mounted: function () {
                    // call the callback if exists.
                    // naming vueToken_mounted_2326
                    if (DEBUG) console.log("cb?", typeof (vueToken_mounted_2326));
                    if (typeof (vueToken_mounted_2326) === "function" ) {
                        const mountedCB = vueToken_mounted_2326;
                        if (mountedCB) {
                            // currently no arguments, just a time event, e.g. when slick
                            // could be initialized.
                            this.$nextTick(mountedCB);
                        }
                    }
                },
                data: modData,
                methods: modMethods,
            });

        });
    })();
             </script>
            </div>
           </div>
          </div>
          <!-- End_Module_2326 -->
         </div>
        </div>
        <!--end of empty container -->
       </div>
       <div class="DnnModule DnnModule-ArticleCSDashboard DnnModule-2325">
        <a name="2325">
        </a>
        <div class="empty-container base-container">
         <div id="dnn_ctr2325_ContentPane">
          <!-- Start_Module_2325 -->
          <div class="blog-list-each hide" id="blog-kym">
           <h2 class="pull-title">
            Know Your Military
           </h2>
           <div class="DNNModuleContent ModArticleCSDashboardC" id="dnn_ctr2325_ModuleContent">
            <div id="dnn_ctr2325_Dashboard_ph">
             <style>
              [v-cloak], [v-cloak] > * {
        display: none !important;
    }
             </style>
             <div class="blog-grid alist stories adash" id="blogGrid-2325" v-cloak="">
              <h2 class="pull-title">
               Know Your Military
              </h2>
              <div class="alist-inner">
               <card-layout :more-available-callback="moreAvailableCallback" :no-empty-rows="true" :num-to-show="9" :page-amount="9" more-text="View More" template-mode="story">
                <adaptive-blog-card :has-terms="true" :show-image="true" article-alt="A man in uniform poses for the camera." article-id="2494459" article-title="Walter Reed: Get to Know the Man Behind the Medical Center" article-url="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2494459/walter-reed-get-to-know-the-man-behind-the-medical-center/" article-url-or-link="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2494459/walter-reed-get-to-know-the-man-behind-the-medical-center/" article-url-or-link-absolute="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2494459/walter-reed-get-to-know-the-man-behind-the-medical-center/" content-type-name="Blog" content-type-val="515" image-caption="" image-url="https://media.defense.gov/2021/Feb/05/2002576998/1280/1280/0/210203-A-ZZ999-101A.JPG" open-in-new="" publish-date-ap="Feb. 5, 2021" publish-date-jss="2021-02-05T10:45:00" term-name="Know Your Military" term-url="http://www.defense.gov/Search-Results/Term/2580/know-your-military/">
                 <div slot="summary">
                  Army Maj. Walter Reed's contributions to medicine were many. Thanks to him, few know anything about yellow fever and typhoid — diseases that once ravaged military encampments.
                 </div>
                </adaptive-blog-card>
                <adaptive-blog-card :has-terms="true" :show-image="true" article-alt="Two service members in masks hold up an award certificate in front of a USO sign." article-id="2456257" article-title="Meet the 2020 USO Service Members of the Year" article-url="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2456257/meet-the-2020-uso-service-members-of-the-year/" article-url-or-link="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2456257/meet-the-2020-uso-service-members-of-the-year/" article-url-or-link-absolute="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2456257/meet-the-2020-uso-service-members-of-the-year/" content-type-name="Blog" content-type-val="515" image-caption="" image-url="https://media.defense.gov/2020/Dec/23/2002556669/1280/1280/0/201222-O-ZZ999-087.JPG" open-in-new="" publish-date-ap="Dec. 23, 2020" publish-date-jss="2020-12-23T13:14:00" term-name="Know Your Military" term-url="http://www.defense.gov/Search-Results/Term/2580/know-your-military/">
                 <div slot="summary">
                  Whether they were saving the lives of their comrades or helping strangers, these deserving service members committed themselves to helping others.
                 </div>
                </adaptive-blog-card>
                <adaptive-blog-card :has-terms="true" :show-image="true" article-alt="A child in reindeer ears looks out an open car window at Santa." article-id="2443158" article-title="Drive-Thru Winter Wonderland Greets Military Families" article-url="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2443158/drive-thru-winter-wonderland-greets-military-families/" article-url-or-link="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2443158/drive-thru-winter-wonderland-greets-military-families/" article-url-or-link-absolute="http://www.defense.gov/Explore/Inside-DOD/Blog/Article/2443158/drive-thru-winter-wonderland-greets-military-families/" content-type-name="Blog" content-type-val="515" image-caption="" image-url="https://media.defense.gov/2020/Dec/11/2002550382/1280/1280/0/201207-O-ZZ999-101.JPG" open-in-new="" publish-date-ap="Dec. 11, 2020" publish-date-jss="2020-12-11T09:51:52" term-name="Know Your Military" term-url="http://www.defense.gov/Search-Results/Term/2580/know-your-military/">
                 <div slot="summary">
                  COVID-19 may have changed the way we celebrate the holidays, but it can't stop the spirit of the season.
                 </div>
                </adaptive-blog-card>
               </card-layout>
               <div class="more-page-button" v-if="!moreAvailable">
                <a class="btn btn-default btn-default-ghost" href="http://www.defense.gov/Search-Results/" v-if="false">
                 <span>
                  See More
                 </span>
                </a>
               </div>
              </div>
             </div>
             <!-- Want to keep all script blocks out of templates, including
    divs taken over by vue, such as blogFeatureGrid above -->
             <script src="https://s7.addthis.com/js/250/addthis_widget.js#pubid=" type="text/javascript">
              var addthis_config = {
        data_use_flash: false,
        data_use_cookies: false,
        ui_508_compliant: true
    }
             </script>
             <style>
              [v-cloak],
    [v-cloak] > * {
        display: none
    }

    .blog-grid .pull-title {
        display: none;
    }

    .blog-grid.alist.stories.adash .more-page-button {
        margin-top: 2rem;
        display: flex;
        width: 100%;
        justify-content: center;
    }
             </style>
             <script type="text/javascript">
              (function () {

        const DEBUG = false;
        if (DEBUG) console.log("Loading Blog Grid Dashboard");

        // this is detected by vue initialize based on naming convention
        // using the initialize argument
        window.blogGrid2325_data = {
            moreAvailable: false,
        };

        window.blogGrid2325_methods = {
            moreAvailableCallback: function (moreAvail) {
                if (DEBUG) console.log("DGOV2 BG: moreAvail", moreAvail);
                this.moreAvailable = moreAvail;
            },
        }
    })();
             </script>
             <script id="vue-adaptive-blog-card" type="text/x-template">
              <div class="adaptive-item-card" v-bind:class="classes.join(' ')">
        <!-- 'feature' CardType -->
        <featured-blog-card v-if="cardType=='feature'"
                            :show-image="showImage"
                            :has-terms="hasTerms"
                            :article-id="articleId"
                            :article-title="articleTitle"
                            :article-url="articleUrl"
                            :can-edit="canEdit"
                            :edit-url="editUrl"
                            :edit-image="editImage"   
                            :image-url="imageUrl"
                            :image-caption="imageCaption"
                            :is-video="isVideo"
                            :term-url="termUrl"
                            :term-name="termName"
                            :publish-date-jss="publishDateJss"
                            :publish-date-ap="publishDateAp">
            <slot></slot>
        </featured-blog-card>
        <!-- Default Card -->
        <blog-card v-else
                   :show-image="showImage"
                   :has-terms="hasTerms"
                   :article-id="articleId"
                   :article-title="articleTitle"
                   :article-url="articleUrl"
                   :can-edit="canEdit"
                    :edit-url="editUrl"
                    :edit-image="editImage"   
                   :image-url="imageUrl"
                   :image-caption="imageCaption"
                   :is-video="isVideo"
                   :term-url="termUrl"
                   :term-name="termName"
                   :publish-date-jss="publishDateJss"
                   :publish-date-ap="publishDateAp">
            <slot></slot>
        </blog-card>
    </div>
             </script>
             <script type="text/javascript">
              (function () {
        const DEBUG = false;
        if (DEBUG) console.log("this is the blog-card (default card) component");
        const tempSel = "";
        const tempUse = tempSel ? tempSel : "#vue-adaptive-blog-card";
        if (DEBUG) console.log("s-s13:", tempSel, tempUse);
        const tempEl = $(tempUse)[0];
        if (DEBUG) console.log("s-s15:", tempEl);
        Vue.component('adaptive-blog-card', {
            name: 'adaptive-blog-card',
            data: function () {
                return {
                    templateSelector: "",
                    classes: [],
                    cardType: null,
                };
            },
            props: [
                "article-id",
                "article-url",
                "can-edit",
                "edit-image",
                "edit-url",
                "image-caption",
                "image-url",
                "is-video",
                "show-image",
                "article-title",
                "has-terms",
                "term-url",
                "term-name",
                "publish-date-jss",
                "publish-date-ap",
            ],
            template: tempEl, // el that matches ID in template OR override passed in
            methods: {
                addClass: function (newClass) {
                    this.classes.push(newClass);
                },
                resetClass: function () {
                    this.classes = [];
                },
                setCardType: function (cardType) {
                    // we only do one card type so ignore.  This is an event from the layout
                    // for the adaptive-card.
                    this.cardType = cardType;
                    if (DEBUG) console.log("set this.cardType", this.cardType);

                }
            },
        });

    })();
             </script>
             <script id="vue-featured-blog-card" type="text/x-template">
              <div class="featured-item-card" v-bind:class="classes.join(' ')"
         v-on:mouseover="hoverOn"
         v-on:mouseleave="hoverOff">
        <div class="item blog-item explore-item dgov-card dgov-card-2" v-bind:class="itemClasses()">
                <div class="poster-outer">
                    <div class="poster item-card-poster" v-bind:class="{'video-wrap-container':isVideo}">
                        <a :href="articleUrl" title="imageCaption">
                            <span v-if="isVideo">
                                <img src="/Portals/_default/Skins/DGOV2/Resources/img/play-default.png" class="defaultVideoOverlay">
                                <img src="/Portals/_default/Skins/DGOV2/Resources/img/play-hover.png" class="hoverVideoOverlay">
                            </span>
                            <div v-bind:style="{ backgroundImage: 'url('+imageUrl+')' }">
                                <img class="visible-print" :src="imageUrl" />
                            </div>
                        </a>
                        <slot></slot> <!-- for edit pencil -->
                        <div class="title-bar">
                            <a class="title" :href="articleUrl">
                                <span v-if="isVideo" class="sr-only">Video: </span>
                                {{articleTitle}}
                            </a>
                        </div>

                    </div>
                </div>
                <div class="item-card-info" :data-url="articleUrl">
                    <!-- moved up <div class="title-bar"> <a class="title" :href="articleUrl"> {{articleTitle}} </a> </div>-->
                    <div class="secondary-bar">
                        <div class="category-block">
                            <div class="cat-container">
                                <div class="cat-wrap">
                                    <!--<a class="category" href=""><span></span></a>-->
                                    <a class="category" :href="termUrl"><span>{{termName}}</span></a>
                                </div>
                            </div>
                        </div>
                        <div class="social-time-block">
                            <div class="social-time-container">
                                <div class="vcenter-hright-content">
                                    <div class="social">
                                        <div class="addthis_toolbox addthis_default_style social-inner" :addthis:url="articleUrl">
                                            <a class="addthis_button_facebook social-link"
                                                title="Facebook" href="#"><span class="fa fa-facebook"></span></a>
                                            <a class="addthis_button_twitter social-link" title="Twitter" href="#">
                                                <span class="fa fa-twitter"></span>
                                            </a>
                                            <div class="atclear"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="vcenter-hright-content">
                                    <div class="time">
                                        <time :data-dateago="publishDateJss" :data-dateap="publishDateAp">
                                        {{publishDateAp}}
                                        </time>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div style="clear:both"></div>
            </div>
    </div>
             </script>
             <script type="text/javascript">
              (function () {
        const DEBUG = false;
        if (DEBUG) console.log("this is the featured-item-card component");
        const tempSel = "";
        const tempUse = tempSel ? tempSel : "#vue-featured-blog-card";
        if (DEBUG) console.log("s-s13:", tempSel, tempUse);
        const tempEl = $(tempUse)[0];
        if (DEBUG) console.log("s-s15:", tempEl);
        Vue.component('featured-blog-card', {
            name: 'featured-blog-card',
            data: function () {
                return {
                    templateSelector: "",
                    classes: [],
                    hover: false,
                };
            },
            props: [
                "article-id",
                "article-url",
                "can-edit",
                "edit-image",
                "edit-url",
                "image-caption",
                "image-url",
                "is-video",
                "show-image",
                "article-title",
                "has-terms",
                "term-url",
                "term-name",
                "publish-date-jss",
                "publish-date-ap",
            ],
            template: tempEl, // el that matches ID in template OR override passed in
            methods: {
                addClass: function (newClass) {
                    this.classes.push(newClass);
                },
                hoverOn: function () {
                    if (DEBUG) console.log("fic106: hover on");
                    // css :hover solution is not currently used... maybe tricky
                    // this approach is borrowed from the current non-vue way this is done
                    this.hover = true;
                },
                hoverOff: function () {
                    if (DEBUG) console.log("fic-110: hover off");
                    this.hover = false;
                },
                itemClasses: function () {
                    let classes = 'item-' + this.articleId;
                    if (this.hover) {
                        classes += " hover";
                    }
                    if (DEBUG) console.log("f-i-c115:", classes);
                    return classes;
                },
                resetClass: function () {
                    this.classes = [];
                },
                setCardType: function (cardType) {
                    // we only do one card type so ignore.  This is an event from the layout
                    // for the adaptive-card.
                    if (DEBUG) console.log("ignoring card type:", cardType);
                }
            },
        });

    })();
             </script>
             <!--
    Note:
        Other parts of file can be put in component directory.
        In this case so I could view it side by  side with the HTML template for
        CSS debugging.
-->
             <style>
              [v-cloak] > * {
        display: none
    }

    .flex-div {
        flex: 1;
    }

    .vcenter-hright-content {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-end;
    }

    .featured-item-card .item.explore-item.blog-item {
        text-align: center;
        padding-bottom: 0;
        overflow: hidden;
        border-top-left-radius: 4px;
        border-top-right-radius: 4px;
    }

    .featured-item-card .item.explore-item.blog-item a[title="Edit"] {
        position:absolute;
        z-index: 9;
        top: 1em;
        right: 1em;
        bottom: auto;
        padding: .25em;
        line-height: 16px;
        background-color: rgba(255,255,255,.3);
        border-radius: 5px;
        border: solid rgba(0,0,0,0.4) 1px;
    }

    /*  The top selector is for when the title-bar overlays the images, the bottom, when it's below.
        It is the same with several of the following rules.
    */
    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .title-bar,
    .featured-item-card .item.explore-item.blog-item .item-card-info .title-bar {
        background: linear-gradient(99deg, rgba(0,0,0,1) 0%, rgba(0,0,0,0.5) 100%);
        padding: 20px;
        position: absolute;
        top: auto;
        bottom: -1px;
        transform: scale(1); /* Counteract div targeted rule for zooming image */
        text-align: left;
    }

    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .title-bar .title,
    .featured-item-card .item.explore-item.blog-item .item-card-info .title-bar .title {
        margin: 0;
        padding: 0;
        font-size: 1.4rem;
        font-family: Lato, serif;
        font-weight: 700;
        line-height: 1.2;
        color: #fff;
        text-rendering: optimizelegibility;
        display: inline-block;
    }

    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar {
        background: rgba(255,255,255,.9);
        padding: 10px 20px;
        display: flex;
        align-items: center;
    }

    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .category-block {
        flex:1;
    }
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .social-time-block {

    }


    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar .cat-container,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .cat-container {
        display: flex;
        height: 100%;
        flex-direction: column;
        justify-content: center;
    }

    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar .cat-container .cat-wrap,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .cat-container .cat-wrap {
    }

    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar .category,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .category {
        font-size: 20px;
        color: #893636;
    }

/* social-date-container: social buttons and date container share  space in reflex-grid */
    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar .social-time-container,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .social-time-container {
        display: flex;
        justify-content: flex-end;
    }


    .featured-item-card .item.explore-item.blog-item .social .social-inner .social-link {
        width: 35px;
        height: 35px;
        min-width: 35px;
        min-height: 35px;
        font-size: 18px;
        margin-right: 15px;
        margin-bottom: 0;
    }

    .featured-item-card .item.explore-item.blog-item .poster-outer .poster .secondary-bar .time,
    .featured-item-card .item.explore-item.blog-item .item-card-info .secondary-bar .time {
        display: block;
        float: none; /*right;*/
        margin-top: 0;
        font-size: 16px;
        color: #717171;
    }


    .alist.stories .featured-item-card .item time {
        order: unset;
        font-size: 16px;
        /*padding-top: 10px;*/
        padding: 0;
    }


    .featured-item-card .item.explore-item.blog-item .bar {
        display: flex;
        align-items: center;
    }

    .featured-item-card .item.explore-item.blog-item .bar .expanse {
        flex: 1;
    }

    .featured-item-card .item.explore-item.blog-item .social .social-inner .blog-social-block {
        margin-top: 10px;
        display: flex;
    }

    .featured-item-card .item.explore-item.blog-item .poster.item-card-poster {
        float: none;
        width: 100%;
        display: block;
        border-radius: 4px 4px 0 0;
    }

    .featured-item-card .item.explore-item.blog-item a.category,
    .featured-item-card .item.explore-item.blog-item a.category:link {
        text-align: left;
        font-size: 20px;
        color: #893636;
        margin: auto;
        position: relative;
        display: block;
        text-transform: none;
        float: none;
    }
             </style>
             <script id="vue-blog-card" type="text/x-template">
              <div class="item-card" v-bind:class="classes.join(' ')"
         v-on:mouseover="hoverOn"
         v-on:mouseleave="hoverOff">
        <div class="blog-item-card item explore-item blog-item blog-item-alt"
             v-bind:class="itemClasses()">
            <div v-if="showImage" class="poster-outer">
                <div class="poster blog-card dgov-card dgov-card-2" v-bind:class="{'video-wrap-container':isVideo}">
                    <a :href="articleUrl" :title="imageCaption">
                        <span v-if="isVideo">
                            <img src="/Portals/_default/Skins/DGOV2/Resources/img/play-default.png" class="defaultVideoOverlay">
                            <img src="/Portals/_default/Skins/DGOV2/Resources/img/play-hover.png" class="hoverVideoOverlay">
                        </span>
                        <div v-bind:style="{ backgroundImage: 'url('+imageUrl+')' }">
                            <img class="visible-print" :src="imageUrl" />
                        </div>
                    </a>
                    <slot></slot>
                </div>
                <blog-card-edit-span :isEditMode="canEdit" :editUrl="editUrl" :imageUrl="editImage"></blog-card-edit-span>
            </div>

            <div class="blog-card" :data-url="articleUrl">
                <a v-if="hasTerms" class="category" :href="termUrl"><span>{{termName}}</span></a>
                <a class="title" :href="articleUrl"><span v-if="isVideo" class="sr-only">Video: </span>{{articleTitle}}</a>
            </div>
            <div class="vertical-filler"></div>

            <div class="bar">
                <div class="expanse"></div>
                <div class="social">
                    <div class="addthis_toolbox addthis_default_style social-inner" :addthis:url="articleUrl">
                        <div class="blog-social-block">
                            <a class="addthis_button_facebook social-link" title="Facebook" href="#">
                                <span class="fa fa-facebook"></span>
                            </a>
                            <a class="addthis_button_twitter social-link" title="Twitter" href="#">
                                <span class="fa fa-twitter"></span>
                            </a>
                        </div>
                        <div class="atclear"></div>
                    </div>
                </div>
                <div class="time">
                    <time class="time-display" :data-dateago="publishDateJss" :data-dateap="publishDateAp">
                        {{publishDateAp}}
                    </time>
                </div>
                <div class="expanse"></div>
            </div>

            <div style="clear:both"></div>
        </div>
    </div>
             </script>
             <!--  here is a card-edit-span element... need to share this, but the vue component token is not a good way
    because it would be multiply imported every time it's used by a card.  It should be linked with "registerscript"
    -->
             <script id="vue-blog-card-edit-span-template" type="text/x-template">
              <a title="Edit" v-if="isEditMode" class="blog-card-edit-span" :href="editUrl" alt="edit link">
        <img title="Edit" :src="imageUrl" alt="edit pencil" />
    </a>
             </script>
             <script type="text/javascript">
              (function () {
        const DEBUG = false;
        if (DEBUG) console.log("this is the item-card (default card) component");
        const tempSel = "";
        const tempUse = tempSel ? tempSel : "#vue-blog-card";
        if (DEBUG) console.log("s-s50: template selector", tempSel, tempUse);
        const tempEl = $(tempUse)[0];

        if (DEBUG) console.log("s-s53: template", tempEl);

        //$('.blog-item-card.item.explore-item.blog-item').hover(function () {
        //    console.log("i-c56: hovering", this)
        //    $(this).addClass('hover');
        //}, function () {
        //    $(this).removeClass('hover');
        //});

        Vue.component('blog-card', {
            name: 'blog-card',
            data: function () {
                return {
                    templateSelector: "",
                    classes: [],
                    hover: false,
                };
            },
            props: [
                "article-id",
                "article-url",
                "can-edit",
                "edit-image",
                "edit-url",
                "image-caption",
                "image-url",
                "show-image",
                "article-title",
                "has-terms",
                "is-video",
                "term-url",
                "term-name",
                "publish-date-jss",
                "publish-date-ap",
            ],
            template: tempEl, // el that matches ID in template OR override passed in
            mounted: function () {
                if (DEBUG) console.log("v-ic76: props", this.articleId, JSON.stringify(this.$props, null, 2));
                // Done this the vue way, tested with this, left for in place documentation
                // This is more or less how it's done elsewhere currently.
                //console.log("ic96: mounted")
                //$(this.$el).hover(function (ev) {
                //    console.log("hover")
                //    $(this).closest(".item").addClass('hover');
                //});
            },
            methods: {
                addClass: function (newClass) {
                    this.classes.push(newClass);
                },
                hoverOn: function () {
                    //if (DEBUG) console.log("i-c106: hover on");
                    // css :hover solution is not currently used... maybe tricky
                    // this approach is borrowed from the current non-vue way this is done
                    this.hover = true;
                },
                hoverOff: function () {
                    //if (DEBUG) console.log("ic-110: hover off");
                    this.hover = false;
                },
                itemClasses: function () {
                    let classes = 'item-' + this.articleId;
                    if (this.hover) {
                        classes += " hover";
                    }
                    if (DEBUG) console.log("i-c115:", classes);
                    return classes;
                },
                resetClass: function () {
                    this.classes = [];
                },
                setCardType: function (cardType) {
                    // we only do one card type plus so ignore.  This is an event from the layout
                    // for the adaptive-card.

                    if (DEBUG) console.log("ignoring card type:", cardType);
                }
            },
        });

        Vue.component('blog-card-edit-span', {
            name: 'blog-card-edit-span',
            template: "#vue-blog-card-edit-span-template",
            props: ["editUrl", "imageUrl", "isEditMode"],
        });


    })();
             </script>
             <style>
              /* LIST */
    .alist.stories.blogs.list .blog-item-card.item.explore-item .poster-outer {
        display: none;
    }


    .item-card {
        height: 100%;
        background-color: #fff;
        border-radius: 4px;
    }

    .blog-item-card.item.explore-item.blog-item {
        text-align: center;
        padding-bottom: 0px;
        display: flex;
        flex-direction: column;
        height: 100%;
    }

        .blog-item-card.item.explore-item.blog-item a[title="Edit"] {
            position: absolute;
            z-index: 9;
            top: 1em;
            right: 1em;
            bottom: auto;
            padding: .25em;
            line-height: 16px;
            background-color: rgba(255,255,255,.3);
            border-radius: 5px;
            border: solid rgba(0,0,0,0.4) 1px;
        }

    .item-card .blog-item-card.item.explore-item.blog-item .blog-card {
        display: flex;
        flex-direction: column;
        padding: 20px 25px 0px;
        flex: 1;
    }


    .item-card .blog-item-card.item.explore-item.blog-item .vertical-filler {
        flex: 1;
    }

    .blog-item-card.item.explore-item.blog-item .bar {
        display: flex;
        align-items: center;
        padding-bottom: 25px;
    }

        .blog-item-card.item.explore-item.blog-item .bar .expanse {
            flex: 1;
        }

    .blog-item-card.item.explore-item.blog-item .social .social-inner .blog-social-block {
        margin-top: 10px;
        display: flex;
    }

    .blog-item-card.item.explore-item.blog-item .social .social-inner .social-link {
        width: 35px;
        height: 35px;
        font-size: 18px;
        margin-right: 15px;
    }

    .blog-item-card.item.explore-item.blog-item time {
        padding: 0;
        font-size: 16px;
        color: #717171;
    }

    .blog-item-card.item.explore-item.blog-item .poster.blog-card {
        float: none;
        width: 100%;
        display: block;
        border-radius: 4px;
        padding: 0;
    }

    .alist.stories .item a.title, .alist.stories .item a.title:link {
        font-size: 1.4rem;
    }

    .blog-item-card.item.explore-item.blog-item a.category,
    .blog-item-card.item.explore-item.blog-item a.category:link {
        text-align: center;
        font-size: 20px;
        color: #893636;
        margin: auto;
        position: relative;
        display: block;
        margin-top: 0;
        margin-bottom: 10px;
        text-transform: none;
        float: none;
    }

    /* edit pencil in image */
    .blog-item-card.item.explore-item .blog-card-edit-span {
        position: absolute;
        z-index: 9;
        top: 25px;
        right: 25px;
        bottom: auto;
        padding: .25em;
        line-height: 16px;
        background-color: rgba(255,255,255,.3);
        border-radius: 5px;
        border: solid rgba(0,0,0,0.4) 1px;
    }

    .blog-item-card.item.explore-item .blog-card-edit-span img {
        position: unset;
        left: auto;
    }

    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
        /* IE10+ CSS styles go here
        Some nice spacing with flexbox needs simplification to do in IE, this is
        not so bad though.
    */

        /*.item-card {
        display: block;
    }*/

        .blog-item-card.item.explore-item.blog-item {
            display: block;
        }
    }
             </style>
             <!--
    The card-layout element is used to contain items in a programmable reflex-grid
    using the dgov fork of these classes.
 -->
             <script id="vue-card-layout" type="text/x-template">
              <div class="card-layout">
        <div class="dgov-grid dgov-grid-full card-layout-container">
            <slot></slot>
        </div>
        <div class="more-row" v-if="thereAreMoreToView()">
            <a class="btn btn-default" v-on:click="viewMore" :title="moreText">{{moreText}}</a>
        </div>
        <div class="bottom-target"></div>
    </div>
             </script>
             <script type="text/javascript">
              (function () {
        const DEBUG = false;
        if (DEBUG) console.log("cl17: this is the card-layout component");
        const tempSel = "";
        const tempUse = tempSel ? tempSel : "#vue-card-layout";
        if (DEBUG && tempSel &&tempSel.length) console.log("cl20: passed in selector for template div", tempSel)
        if (DEBUG) console.log("cl21: selector template div to use", tempUse);
        const tempEl = $(tempUse)[0];
        if (DEBUG) console.log("cl23: template element", tempEl);

        const defaults = {
            numToShow: 5,
            pageAmount: 6,
        };

        Vue.component('card-layout', {
            name: 'card-layout',
            data: function () {
                return {
                    templateSelector: "",
                    numToShowData: defaults.numToShow,
                    pageAmountData: defaults.pageAmount,
                };
            },
            props: {
                "template-mode": String,
                "more-text": String,
                "more-available-callback": Function,
                "page-amount": Number,
                "no-empty-rows": Boolean,
                "num-to-show": Number,
                "show-all": {
                    type: Boolean,
                    default: false,
                },
            },
            template: tempEl, // matches ID in template above
            mounted: function () {
                // props have proper names when interacting with 'data' members
                // Note, since the prop is used only on mount, changing it
                // in the dom has no subsequent effect (but could if desired)
                if (DEBUG) console.log("cl149: props", this.$props);
                if (this.pageAmount) {
                    this.pageAmountData = this.pageAmount;
                }
                if (this.numToShow) {
                    this.numToShowData = this.numToShow;
                }
                if (DEBUG) console.log("cl62: num-to-show prop", this.numToShow);
                if (DEBUG) console.log("cl63: page-amount prop", this.pageAmount);
                if (DEBUG) console.log("cl64: numToShowData", this.numToShowData);
                if (DEBUG) console.log("cl65: pageAmountData", this.pageAmountData);
                window.addEventListener('resize', this.resize)
                this.resize();
            },
            methods: {
                resize: function () {
                    if (DEBUG) console.log("cl71: resizing");
                    this.markChildren();
                },
                getExtraRowLen: function (layoutName) {
                    const layouts = this.getLayouts(layoutName);
                    const mediaSize = this.getMediaType();
                    const layoutsFMS = layouts[mediaSize] ? layouts[mediaSize] : layouts.desktop;
                    const extraRowLen = layoutsFMS.meta ? layoutsFMS.meta.extraRowLen : null;

                    if (DEBUG) console.log("cl80:", layoutName, layouts, extraRowLen);

                    return extraRowLen;
                },
                getExtraRow: function (layoutName) {
                    const lfms = this.getLayoutsForMediaSize(layoutName);
                    return lfms ? lfms.extraRow : null;
                },
                getLayoutsForMediaSize: function (layoutName) {
                    // if mediaSize is not present in dictionary then uses 'desktop'
                    // ergo: 'desktop' property is mandatory
                    const mediaSize = this.getMediaType();

                    let layouts = this.getLayouts(layoutName);

                    /* if there is a set for the mediasize and number, pick it,
                     * otherwise layout remains the starting one above
                     * Note: Every case should have a layout but just in case
                     * this fails more gracefully, probably.
                     */
                    const layoutsForMediaSize = layouts[mediaSize] ? layouts[mediaSize] : layouts.desktop;
                    return layoutsForMediaSize;
                },
                getLayout: function (layoutName) {
                    // get particular layout based on layoutName argument
                    // internally: also uses number of children and media size
                    const numItems = this.$children.length;
                    const lfms = this.getLayoutsForMediaSize(layoutName);
                    if (lfms) {
                        if (lfms[numItems]) {
                            layout = lfms[numItems];
                        } else if (lfms.full) {
                            layout = lfms.full;
                        }
                    }
                    else {
                        // using dgov-grid these are classes for up to five children
                        const default_layout = ["dgov-col-6:feature", "dgov-col-6:feature", "dgov-col-4",
                            "dgov-col-4", "dgov-col-4"];
                        layout = default_layout;
                    }
                    return layout;
                },
                getLayouts: function (layoutName) {
                    let layouts;
                    switch (layoutName) {
                        case "feature-column":
                            layouts = fc_layouts;
                            break;
                        case "feature-grid":
                            layouts = fg_layouts;
                            break;
                        case "override":
                            layouts = window._dgov_feature_layout_override;
                            break;
                        case "story":
                            layouts = story_layouts;
                            break;
                        case "blog":
                        default:
                            layouts = blog_layouts;
                            break;
                    }
                    return layouts;
                },
                getMediaType: function () {
                    // @@TODO: put in a shared file
                    const isXS = window.matchMedia("(max-width: 767px)").matches;
                    const isMD = window.matchMedia("(min-width: 768px) and (max-width: 991px)").matches;
                    const isLG = window.matchMedia("(min-width: 992px) and (max-width: 1199px)").matches;
                    const isGiant = window.matchMedia("(min-width: 1200px)").matches;
                    if (isXS) { return "xs"; }
                    else if (isMD) { return "md"; }
                    else if (isLG) { return "lg"; }
                    else /* if (isGiant) */ { return "desktop" };
                },
                markChildren: function () {
                    const numItems = this.$children.length;
                    const mediaSize = this.getMediaType();

                    let layout = this.getLayout(this.templateMode);
                    let extraRow = this.getExtraRow(this.templateMode);
                    const extraRowLen = this.getExtraRowLen(this.templateMode)
                    const layoutLen = layout.length;
                    if (DEBUG) console.log("cl163 eRL:", extraRowLen);
                    let numLastLine = 0; // important default
                    if (extraRowLen) {
                        /* make sure extra rows are full, the number needed
                         * changes based on layout.
                         * Note: this probably has kinks with the extraRow features...
                         * should use extraRow.length.  Do when relevant.
                         */
                        if (DEBUG) console.log("cl170: layoutLen, eRL", layoutLen, extraRowLen);
                        /* numExtra calculation:
                         *  layoutlen is how much we're trying to show,
                         *  how many more are there I need to show?
                        */
                        const numExtra = this.numToShowData - layoutLen;
                        /*
                         * numLastLine calculation:
                         * this.$children.length is the total to show;
                         * how much longer is that than layout length?
                         * modulus the extraRowLen... that's how many
                         *  are on the last line.
                         * So I can use that for some modes that want to know.
                         * NOTE: full lines don't count, so if all full, will == 0
                        */
                        numLastLine = (this.$children.length - layoutLen) % extraRowLen;
                        if (DEBUG) console.log("cl186: numExtra, numLastLine", numExtra, numLastLine);


                        const lastRowLen = numExtra % extraRowLen;
                        if (DEBUG) console.log("clx174: lastRowLen", lastRowLen);
                        if (lastRowLen != 0) {
                            // how many more to fill this row?
                            // will be 0 if numEx
                            const moreNeeded = extraRowLen - lastRowLen;
                            if (DEBUG) console.log("cl178: moreNeeded", moreNeeded);
                            const adjustedNumToShow = this.numToShowData + moreNeeded;
                            if (DEBUG) console.log("cl180: adjustNumToShow", adjustedNumToShow, "was", this.numToShow);
                            this.numToShowData = adjustedNumToShow;
                            if (DEBUG) console.log("cl182: numToShowData, numItems:", this.numToShowData, this.numItems);
                        }

                        // it's numToShowData because the property gets the name.
                        if (DEBUG) console.log("clx184: numToShowData", this.numToShowData);
                    }

                    let numChildren = this.$children.length;
                    for (let i = 0; i < numChildren ; i++) {
                        const item = this.$children[i]

                        if (i >= layout.length) {
                            // hide
                            //item.addClass("hidden-item");
                            let reflexClass, cardType;
                            if (extraRow) {
                                const ind = (i - layout.length) % extraRow.length;
                                const lay = extraRow[ind];
                                const pieces = lay.split(":");
                                reflexClass = pieces[0];
                                cardType = pieces[1] ? pieces[1] : null;
                            }
                            else {
                                const pieces = layout[layout.length - 1].split(":");
                                reflexClass = pieces[0];
                                cardType = pieces[1] ? pieces[1] : null;
                            }
                            if (item.setCardType) item.setCardType(cardType); // undefined means default
                            if (item.resetClass) item.resetClass();
                            if (item.addClass) item.addClass(reflexClass);
                        } else {
                            const pieces = layout[i].split(":");
                            const reflexClass = pieces[0];
                            const cardType = pieces[1]; // might be undefined
                            // if (DEBUG) console.log("f-t85:", pieces, reflexClass, cardType);
                            if (item.setCardType) item.setCardType(cardType); // undefined means default
                            if (item.resetClass) item.resetClass();
                            if (item.addClass) item.addClass(reflexClass);
                        }

                        if (!this.showAll && (i >= this.numToShowData)) {
                            if (item.addClass) item.addClass("hidden-item");
                        }
                        /* Simple first draf of noEmptyRows options... may need work
                         * possibly pretty specific to motivating use case.
                         *
                        */
                        //if (DEBUG) console.log("noEmptyRows", this.noEmptyRows);
                        if (this.noEmptyRows && (numLastLine != 0)) {
                            const showItem = i < numChildren - numLastLine;
                            if (DEBUG) console.log("i, show?", i, showItem);
                            if (!showItem && item.addClass) item.addClass("hidden-item");
                        }


                    }
                },
                thereAreMoreToView: function () {
                    let moreToView = null;
                    if (!this.showAll && (this.numToShowData < this.$children.length)) {
                        moreToView = true;
                    }
                    else {
                        moreToView = false;
                    }
                    if (this.moreAvailableCallback) {
                        this.moreAvailableCallback(moreToView)
                    }
                    return moreToView;
                },
                viewMore: function () {
                    // view more!
                    this.numToShowData += this.pageAmountData;
                    if (DEBUG) console.log("viewMore event, numToShow", this.numToShowData);
                    this.resize();
                    let self = this;
                    setTimeout(function () {
                        if (DEBUG) console.log("tempUse, tempEl", tempUse, tempEl);
                        const targel = $(self.$el).find('.bottom-target')[0];
                        if (targel.scrollIntoView) {
                            targel.scrollIntoView(false);
                        }
                    }, 100);
                },
            }
        });
        /* /////

            Layouts Library

                layout types:
                    * blog
                    * story
                    * feature-grid
                    * feature-column

                Below are the data structures, they are used in the methods
                above to choose the right final layout based on the media size
                and also the length of the list.
                Each set of "layouts" is a valid json structure of this shape:
                    whatever_layouts = {
                        desktop: {
                            meta: {...},
                            full: [...],
                            4: [...],
                        },
                        ld: {...},
                        mk: {...},
                        xs: {...}
                    }
                You can see it as a dictionary/hash in which we:
                    0. Layout is performed for all immediate children which
                       are inserted to the default/general vue component "slot".
                    1. Look up the media size
                    2. Then we see if there is a key ("object member") named
                       with the number that matches the length of items
                       being laid out, like "4" in the example.
                    3. If no key matches the length of items being laid out,
                       then the "full" member is used.
                    4. What is picked out then is a list.  The list is a list
                       of strings with a class to apply (we're using dgove reflex grid
                       classes) optionally followed by ":" and a card type name.
                    5. Available card types depend on the type of card or adaptive
                       cards imported. If the card type is not recognized, a default
                       card will be used.
                    6. The "full" list will always be used when there are more
                       items than exist in the "layout" list. By default what happens
                       is all items laid out beyond the end of the layout list
                       use the FINAL layout spec in the list.
                    7. The meta object seen above, within a media-level object
                       allows setting things that might differ, like the page
                       size and row length, or what to repeat instead of
                       the last element as mentioned in point 6.

            If I was you I'd check the structures to check that the above is still
            accurate.  This is why I have not documented the meta object, I'm using
            it whenever I need to, and you might as well look at the structure below
            to see what's going on, then looking for the property names in the methods
            above to see what they override or affect.


        ///// */

        //
        // Feature Blog Layout
        //
        const desktopAndLg = {
            full: ["dgov-col-6:feature", "dgov-col-6:feature",
                "dgov-col-4", "dgov-col-4", "dgov-col-4"],
            4: ["dgov-col-12:feature",
                "dgov-col-4", "dgov-col-4", "dgov-col-4"],
            3: ["dgov-col-4", "dgov-col-4", "dgov-col-4"],
            2: ["dgov-col-6:feature", "dgov-col-6:feature"],
            1: ["dgov-col-12:feature"],
        };

        const blog_layouts = {
            desktop: desktopAndLg,
            lg: desktopAndLg,
            md: {
                full: ["dgov-col-12:feature", "dgov-col-6", "dgov-col-6", "dgov-col-6", "dgov-col-6"],
                4: ["dgov-col-12:feature",
                    "dgov-col-12:feature",
                    "dgov-col-6", "dgov-col-6"],
                3: ["dgov-col-12", "dgov-col-12", "dgov-col-12"],
                2: ["dgov-col-12:feature", "dgov-col-12:feature"],
                1: ["dgov-col-12:feature"],
            },
            xs: {
                full: ["dgov-col-12", "dgov-col-12", "dgov-col-12", "dgov-col-12", "dgov-col-12"],
                4: ["dgov-col-12", "dgov-col-12", "dgov-col-12", "dgov-col-12"],
                3: ["dgov-col-12", "dgov-col-12", "dgov-col-12"],
                2: ["dgov-col-12", "dgov-col-12"],
                1: ["dgov-col-12"],
            },
        }
        //
        // Story Layout
        //
        const grid3col = ["dgov-col-4", "dgov-col-4", "dgov-col-4"];
        const grid2col = ["dgov-col-6", "dgov-col-6"];
        const grid1col = ["dgov-col-12"];
        const layout3xn = {
            meta: {
                extraRowLen: 3,
            },
            full: grid3col,
            2: grid2col,
            1: ["dgov-col-12"],
        }
        const layout2xn = {
            meta: {
                extraRowLen: 2,
            },
            full: grid2col,
            1: ["dgov-col-12"],
        }
        const layout1xn = {
            meta: {
                //extraRowLen: 1,
            },
            full: grid1col,
        }
        const story_layouts = {
            desktop: layout3xn,
            lg: layout2xn,
            md: layout2xn,
            xs: layout1xn
        }

        /* feature-grid layout */

        const _fg_desktopAndLg = {
            meta: {
                extraRowLen: 3,
            },
            full: ["dgov-col-12:featured-story",
                "dgov-col-12:featured-story.even",
                "dgov-col-4", "dgov-col-4", "dgov-col-4"],
        };

        const _fg_lg = {
            meta: {
                extraRowLen: 2,
            },
            full: ["dgov-col-12:featured-story",
                "dgov-col-12:featured-story.even",
                "dgov-col-6", "dgov-col-6",],
        };

        const _fg_mdAndXs = {
            full: ["dgov-col-12"],

        }

        const fg_layouts = {
            desktop: _fg_desktopAndLg,
            lg: _fg_lg,
            md: _fg_mdAndXs,
            xs: _fg_mdAndXs,
        }

        /* feature-column layout */

        const _fc_feat = {
            full: ["dgov-col-12:featured-story",
                "dgov-col-12:featured-story.even",],
            extraRow: ["dgov-col-12:featured-story",
                "dgov-col-12:featured-story.even",],
        };

        const _fc_stand = {
            full: ["dgov-col-12",],

        }

        const fc_layouts = {
            desktop: _fc_feat,
            lg: _fc_feat,
            md: _fc_stand,
            xs: _fc_stand,
        }

        // End of Layouts
    })();
             </script>
             <style>
              .card-layout .dgov-grid.card-layout-container .hidden-item {
    display:none;
}
.feature-grid.alist.stories .card-layout .item a.title,
.feature-grid.alist.stories .card-layout .item a.title:link {
    font-size:1.4rem;
}

.card-layout .more-row {
    display: flex;
    align-items: center;
    flex-direction: column;
    padding: 15px;
    padding-top: 2rem;
}

/* Note: this relates to lack of encapsulation where
    Dashboard applies .list class to parent container.  Would be better
    to have an event so that the card code 'knows' the card is in 'list'
    mode.  This rule isn't needed however, but is documentation since this
    may be an issue if the structure changes to include future features.
    Special rule is in story-card, may be moved or similar for other types
    of cards.    */
.alist.stories.list .card-layout .card-layout-container {
    display:block;
}


/*.feature-template-container {
    display: flex;
    flex-direction: row;
}*/
             </style>
             <!--
    This fragment compiles a Vue template located in a div with
    an id of "blogGrid-2325".
-->
             <script type="text/javascript">
              (function () {
        const DEBUG = false;
        if (DEBUG) console.log("m-i2: vue:initialize:blogGrid");
        document.addEventListener("DOMContentLoaded", function () {
            if (DEBUG) console.log("initializing vue on blogGrid in module 2325")
            const elTarg = "#blogGrid-2325";

            // supports sending in "data" and "methods" by naming convention
            let modData = {};
            let modMethods = {};
            const typeofModData = typeof(blogGrid2325_data);
            const typeofModMethods = typeof(blogGrid2325_methods);

            if (typeofModData != "undefined") {
                modData = blogGrid2325_data;
            }
            if (typeofModMethods != "undefined") {
                modMethods = blogGrid2325_methods;
            }
            const el = $(elTarg)[0];
            const moduleVue = new Vue({
                el: el,
                mounted: function () {
                    // call the callback if exists.
                    // naming vueToken_mounted_2325
                    if (DEBUG) console.log("cb?", typeof (vueToken_mounted_2325));
                    if (typeof (vueToken_mounted_2325) === "function" ) {
                        const mountedCB = vueToken_mounted_2325;
                        if (mountedCB) {
                            // currently no arguments, just a time event, e.g. when slick
                            // could be initialized.
                            this.$nextTick(mountedCB);
                        }
                    }
                },
                data: modData,
                methods: modMethods,
            });

        });
    })();
             </script>
            </div>
           </div>
          </div>
          <!-- End_Module_2325 -->
         </div>
        </div>
        <!--end of empty container -->
       </div>
      </div>
     </div>
    </div>
    <div class="DNNEmptyPane" id="dnn_ContentPaneFullBleed1">
    </div>
    <div id="content-pane-wrap">
     <div class="content-wrap">
      <div class="DNNEmptyPane" id="dnn_ContentPane">
      </div>
     </div>
    </div>
    <div class="DNNEmptyPane" id="dnn_ContentPaneFullBleed2">
    </div>
    <div id="content-pane-wrap2">
     <div class="content-wrap">
      <div class="DNNEmptyPane" id="dnn_ContentPane2">
      </div>
     </div>
    </div>
    <div id="dnn_ContentPaneFullBleed3">
     <div class="DnnModule DnnModule-ArticleCSDashboard DnnModule-2327">
      <a name="2327">
      </a>
      <div class="empty-container base-container">
       <div id="dnn_ctr2327_ContentPane">
        <!-- Start_Module_2327 -->
        <div class="slice-angle slice-angle-gray slice-angle-down-top">
         <div class="DNNModuleContent ModArticleCSDashboardC" id="dnn_ctr2327_ModuleContent">
          <div id="dnn_ctr2327_Dashboard_ph">
           <section class="dgov-carousel carousel-wrap-mask dgov-carousel-explore" id="exploreSlider-2327">
            <div class="carousel-wrap content-wrap-wide">
             <h1 class="pull-title">
              Explore
             </h1>
             <div class="carousel">
              <div class="item-2539877">
               <adaptive-story-card :has-terms="true" :show-image="true" article-alt="A young man in military shirt, tie and cap looks at the camera." article-id="2539877" article-title="Medal of Honor Monday: Army Chaplain Emil J. Kapaun" article-url="https://www.defense.gov/Explore/Features/Story/Article/2539877/medal-of-honor-monday-army-chaplain-emil-j-kapaun/" article-url-or-link="https://www.defense.gov/Explore/Features/Story/Article/2539877/medal-of-honor-monday-army-chaplain-emil-j-kapaun/" article-url-or-link-absolute="https://www.defense.gov/Explore/Features/Story/Article/2539877/medal-of-honor-monday-army-chaplain-emil-j-kapaun/" content-type-name="Story" content-type-val="800" image-caption="Army Chaplain (Capt.) Emil J. Kapaun, Medal of Honor recipient." image-url="https://media.defense.gov/2021/Mar/17/2002602302/1280/1280/0/210316-A-ZZ999-061A.JPG" open-in-new="" publish-date-ap="March 22, 2021" publish-date-jss="2021-03-22T00:00:00" term-name="Know Your Military" term-url="http://www.defense.gov/Explore/Inside-DOD/Term/2580/know-your-military/">
                <div slot="summary">
                 Army Chaplain Emil Kapaun inspired his men during the Korean War with calm, courageous leadership, instilling in his fellow prisoners of war a desire to stay strong — even after he no longer could. His actions eventually earned him the nation's highest military honor.
                </div>
               </adaptive-story-card>
              </div>
              <div class="item-2544535">
               <adaptive-story-card :has-terms="true" :show-image="true" article-alt="Secretary of Defense Lloyd J. Austin III talks with another civilian at a table in front of an Afghan flag." article-id="2544535" article-title="Austin Meets With Afghan, U.S., Coalition Leaders; Gathers Info to Aid Biden Decision on U.S. Effort" article-url="https://www.defense.gov/Explore/News/Article/Article/2544535/austin-meets-with-afghan-us-coalition-leaders-gathers-info-to-aid-biden-decisio/" article-url-or-link="https://www.defense.gov/Explore/News/Article/Article/2544535/austin-meets-with-afghan-us-coalition-leaders-gathers-info-to-aid-biden-decisio/" article-url-or-link-absolute="https://www.defense.gov/Explore/News/Article/Article/2544535/austin-meets-with-afghan-us-coalition-leaders-gathers-info-to-aid-biden-decisio/" content-type-name="News" content-type-val="1" image-caption="" image-url="https://media.defense.gov/2021/Mar/21/2002605038/1280/1280/0/210321-D-BN624-1045.JPG" open-in-new="" publish-date-ap="March 21, 2021" publish-date-jss="2021-03-21T12:02:00" term-name="Defense News" term-url="http://www.defense.gov/Explore/Inside-DOD/Term/2903/defense-news/">
                <div slot="summary">
                 Secretary of Defense Lloyd J. Austin III met Afghan, American and coalition leaders in Kabul to better understand the situation in Afghanistan and see the way forward to a just peace.
                </div>
               </adaptive-story-card>
              </div>
              <div class="item-2544434">
               <adaptive-story-card :has-terms="true" :show-image="true" article-alt="Secretary of Defense Lloyd J. Austin III and his Indian hold their forearms up together outside a building." article-id="2544434" article-title="India, U.S. Look at Ways to Grow Partnership to Protect Indo-Pacific" article-url="https://www.defense.gov/Explore/News/Article/Article/2544434/india-us-look-at-ways-to-grow-partnership-to-protect-indo-pacific/" article-url-or-link="https://www.defense.gov/Explore/News/Article/Article/2544434/india-us-look-at-ways-to-grow-partnership-to-protect-indo-pacific/" article-url-or-link-absolute="https://www.defense.gov/Explore/News/Article/Article/2544434/india-us-look-at-ways-to-grow-partnership-to-protect-indo-pacific/" content-type-name="News" content-type-val="1" image-caption="" image-url="https://media.defense.gov/2021/Mar/20/2002604910/1280/1280/0/210320-D-BN624-001.JPG" open-in-new="" publish-date-ap="March 20, 2021" publish-date-jss="2021-03-20T11:32:00" term-name="Partnerships" term-url="http://www.defense.gov/Explore/Inside-DOD/Term/2582/partnerships/">
                <div slot="summary">
                 Secretary of Defense Lloyd J. Austin III came away from his meetings with Indian officials in New Delhi encouraged by the response from "an increasingly important partner amid today's rapidly shifting international dynamics."
                </div>
               </adaptive-story-card>
              </div>
              <div class="item-2544183">
               <adaptive-story-card :has-terms="true" :show-image="true" article-alt="At night, a submarine sits submerged in the water in front of an industrial complex." article-id="2544183" article-title="Improvements to Organic Industrial Base Prepare Services for Future Fight" article-url="https://www.defense.gov/Explore/News/Article/Article/2544183/improvements-to-organic-industrial-base-prepare-services-for-future-fight/" article-url-or-link="https://www.defense.gov/Explore/News/Article/Article/2544183/improvements-to-organic-industrial-base-prepare-services-for-future-fight/" article-url-or-link-absolute="https://www.defense.gov/Explore/News/Article/Article/2544183/improvements-to-organic-industrial-base-prepare-services-for-future-fight/" content-type-name="News" content-type-val="1" image-caption="" image-url="https://media.defense.gov/2021/Mar/19/2002604786/1280/1280/0/120315-N-TT535-014C.JPG" open-in-new="" publish-date-ap="March 19, 2021" publish-date-jss="2021-03-19T18:16:00" term-name="Defense News" term-url="http://www.defense.gov/Explore/Inside-DOD/Term/2903/defense-news/">
                <div slot="summary">
                 The Army, Navy, Air Force and Marine Corps are all putting significant effort into improving their portions of the organic industrial base.
                </div>
               </adaptive-story-card>
              </div>
              <div class="item-2544144">
               <adaptive-story-card :has-terms="true" :show-image="true" article-alt="Deputy Defense Secretary Kathleen H. Hicks sits and speaks at a table." article-id="2544144" article-title="Hicks: Governance Differences Between U.S., China Are in Sharp Focus" article-url="https://www.defense.gov/Explore/News/Article/Article/2544144/hicks-governance-differences-between-us-china-are-in-sharp-focus/" article-url-or-link="https://www.defense.gov/Explore/News/Article/Article/2544144/hicks-governance-differences-between-us-china-are-in-sharp-focus/" article-url-or-link-absolute="https://www.defense.gov/Explore/News/Article/Article/2544144/hicks-governance-differences-between-us-china-are-in-sharp-focus/" content-type-name="News" content-type-val="1" image-caption="" image-url="https://media.defense.gov/2021/Mar/19/2002604800/1280/1280/0/210319-D-XI929-2013.JPG" open-in-new="" publish-date-ap="March 19, 2021" publish-date-jss="2021-03-19T18:13:00" term-name="Defense News" term-url="http://www.defense.gov/Explore/Inside-DOD/Term/2903/defense-news/">
                <div slot="summary">
                 China is the pacing challenge for the U.S. military, and the economic security and governance differences between the United States and China have come into sharper focus in the past several decades, Deputy Defense Secretary Kathleen H. Hicks said.
                </div>
               </adaptive-story-card>
              </div>
              <div class="item-2543941">
               <adaptive-story-card :has-terms="true" :show-image="true" article-alt="A jet refuels." article-id="2543941" article-title="Space Domain Critical to Combat Operations Since Desert Storm" article-url="https://www.defense.gov/Explore/News/Article/Article/2543941/space-domain-critical-to-combat-operations-since-desert-storm/" article-url-or-link="https://www.defense.gov/Explore/News/Article/Article/2543941/space-domain-critical-to-combat-operations-since-desert-storm/" article-url-or-link-absolute="https://www.defense.gov/Explore/News/Article/Article/2543941/space-domain-critical-to-combat-operations-since-desert-storm/" content-type-name="News" content-type-val="1" image-caption="" image-url="https://media.defense.gov/2021/Mar/19/2002604700/1280/1280/0/160114-F-EX123-013C.JPG" open-in-new="" publish-date-ap="March 19, 2021" publish-date-jss="2021-03-19T16:39:18" term-name="Reform" term-url="http://www.defense.gov/Explore/Inside-DOD/Term/2583/reform/">
                <div slot="summary">
                 Due to the Defense Department's successful use of space-based capabilities during the conflict, many experts consider Desert Storm to have been the first space war.
                </div>
               </adaptive-story-card>
              </div>
              <div class="item-2543846">
               <adaptive-story-card :has-terms="true" :show-image="true" article-alt="A man in business attire walks along the tarmac with a woman in a military uniform; a large plane bearing the words United States of America is in the background." article-id="2543846" article-title="In India, Austin Looks for Ways to Increase Cooperation With Allies" article-url="https://www.defense.gov/Explore/News/Article/Article/2543846/in-india-austin-looks-for-ways-to-increase-cooperation-with-allies/" article-url-or-link="https://www.defense.gov/Explore/News/Article/Article/2543846/in-india-austin-looks-for-ways-to-increase-cooperation-with-allies/" article-url-or-link-absolute="https://www.defense.gov/Explore/News/Article/Article/2543846/in-india-austin-looks-for-ways-to-increase-cooperation-with-allies/" content-type-name="News" content-type-val="1" image-caption="" image-url="https://media.defense.gov/2021/Mar/19/2002604596/1280/1280/0/210319-D-BN624-0034M.JPG" open-in-new="" publish-date-ap="March 19, 2021" publish-date-jss="2021-03-19T15:40:00" term-name="Defense News" term-url="http://www.defense.gov/Explore/Inside-DOD/Term/2903/defense-news/">
                <div slot="summary">
                 Secretary of Defense Lloyd J. Austin III commended Indian leaders on their growing roles in the Indo-Pacific region and the growing engagement they have with like-minded partners across the region to promote shared goals.
                </div>
               </adaptive-story-card>
              </div>
              <div class="item-2543560">
               <adaptive-story-card :has-terms="true" :show-image="true" article-alt="Secretary of Defense Lloyd J. Austin III stands facing Kathleen H. Hicks, who holds up her right hand and places her left hand on a book." article-id="2543560" article-title="Hicks' Civil Service Prepared Her for Historic Deputy Defense Secretary Job" article-url="https://www.defense.gov/Explore/Features/Story/Article/2543560/hicks-civil-service-prepared-her-for-historic-deputy-defense-secretary-job/" article-url-or-link="https://www.defense.gov/Explore/Features/Story/Article/2543560/hicks-civil-service-prepared-her-for-historic-deputy-defense-secretary-job/" article-url-or-link-absolute="https://www.defense.gov/Explore/Features/Story/Article/2543560/hicks-civil-service-prepared-her-for-historic-deputy-defense-secretary-job/" content-type-name="Story" content-type-val="800" image-caption="" image-url="https://media.defense.gov/2021/Feb/09/2002579388/1280/1280/0/210209-D-XI929-1007Y.JPG" open-in-new="" publish-date-ap="March 19, 2021" publish-date-jss="2021-03-19T13:05:00" term-name="Defense News" term-url="http://www.defense.gov/Explore/Inside-DOD/Term/2903/defense-news/">
                <div slot="summary">
                 To some extent, Deputy Secretary of Defense Kathleen H. Hicks' entire professional life has been preparation for her current job.
                </div>
               </adaptive-story-card>
              </div>
              <div class="item-2542890">
               <adaptive-story-card :has-terms="true" :show-image="true" article-alt="Man in business attire boards plane." article-id="2542890" article-title="Austin Stays in Touch With Australian Leaders During Indo-Pacific Trip" article-url="https://www.defense.gov/Explore/News/Article/Article/2542890/austin-stays-in-touch-with-australian-leaders-during-indo-pacific-trip/" article-url-or-link="https://www.defense.gov/Explore/News/Article/Article/2542890/austin-stays-in-touch-with-australian-leaders-during-indo-pacific-trip/" article-url-or-link-absolute="https://www.defense.gov/Explore/News/Article/Article/2542890/austin-stays-in-touch-with-australian-leaders-during-indo-pacific-trip/" content-type-name="News" content-type-val="1" image-caption="" image-url="https://media.defense.gov/2021/Mar/19/2002604003/1280/1280/0/210319-D-BN624-0411A.JPG" open-in-new="" publish-date-ap="March 19, 2021" publish-date-jss="2021-03-19T08:54:00" term-name="Partnerships" term-url="http://www.defense.gov/Explore/Inside-DOD/Term/2582/partnerships/">
                <div slot="summary">
                 Secretary of Defense Lloyd J. Austin III continued his outreach to Indo-Pacific allies and partners with a call to Australia's Foreign Minister Marise Payne even as he was flying to meet with Indian leaders in New Delhi.
                </div>
               </adaptive-story-card>
              </div>
              <div class="item-2542548">
               <adaptive-story-card :has-terms="true" :show-image="true" article-alt="A graphic for Air Force Capt. (Dr.) Shawn Bishop." article-id="2542548" article-title="Air Force Family Doctor Helps Fight COVID-19 in Afghanistan" article-url="https://www.defense.gov/Explore/Features/Story/Article/2542548/air-force-family-doctor-helps-fight-covid-19-in-afghanistan/" article-url-or-link="https://www.defense.gov/Explore/Features/Story/Article/2542548/air-force-family-doctor-helps-fight-covid-19-in-afghanistan/" article-url-or-link-absolute="https://www.defense.gov/Explore/Features/Story/Article/2542548/air-force-family-doctor-helps-fight-covid-19-in-afghanistan/" content-type-name="Story" content-type-val="800" image-caption="" image-url="https://media.defense.gov/2021/Mar/18/2002603847/1280/1280/0/210302-F-OC707-0900C.JPG" open-in-new="" publish-date-ap="March 19, 2021" publish-date-jss="2021-03-19T07:20:40" term-name="Defense News" term-url="http://www.defense.gov/Explore/Inside-DOD/Term/2903/defense-news/">
                <div slot="summary">
                 Air Force Capt. Shawn Bishop, a family physician with Eglin Hospital, worked with his team to create the policies and procedures the hospital would use to battle COVID-19 at the Bagram Air Base inpatient care unit in Afghanistan.
                </div>
               </adaptive-story-card>
              </div>
              <div class="last-slide image-wrap">
               <div>
                <a class="zoom-bg" href="/explore">
                 <div class="plus">
                 </div>
                 <h2>
                  View More
                 </h2>
                </a>
               </div>
              </div>
             </div>
            </div>
           </section>
           <style>
            @media all and (-ms-high-contrast:none), all and (-ms-high-contrast:active) {
        .adaptive-story-card .story-card.item.explore-item {
            display: block;
        }
    }
           </style>
           <script type="text/javascript">
            function startSlickUp() {
        const DEBUG = true;

        var $container = $('#exploreSlider-2327'),
            $captions = $container.find('figcaption');

        $container.find('.carousel').slick({
            infinite: false,
            slidesToShow: 3,
            slidesToScroll: 1,
            swipeToSlide: true,
            prevArrow: '<i class="fa fa-chevron-left carousel-previous"></i>',
            nextArrow: '<i class="fa fa-chevron-right carousel-next"></i>',
            responsive: [
                {
                    infinite: false,
                    breakpoint: 1025,
                    settings: {
                        slidesToShow: 1,
                        slidesToScroll: 1,
                        arrows: false
                    }
                }
            ]
        });
        $container.find('.slick-slide').on('click', function (e) {
            var $this = $(this);
            if (!$this.hasClass('slick-current') && !$this.hasClass('slick-active')) {
                e.preventDefault();
                e.stopPropagation();
                if ($this.index() > $container.find('.slick-current:eq(0)').index()) {
                    // $container.find('.carousel-next').click();
                    $container.find('.carousel').slick('slickNext');
                } else {
                    // $container.find('.carousel-previous').click();
                    $container.find('.carousel').slick('slickPrev');
                }
            }
        });
        function setCaptionHeights() {
            var h = 0;
            const slides = $(".slick-slide");
            slides.each(function () {
                const outerH = $(this).outerHeight();

                if (DEBUG) console.log("h, this.outerHeight ->", h, outerH);
                h = outerH > h ? outerH : h;
                if (DEBUG) console.log("new h:", h)

            });
            const adaptiveSlides = $('.adaptive-story-card');
            slides.css('min-height', h + 'px');
            adaptiveSlides.css('height', h + 'px');
        }
        setCaptionHeights();

    };

    //setTimeout(startSlickUp, 2000);
    // @@vueToken: the vue:initialize command will call this function if present.
    // This is so Vue can render the slide before slick old school's em.
    vueToken_mounted_2327 = startSlickUp;
           </script>
           <script id="vue-adaptive-card" type="text/x-template">
            <div class="adaptive-story-card" v-bind:class="classes.join(' ')">
        <!-- 'featured-story' CardType -->
        <featured-story-card v-if="cardType=='featured-story'"
            :article-id="articleId"
            :article-title="articleTitle"
            :article-alt="articleAlt"
            :article-summary="articleSummary"
            :article-url="articleUrl"
            :article-url-or-link="articleUrlOrLink"
            :article-url-or-link-absolute="articleUrlOrLinkAbsolute"
            :card-type="cardType"
            :card-subtype="cardSubtype"
            :category-line-override="categoryLineOverride"                             
            :content-type-val="contentTypeVal"
            :content-type-name="contentTypeName"
            :can-edit="canEdit"
            :edit-url="editUrl"
            :edit-image="editImage"                            
            :has-terms="hasTerms"
            :image-url="imageUrl"
            :image-caption="imageCaption"
            :is-video="isVideo"
            :open-in-new="openInNew"
            :publish-date-jss="publishDateJss"
            :publish-date-ap="publishDateAp"
            :show-image="showImage"
            :term-url="termUrl"
            :term-name="termName">
            <div slot="summary">
                <slot name="summary">

                </slot>
            </div>
        </featured-story-card>
        <!-- 'story' CardType -->
        <story-card v-else-if="cardType=='story'"
            :article-id="articleId"
            :article-title="articleTitle"
            :article-alt="articleAlt"
            :article-url="articleUrl"
            :article-url-or-link="articleUrlOrLink"
            :article-url-or-link-absolute="articleUrlOrLinkAbsolute"
            :category-line-override="categoryLineOverride"                             
            :card-type="cardType"
            :card-subtype="cardSubtype"
            :content-type-val="contentTypeVal"
            :content-type-name="contentTypeName"
            :can-edit="canEdit"
            :edit-url="editUrl"
            :edit-image="editImage"                            
            :has-terms="hasTerms"
            :image-url="imageUrl"
            :image-caption="imageCaption"
            :is-video="isVideo"
            :open-in-new="openInNew"
            :publish-date-jss="publishDateJss"
            :publish-date-ap="publishDateAp"
            :show-image="showImage"
            :term-url="termUrl"
            :term-name="termName">
        </story-card>
        <!-- Default Card -->
        <story-card v-else
            :article-id="articleId"
            :article-title="articleTitle"
            :article-alt="articleAlt"
            :article-url="articleUrl"
            :article-url-or-link="articleUrlOrLink"
            :article-url-or-link-absolute="articleUrlOrLinkAbsolute"
            :category-line-override="categoryLineOverride"                             
            :card-type="cardType"
            :card-subtype="cardSubtype"
            :content-type-val="contentTypeVal"
            :content-type-name="contentTypeName"
            :can-edit="canEdit"
            :edit-url="editUrl"
            :edit-image="editImage"                            
            :has-terms="hasTerms"
            :image-url="imageUrl"
            :image-caption="imageCaption"
            :is-video="isVideo"
            :open-in-new="openInNew"
            :publish-date-jss="publishDateJss"
            :publish-date-ap="publishDateAp"
            :show-image="showImage"
            :term-url="termUrl"
            :term-name="termName">
        </story-card>
    </div>
           </script>
           <script type="text/javascript">
            (function () {
        const DEBUG = false;
        if (DEBUG) console.log("this is the adaptive-card (default card) component");
        const tempSel = "";
        const tempUse = tempSel ? tempSel : "#vue-adaptive-card";
        if (DEBUG) console.log("ac102:", tempSel, tempUse);
        const tempEl = $(tempUse)[0];
        if (DEBUG) console.log("ac104:", tempEl);
        Vue.component('adaptive-story-card', {
            name: 'adaptive-story-card',
            data: function () {
                return {
                    templateSelector: "",
                    classes: [],
                    cardType: null,
                    cardSubtype: null,
                };
            },
            props: [
                "article-alt",
                "article-id",
                "article-summary",
                "article-title",
                "article-url",
                "article-url-or-link",
                "article-url-or-link-absolute",
                "can-edit",
                "category-line-override",
                "content-type-val",
                "content-type-name",
                "edit-image",
                "edit-url",
                "has-terms",
                "image-caption",
                "image-url",
                "is-video",
                "open-in-new",
                "publish-date-jss",
                "publish-date-ap",
                "show-image",
                "term-url",
                "term-name",
            ],
            template: tempEl, // el that matches ID in template OR override passed in

            mounted: function () {
                if (DEBUG) console.log("ac189: mounted:", this.$props);
            },
            methods: {
                addClass: function (newClass) {
                    this.classes.push(newClass);
                },
                resetClass: function () {
                    this.classes = [];
                },
                setCardType: function (cardType) {
                    // This is an event from the layout
                    // Tells us the card type. Note: subtype is after a "."
                    // e.g. "featured-story.even"
                    if (DEBUG) console.log("ac181: full cardType", cardType);
                    this.cardType = cardType;
                    this.cardSubtype = null;
                    if (cardType) {
                        const pieces = cardType.split('.');
                        this.cardType = pieces[0];
                        this.cardSubtype = pieces.length >  1 ? pieces[1] : null;
                    }
                    if (DEBUG) console.log("set this.cardType", this.cardType);
                    if (DEBUG) console.log("set this.cardSubtype", this.cardSubtype);
                }
            },
        });

    })();
           </script>
           <!-- note that the story-card patch doesn't work for story-card outside of
    the adaptive card container... should probably be reviewed, the reason found 
    and perhaps pass in a prop to trigger the correct "mode".  For now, is a css rule patch. 
    PS: The problem with it encapsulation wise is it assume the class INSIDE the child component
    and so will break if that is refactored.  -->
           <style>
            .adaptive-story-card {
        display:flex;
        flex-direction: column;
    }

    .adaptive-story-card .story-card.item.explore-item {
        height:100%;
    }
           </style>
           <script id="vue-story-card-template" type="text/x-template">
            <div class="story-card item explore-item" v-bind:class="itemClasses()">
        <div v-if="showImage" class="poster-outer">
            <div class="poster dgov-card dgov-card-2" v-bind:class="{'video-wrap-container': isVideo}"
                 v-on:mouseover="hoverOn"
                 v-on:mouseleave="hoverOff">
                <a :href='articleUrlOrLink' :target="targetVal()" :title="articleAlt">
                    <img v-if="isVideo" src="/Portals/_default/Skins/DGOV2/Resources/img/play-default.png" class="defaultVideoOverlay">
                    <img v-if="isVideo" src="/Portals/_default/Skins/DGOV2/Resources/img/play-hover.png" class="hoverVideoOverlay">
                    <div v-bind:style="{ backgroundImage: 'url('+imageUrl+')' }">
                    </div>
                </a>
            </div>
            <card-edit-span :isEditMode="canEdit" :editUrl="editUrl" :imageUrl="editImage"></card-edit-span>
        </div>
        <div class="card-wrapper">
            <div class="dgov-card dgov-card-4 info card-info" v-bind:class="'info-'+articleId"
                 :data-url="articleUrlOrLink"
                 v-on:mouseover="hoverOn"
                 v-on:mouseleave="hoverOff">
                <span v-if="categoryLineOverride" class="content-type">
                    <a class="category" :href="termUrl"><span>{{categoryLineOverride}}</span></a>
                </span>
                <span v-else class="content-type">
                    <a class="content-type-text" :href="prettyContentTypeUrl"><span>{{prettyContentTypeName}}</span></a>
                    <span v-if="hasTermName()" class="separator">|</span>
                    <a v-if="hasTermName()" class="category"
                       :href="termUrl"><span>{{termName}}</span></a>
                </span>

                <div class="title-wrapper">
                    <a class="title" :href='articleUrlOrLink' :target="targetVal()">
                        <span v-if="isVideo" class="title-video sr-only">Video: </span>
                        {{articleTitle}}
                    </a><card-edit-span :isEditMode="canEdit" :editUrl="editUrl" :imageUrl="editImage"></card-edit-span>
                </div>
                <a class="play-link" :href="articleUrlOrLink">
                    <span class="fa"></span>
                </a>
                <div class="expander"></div>
                <div class="bar">
                    <time :data-dateago="publishDateJss" :data-dateap="publishDateAp">
                        {{publishDateAp}}
                    </time>

                    <div class="social">
                        <div class="addthis_toolbox addthis_default_style social-inner"
                             :addthis:url="articleUrlOrLinkAbsolute"
                             :addthis:title="articleTitle">
                            <a class="addthis_button_facebook social-link">
                                <span class="fa fa-facebook"></span>
                            </a>
                            <a class="addthis_button_twitter  social-link">
                                <span class="fa fa-twitter"></span>
                            </a>
                        </div>

                    </div>
                </div>
                <a class="btn-play btn btn-primary btn-full card-read-more-btn" :href="articleUrlOrLink">
                    <div class="revealer-text">
                        <span v-if="isVideo">Watch Now</span>
                        <span v-else>Read More</span>
                    </div>
                </a>
            </div>
        </div>
        <div style="clear:both"></div>
    </div>
           </script>
           <!--  here is a card-edit-span element... need to share this, but the vue component token is not a good way
    because it would be multiply imported every time it's used by a card.  It should be linked with "registerscript"
    -->
           <script id="vue-card-edit-span-template" type="text/x-template">
            <a title="Edit" v-if="isEditMode" class="card-edit-span" :href="editUrl" alt="edit link">
        <img title="Edit" :src="imageUrl" alt="edit pencil" />
    </a>
           </script>
           <script src="https://s7.addthis.com/js/250/addthis_widget.js#pubid=ra-55ccc85049045f9c" type="text/javascript">
            var addthis_config = {
        data_use_flash: false,
        data_use_cookies: false,
        ui_508_compliant: true
    }
           </script>
           <script type="text/javascript">
            (function () {
        const DEBUG = false;
        if (DEBUG) console.log("this is the story-card (default card) component");
        const tempSel = "";
        const tempUse = tempSel ? tempSel : "#vue-story-card-template";
        if (DEBUG) console.log("sc85:", tempSel, tempUse);
        const tempEl = $(tempUse)[0];
        if (DEBUG) console.log("sc87:", tempEl);
        // TODO: move this to shared .js utilizing vue:registerjs token
            const _contentTypeLib = {
                '1': {
                    url: "/Explore/News/",
                    name: "News",
                },
                '514': {
                    url: "/Explore/Spotlight/",
                    name: "Spotlight",
                },
                '515': {
                    url: "/Explore/Inside-DOD/",
                    name: "Inside DOD",
                },
                '700': {
                    // "Special Report"
                    url: "/Experience/",
                    name: "Experience",
                    videoName: "Video",
                },
                '800': {
                    url: "/Explore/Features/",
                    name: "Feature",
                    videoName: "Video",
                },
                '801': {
                    url: "/Engage/",
                    name: "Quiz",
                    videoName: "Quiz",
                },
                '808': {
                    url: "/Watch/",
                    name: "VideoCS",
                    prettyName: "Legacy Video",
                    videoName: "Legacy Video",
                },
                '809': {
                    url: "/Watch/",
                    name: "VideoCS2",
                    prettyName: "Video",
                    videoName: "Video",
                },
                //  for types > 800 (that are not above)
                custom: {
                    name: null, // means 'actual' contentTypeName
                    videoName: "Video",
                },
            };

        Vue.component('story-card', {
            name: 'story-card',
            data: function () {
                return {
                    templateSelector: "",
                    classes: [],
                    // readonly props
                    contentTypeLib: _contentTypeLib,
                    hover: false,
                    prettyContentTypeName: null,
                    prettyContentTypeUrl: null,
                };
            },
            props: [
                "article-alt",
                "article-id",
                "article-title",
                "article-url",
                "article-url-or-link",
                "article-url-or-link-absolute",
                "can-edit",
                "category-line-override",
                "content-type-val",
                "content-type-name",
                "edit-image",
                "edit-url",
                "has-terms",
                "image-caption",
                "image-url",
                "is-video",
                "open-in-new",
                "publish-date-jss",
                "publish-date-ap",
                "show-image",
                "term-url",
                "term-name",
            ],
            template: tempEl, // el that matches ID in template OR override passed in
            mounted: function () {
                if (false) console.log("props", this.showImage, JSON.stringify(this.$props, null, 4));
                this.prettyContentTypeName = this.constructPrettyContentTypeName();
                this.prettyContentTypeUrl
                    = this.contentTypeLib[this.contentTypeVal] ?
                        this.contentTypeLib[this.contentTypeVal].url : this.termUrl;

                if (DEBUG) console.log("sc155: mounted: content type:", this.prettyContentTypeVal, this.prettyContentTypeName, this.prettyContentTypeUrl)
            },
            methods: {
                addClass: function (newClass) {
                    this.classes.push(newClass);
                },
                constructPrettyContentTypeName: function () {
                    // NOTE: this is duplicated in story-card and you may have a
                    // change that applies there. Should be moved to shared space using vue:registerjs token
                    // TODO: moved to shared location (via vue:registerjs)

                    let prettyName = null;
                    const isVideo = this.isVideo;

                    // first check for specific entry in _contentTypeLib dictionary
                    if (isVideo) {
                        prettyName = this.contentTypeLib[this.contentTypeVal]
                            ? this.contentTypeLib[this.contentTypeVal].videoName : null;
                        if (!prettyName) {
                            // use name if videoName not set
                            prettyName = this.contentTypeLib[this.contentTypeVal]
                                ? this.contentTypeLib[this.contentTypeVal].name : null;
                        }
                    } else {
                        prettyName = this.contentTypeLib[this.contentTypeVal]
                            ? this.contentTypeLib[this.contentTypeVal].name : null;
                    }
                    // if still null, and type > 800 check in "custom" entry of contentTypeLib
                    const contentTypeNumber = parseInt(this.contentTypeVal);
                    if (prettyName == null && contentTypeNumber >= 800) {
                        if (isVideo) {
                            prettyName = this.contentTypeLib.custom
                                ? this.contentTypeLib.custom.videoName : null;
                        } else {
                            prettyName = this.contentTypeLib.custom
                                ? this.contentTypeLib.custom.name : null;
                        }
                    }
                    if (prettyName == null) prettyName = this.contentTypeName;
                    return prettyName;
                },

                hasTermName: function () {
                    if (this.termName && this.termName.length > 0) {
                        return true;
                    }
                    return false;
                },
                hoverOn: function () {
                    //if (DEBUG) console.log("i-c106: hover on");
                    // css :hover solution is not currently used... maybe tricky
                    // this approach is borrowed from the current non-vue way this is done
                    this.hover = true;
                },
                hoverOff: function () {
                    //if (DEBUG) console.log("ic-110: hover off");
                    this.hover = false;
                },
                itemClasses: function () {
                    // added classes (from outside, i.e. template or controller)
                    let classes = this.classes.join(' ');
                    // basic classes
                    classes += " item-" + this.articleId;
                    if (!this.showImage) {
                        classes += " no-image";
                    }
                    if (this.hover) {
                        classes += " hover";
                    }
                    return classes;
                },
                resetClass: function () {
                    this.classes = [];
                },
                setCardType: function (cardType) {
                    // we only do one card type so ignore.  This is an event from the layout
                    // for the adaptive-card.
                    if (DEBUG) console.log("s-c178: ignoring card type:", cardType);
                },
                targetVal: function () {
                    // openInNew being passed as string b/c reason
                    // reason: tag comes from server side rendering and might
                    // not be good Vue value, must allow this sort of prop to be a string
                    return this.openInNew == "true" ? "_blank" : "_self";
                },
            },
        });

        Vue.component('card-edit-span', {
            name: 'card-edit-span',
            template: "#vue-card-edit-span-template",
            props: ["editUrl", "imageUrl", "isEditMode"],
        });


    })();

function normalizeStoryCard() {

    const cardEls = $('.card-wrapper')
    const cards = cardEls.toArray();

    const maxh = cards.reduce(function (acc, item) {
        const height = $(item).height();
        if (height > acc) {
            return height;
        } else {
            return acc;
        }
    }, 0);
    console.log("height max", maxh);
    cardEls.height(maxh);
}
           </script>
           <style>
            /*  Refactoring note:

        These are rules are brought in from style.css to allow encapsulation.
        They were found using CSS Used to compare CSS in a page where the card
        worked, and also on a page where they were not (Explore Slider), and diffing
        the two.

        They were converted to not rely on "alist" class. This makes the card more
        encapsulated and enables using the card in other containers.  The process
        continues until the styles are well organized, succinct and at intentional locations.

        Specifically: Some of these rule probably duplicate selectors below, and some
        of the properties of these rule may be overwritten (the rules below are the more
        specific). This should be cleaned up at a future time when it's relevant to an
        improvement at that time. If you're reading this now, it could be time.
    */
    .story-card.item.explore-item {
        padding-bottom: 80px;
        position: relative;
    }

    .story-card.item.explore-item.hover .poster div {
        transform: scale(1.1);
    }

    .story-card.item.explore-item a.category,
    .story-card.item.explore-item a.category:link {
        margin-bottom: 10px;
        margin-top: 5px;
        color: #355e93;
        display: block;
        font-size: 20px;
    }

    .story-card.item.explore-item .content-type {
        float: left;
        margin-bottom: 10px;
        margin-top: 5px;
        display: block;
        font-size: 20px;
    }

    .story-card.item.explore-item .content-type a {
        font-size: 20px;
        color: #355e93;
    }

    .story-card.item.explore-item .poster {
        float: right;
        overflow: hidden;
        position: relative;
        border-radius: 4px;
        border: #adadad solid 1px;
        display: inline-block;
        width: 60%;
    }

    .story-card.item.explore-item .poster:after {
        padding-top: 66.66%;
        display: block;
        content: '';
    }

    .story-card.item.explore-item .poster div {
        position: absolute;
        top: -1px;
        bottom: -1px;
        right: 0;
        left: 0;
        width: 100%;
        height: auto;
        background-position: center;
        background-size: cover;
        background-repeat: no-repeat;
        transition: all .25s ease-out;
    }

    @media ( max-width: 767px) {
        .story-card.item.explore-item .poster-outer .poster {
            border: none;
            border-radius: 0px;
        }
    }

    .story-card.item.explore-item .info {
        z-index: 3;
        cursor: pointer;
        position: absolute;
        left: 14%;
        background: rgba(255, 255, 255, 0.9);
        width: 38%;
        padding: 20px 30px 30px;
        border-top: solid 8px #355D8E;
        border-radius: 3px;
        bottom: 120px;
        margin: 0 5px 0 5px;
    }

    .story-card.item.explore-item .info .bar {
        display: flex;
        justify-content: flex-start;
        padding-top: 30px;
        color: #717171;
        align-items: center;
    }

    .story-card.item.explore-item .info a.play-link {
        display: flex;
        align-items: center;
        justify-content: center;
        position: absolute;
        right: -33px;
        bottom: 30px;
        width: 66px;
        height: 66px;
        border-radius: 50%;
        background-color: #355D8E;
        color: #fff;
        font-size: 1.6rem;
        padding: 2px 0 0 4px;
    }

    .story-card.item.explore-item .info a.play-link:hover {
        text-decoration: none;
    }

    .story-card.item.explore-item .info a.play-link span:after {
        font-family: "Font Awesome 5 Free";
        content: '\f054';
    }

    .story-card.item.explore-item time {
        order: 3;
        padding-left: 36px;
        font-size: 18px;
        padding: 0 2rem;
    }

    .story-card.item.explore-item .info .social {
        order: 2;
    }

    @media ( max-width: 1200px) {
        .story-card.item.explore-item .info {
            width: 46%;
            left: 8%;
        }
    }

    @media ( max-width: 992px) {
        .story-card.item.explore-item {
            padding-bottom: 0;
        }

        .story-card.item.explore-item a.category {
            margin-bottom: 10px;
            font-size: 1.2rem;
        }

        .story-card.item.explore-item .card-info.info .title-wrapper a.title,
        .story-card.item.explore-item .title {
            font-size: 1.6rem;
            line-height: 35px;
        }

        .story-card.item.explore-item .info {
            position: relative;
            width: 90%;
            bottom: 80px;
            margin: 0 5px 0 5px;
            padding: 20px 24px 20px 24px;
            margin: 0 auto;
            left: 0;
        }

        .story-card.item.explore-item .info a.play-link {
            display: none;
            top: -35px;
            right: 30px;
            bottom: initial;
            width: 60px;
            height: 60px;
            font-size: 1.6rem;
        }

        .story-card.item.explore-item .info a.play-link span {
            padding: 0 0 0;
        }

        .story-card.item.explore-item .info .bar {
            justify-content: space-between;
            padding-top: 20px;
        }

        .story-card.item.explore-item .info time {
            order: 3;
            font-size: 1rem;
            padding-right: 0;
        }

        .story-card.item.explore-item .poster {
            text-align: center;
        }

        .story-card.item.explore-item .poster {
            width: 100%;
            float: none;
        }
    }

    @media ( max-width: 767px) {
        .story-card.item.explore-item a.category {
            font-size: 1.4rem;
        }

        .story-card.item.explore-item .info time {
            font-size: 1.2rem;
        }

        .story-card.item.explore-item .info a.play-link {
            font-size: 1.8rem;
        }
    }

    @media ( max-width: 550px) {
        .story-card.item.explore-item .info a.play-link {
            width: 50px;
            height: 50px;
            top: -30px;
        }

        .story-card.item.explore-item .info a.play-link {
            font-size: 1.6rem;
        }
    }

    /* -------
    | End of rules pulled from style.css contribution
     ------- */

    /* These clear/erase/correct Articles shared DGOV2 style.css
        To make entirely stand-alone, we would remove the shared classes
        such as ".alist.stories" and move their rules here or some
        other shared component.
    */

    .alist.stories .item.hover a.title {
        text-decoration: none;
    }

    .story-card.item.explore-item div.title-wrapper:hover {
        text-decoration: underline;
    }

    .alist.stories.breaking .story-card.item .info {
        border-color: #B33F46;
    }


    .story-card.item.explore-item {
        padding-bottom: 0;
        position: relative;
        display: flex;
        flex-direction: column;
    }

    /* edit pencil in image */
    .story-card.item.explore-item .card-edit-span {
        position: absolute;
        z-index: 9;
        top: 25px;
        right: 25px;
        bottom: auto;
        padding: .25em;
        line-height: 16px;
        background-color: rgba(255,255,255,.3);
        border-radius: 5px;
        border: solid rgba(0,0,0,0.4) 1px;
    }

    .story-card.item.explore-item .card-edit-span img {
        position: unset;
        left: auto;
    }

    /* this is the edit in the card, only show in listing mode */
    .story-card.item.explore-item .card-wrapper .card-edit-span {
        display: none;
    }

    .list .story-card.item.explore-item .card-wrapper .card-edit-span {
        display: block;
        top: 16px;
        right: 16px;
    }
    /* */

    .story-card.item.explore-item .info.card-info a.play-link {
        display: flex;
        top: -35px;
        right: 30px;
        bottom: initial;
        width: 60px;
        height: 60px;
        font-size: 1.6rem;
        left: auto;
        padding: 2px 0 0 4px;
    }

    .story-card.item.explore-item .info.card-info a.play-link span:after {
        content: '\f054';
    }

    /* This is for when in list mode (not card) where a Dashboard sets or clears
        the "list" class on .alist.stories.  Note: this violated encapsulation and
        should be moved into an event that the Dashboard could trigger or possible
        just move that functionality to the listing itself, or other possibility
        that doesn't violate encapsulation.
    */

    .alist.stories.list .story-card.item.explore-item {
        width: 100%;
    }

    .alist.stories.list .story-card.item.explore-item .poster-outer {
        display: none;
    }

    .alist.stories.list .story-card.item.explore-item .card-wrapper {
        /* This removes the trick played below for the overlayed info card */
        margin-bottom: 0;
    }

    .alist.stories.list .story-card.item.explore-item .card-wrapper .info {
        bottom: 0px;
        width:100%;
    }

    .alist.stories.list .story-card.item.explore-item .info.card-info a.play-link {
        display: none;
    }

    .alist.stories.list .story-card.item.explore-item .info.card-info .bar {
        justify-content: flex-start;
    }

    .alist.stories.list .story-card.item.explore-item .info.card-info time {
        padding-left: 50px;
    }

    /* End of "list"-mode rules */


    .story-card.item.explore-item .poster-outer .poster {
        border: none;
        border-radius: 4px;
        width: 100%;
        float: none;
        text-align: center;
        overflow: hidden;
        position: relative;
        display: inline-block;
    }

    .story-card.item.explore-item .card-wrapper {
        flex: 1;
        /* This balances out the bottom: 80px setting for .info inside
            this div, and end up with ~60px vertical spacing.
            I.e.: the .info div is lifted 80px, but .card-wrapper is sized
            the same as .info, but not raised.
        */
    }

    .story-card.item.explore-item .card-wrapper .info {
        position: relative;
        width: 90%;
        height: 100%;
        bottom: 62px;
        padding: 20px 24px 20px 24px;
        margin: 0 auto;
        left: 0;
        right: 0;
        z-index: 3;
        cursor: pointer;
        background: rgba(255, 255, 255, 0.9);
        border-top: solid 8px #355D8E;
        border-radius: 4px;
    }

    .story-card.item.explore-item.no-image {
        padding-bottom: 120px;
        position: relative;
    }

    .story-card.item.explore-item.no-image .card-wrapper .info {
        bottom: auto;
        top: 20px;
    }

    .story-card.item.explore-item .content-type {
        float: none;
        margin-bottom: 10px;
        margin-top: 0;
        display: inline-block;
        font-size: 20px;
    }


    .story-card.item.explore-item .content-type a {
        font-size: 20px;
        color: #355e93;
        display: inline-block;
    }

    .story-card.item.explore-item .content-type .separator {
         color: #355e93;
         float: none;
         border: none;
         margin: 0;
    }

    .story-card.item.explore-item a.category,
    .story-card.item.explore-item a.category:link {
        margin: 0;
        color: #355e93;
        display: inline-block;
        font-size: 20px;
        float: none;
        text-transform: none;
    }

    .story-card.item.explore-item a.title,
    .story-card.item.explore-item a.title:link {
        font-size: 1.4rem;
        line-height: 1.2em;
        font-weight: bold;
        color: #333;
        margin-bottom: 0;
    }

    .story-card.item.explore-item .info.card-info a.play-link span {
        padding: 0 0 0;
    }

    .story-card.item.explore-item .info.card-info  {
        display: flex;
        flex-direction: column;
    }

    .story-card.item.explore-item .info.card-info .expander {
        flex: 1;
    }

    .story-card.item.explore-item .info.card-info .bar {
        justify-content: space-between;
        padding-top: 20px;
        display: flex;
        color: #717171;
        align-items: center;
    }

    .story-card.item.explore-item .info.card-info time {
        /*font-size: 1.2rem;*/
        font-size: 16px;
        order: 3;
        padding-right: 0;
        padding-left: 0;
    }



    .story-card.item.explore-item .info.card-info .bar .social {
        order: 2;
    }

    .story-card.item.explore-item .info.card-info .bar .social .social-inner a {
        width: 35px;
        height: 35px;
        display: flex;
    }

    .story-card.item.explore-item .info.card-info .card-read-more-btn {
        display: none;
        /*visibility: hidden;*/
        margin-top: 20px;
        width: 100%;
    }

    .story-card.item.explore-item:hover .info.card-info . card-read-more-btn {
        /*  display: block;  <- can be used to show the READ MORE button, left if useful in the future */
        visibility: visible;
    }

    @media (max-width: 1200px) {
        .story-card.item.explore-item .info.card-info .bar .social .social-inner a {
            width: 35px;
            height: 35px;
        }
    }
    @media (max-width: 767px) {
        .story-card.item.explore-item .info.card-info .bar .social .social-inner a {
            width: 50px;
            height: 50px;
        }
    }

    .card-wrapper {
        transition: height ease-in 2s;
    }


    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
        /* IE10+ CSS styles go here */
        .story-card.item.explore-item {
            display: block;
        }
    }
           </style>
           <!--
    NOTE: This is a fork (copy) of the story-card component BEFORE the feature
    aspects are removed or otherwise altered. This probably shares a lot of
     potentially shared structure (subcomponents) with story-card.
     It certainly relies on some rules still in ArticleCS's DGOV2 styles.css.
  -->
           <script id="vue-featured-story-card-template" type="text/x-template">
            <div class="featured-story-card item explore-item" v-bind:class="itemClasses()">
        <div v-if="showImage" class="poster-outer">
            <div class="poster dgov-card dgov-card-2" 
                v-bind:class="{'video-wrap-container': isVideo}"
                v-on:mouseover="hoverOn"
                v-on:mouseleave="hoverOff" >
                <a :href='articleUrlOrLink' :target="targetVal()" :title="articleAlt">
                    <img v-if="isVideo" src="/Portals/_default/Skins/DGOV2/Resources/img/play-default.png" class="defaultVideoOverlay">
                    <img v-if="isVideo" src="/Portals/_default/Skins/DGOV2/Resources/img/play-hover.png" class="hoverVideoOverlay">
                    <div v-bind:style="{ backgroundImage: 'url('+imageUrl+')' }">
                    </div>
                </a>
            </div>
            <fsc-card-edit-span :isEditMode="canEdit" :editUrl="editUrl" :imageUrl="editImage"></fsc-card-edit-span>
        </div>
        <div class="card-wrapper">
            <div class="dgov-card dgov-card-4 info card-info" v-bind:class="'info-'+articleId" :data-url="articleUrlOrLink"
                 v-on:mouseover="hoverOn"
                 v-on:mouseleave="hoverOff" >

                <span v-if="categoryLineOverride" class="content-type">
                    <a class="category" :href="termUrl"><span>{{categoryLineOverride}}</span></a>
                </span>
                <span v-else class="content-type">
                    <a class="content-type-text" :href="prettyContentTypeUrl"><span>{{prettyContentTypeName}}</span></a>
                    <span v-if="hasTermName()" class="separator">|</span>
                    <a v-if="hasTermName()" class="category" :href="termUrl"><span>{{termName}}</span></a>
                </span>

                <div class="title-wrapper">
                    <a class="title" :href='articleUrlOrLink' :target="targetVal()">
                        <span v-if="isVideo" class="title-video sr-only">Video: </span>
                        {{articleTitle}}
                    </a>

                </div>
                <div class="summary-container">
                    <p class="summary">
                        <!-- template supports summary prop and summary slot -->
                        {{articleSummary}}
                        <slot name="summary"></slot>
                    </p>
                </div>
                <a class="play-link" :href="articleUrlOrLink">
                    <div class="revealer-text">
                        <span v-if="isVideo">Watch Now</span>
                        <span v-else>Read More</span>
                    </div>
                    <span class="fa"></span>
                </a>
                <!--<a class="btn-play btn btn-primary btn-full" :href="articleUrlOrLink">
        <div class="revealer-text">
            <span v-if="isVideo">Watch Now</span>
            <span v-else>Read More</span>
        </div>
    </a>-->
                <div class="bar">
                    <time :data-dateago="publishDateJss" :data-dateap="publishDateAp">
                        {{publishDateAp}}
                    </time>

                    <div class="social">
                        <div class="addthis_toolbox addthis_default_style social-inner"
                             :addthis:url="articleUrlOrLinkAbsolute"
                             :addthis:title="articleTitle">
                            <a class="addthis_button_facebook social-link">
                                <span class="fa fa-facebook"></span>
                            </a>
                            <a class="addthis_button_twitter  social-link">
                                <span class="fa fa-twitter"></span>
                            </a>
                        </div>

                    </div>
                </div>

                <!--<a class="btn-play-mini btn btn-primary btn-full" :href="articleUrlOrLink">
        <div class="revealer-text">
            Read More
        </div>
    </a>-->
            </div>
        </div>
        <div style="clear:both"></div>
    </div>
           </script>
           <!--  here is a card-edit-span element... need to share this, but the vue component token is not a good way    -->
           <script id="vue-fsc-card-edit-span-template" type="text/x-template">
            <a title="Edit" v-if="isEditMode" class="fsc-card-edit-span" :href="editUrl" alt="edit link">
        <img title="Edit" :src="imageUrl" alt="edit pencil" />
    </a>
           </script>
           <script src="https://s7.addthis.com/js/250/addthis_widget.js#pubid=ra-55ccc85049045f9c" type="text/javascript">
            var addthis_config = {
        data_use_flash: false,
        data_use_cookies: false,
        ui_508_compliant: true
    }
           </script>
           <script type="text/javascript">
            (function () {
        const DEBUG = false;
        if (DEBUG) console.log("this is the story-card (default card) component");
        const tempSel = "";
        const tempUse = tempSel ? tempSel : "#vue-featured-story-card-template";
        if (DEBUG) console.log("s-s13:", tempSel, tempUse);
        const tempEl = $(tempUse)[0];
        if (DEBUG) console.log("s-s15:", tempEl);

        const _contentTypeLib = {
            '1': {
                url: "/Explore/News/",
                name: "News",
                videoName: "News"
            },
            '514': {
                url: "/Explore/Spotlight/",
                name: "Spotlight",
            },
            '515': {
                url: "/Explore/Inside-DOD/",
                name: "Inside DOD",
            },
            '700': {
                // "Special Report"
                url: "/Experience/",
                name: "Experience",
                videoName: "Video",
            },
            '800': {
                url: "/Explore/Features/",
                name: "Feature",
                videoName: "Feature",
            },
            '801': {
                url: "/Engage/",
                name: "Quiz",
                videoName: "Quiz",
            },
            '808': {
                url: "/Watch/",
                name: "VideoCS",
                prettyName: "Legacy Video",
                videoName: "Legacy Video",
            },
            '809': {
                url: "/Watch/",
                name: "VideoCS2",
                prettyName: "Video",
                videoName: "Video",
            },
            //  for types > 800 (that are not above)
            custom: {
                name: null, // means 'actual' contentTypeName
                videoName: "Video",
            },
        };

        Vue.component('featured-story-card', {
            name: 'featured-story-card',
            data: function () {
                return {
                    templateSelector: "",
                    classes: [],
                    // readonly props
                    contentTypeLib: _contentTypeLib,
                    hover: false,
                    prettyContentTypeName: null,
                    prettyContentTypeUrl: null,
                };
            },
            props: [
                "article-alt",
                "article-id",
                "article-summary",
                "article-title",
                "article-url",
                "article-url-or-link",
                "article-url-or-link-absolute",
                "can-edit",
                "category-line-override",
                "card-type",
                "card-subtype",  
                "content-type-val",
                "content-type-name",
                "edit-image",
                "edit-url",
                "has-terms",
                "image-caption",
                "image-url",
                "is-video",
                "open-in-new",
                "publish-date-jss",
                "publish-date-ap",
                "show-image",
                "term-url",
                "term-name",
            ],
            template: tempEl, // el that matches ID in template OR override passed in
            mounted: function () {
                if (DEBUG) console.log("fc172: props", this.showImage, JSON.stringify(this.$props, null, 4));
                this.prettyContentTypeName = this.constructPrettyContentTypeName();
                
                this.prettyContentTypeUrl
                    = this.contentTypeLib[this.contentTypeVal] ?
                        this.contentTypeLib[this.contentTypeVal].url : null;

                if (DEBUG) console.log("sc155: mounted: content type:", this.prettyContentTypeVal, this.prettyContentTypeName, this.prettyContentTypeUrl)
            },
            methods: {
                addClass: function (newClass) {
                    this.classes.push(newClass);
                },
                constructPrettyContentTypeName: function() {
                    // NOTE: this is duplicated in story-card and you may have a 
                    // change that applies there. Should be moved to shared space using vue:registerjs token 
                    // TODO: moved to shared location (via vue:registerjs)
                    let prettyName = null;
                    const isVideo = this.isVideo;
                    
                    // first check for specific entry in _contentTypeLib dictionary
                    if (isVideo) {
                        prettyName = this.contentTypeLib[this.contentTypeVal]
                            ? this.contentTypeLib[this.contentTypeVal].videoName : null;
                        if (!prettyName) {
                            // use name if videoName not set
                            prettyName = this.contentTypeLib[this.contentTypeVal]
                                ? this.contentTypeLib[this.contentTypeVal].name : null;
                        }
                    } else {
                        prettyName = this.contentTypeLib[this.contentTypeVal]
                            ? this.contentTypeLib[this.contentTypeVal].name : null;
                    }
                    // if still null, and type > 800 check in "custom" entry of contentTypeLib
                    const contentTypeNumber = parseInt(this.contentTypeVal);
                    if (prettyName == null && contentTypeNumber >= 800) {
                        if (isVideo) {
                            prettyName = this.contentTypeLib.custom
                                ? this.contentTypeLib.custom.videoName : null;
                        } else {
                            prettyName = this.contentTypeLib.custom
                                ? this.contentTypeLib.custom.name : null;
                        }
                    }
                    if (prettyName == null) prettyName = this.contentTypeName;
                    return prettyName;
                },

                hasTermName: function () {
                    if (this.termName && this.termName.length > 0) {
                        return true;
                    }
                    return false;
                },
                hoverOn: function () {
                    //if (DEBUG) console.log("i-c106: hover on");
                    // css :hover solution is not currently used... maybe tricky
                    // this approach is borrowed from the current non-vue way this is done
                    this.hover = true;
                },
                hoverOff: function () {
                    //if (DEBUG) console.log("ic-110: hover off");
                    this.hover = false;
                },
                itemClasses: function () {
                    // added classes (from outside, i.e. template or controller)
                    if (DEBUG) console.log("fsc201: itemClasses", this.classes)
                    let classes = this.classes ? this.classes.join(' ') : "";
                    // basic classes
                    classes += " item-" + this.articleId;
                    if (!this.showImage) {
                        classes += " no-image";
                    }
                    if (this.hover) {
                        classes += " hover";
                    }
                    if (this.cardSubtype) {
                        classes = classes + " " + this.cardSubtype;
                    }
                    return classes;
                },
                resetClass: function () {
                    this.classes = [];
                },
                setCardType: function (cardType) {
                    // we only do one card type so ignore.  This is an event from the layout
                    // for the adaptive-card.
                    if (DEBUG) console.log("fcs208: ignoring card type:", cardType);
                },
                targetVal: function () {
                    // openInNew being passed as string b/c reason
                    // reason: tag comes from server side rendering and might
                    // not be good Vue value, must allow this sort of prop to be a string
                    return this.openInNew == "true" ? "_blank" : "_self";
                },
            },
        });

        Vue.component('fsc-card-edit-span', {
            name: 'fsc-card-edit-span', 
            template: "#vue-fsc-card-edit-span-template",
            props: ["editUrl", "imageUrl", "isEditMode"],
        });
    })();
           </script>
           <style>
            /* clear/erase/correct Articles shared DGOV2 style.css */

.alist.stories .item.hover a.title {
    text-decoration: none;
}

.featured-story-card.item.explore-item a.title:hover {
    text-decoration: underline;
}

.alist.stories.breaking .featured-story-card.item .info a.play-link,
.alist.stories.breaking .featured-story-card.item .info a.play-link:hover {
    background-color: #B33F46;
}
    

.fsc-card-edit-span  {
    position: absolute;
    z-index: 9;
    top: 25px;
    right: 25px;
    bottom: auto;
    padding: .25em;
    line-height: 16px;
    background-color: rgba(255,255,255,.3);
    border-radius: 5px;
    border: solid rgba(0,0,0,0.4) 1px;
}

.featured-story-card.item.explore-item .poster-outer .poster {
    width:60%;
    float:right;
}

.featured-story-card.item.explore-item .card-wrapper .info {
    width: 46%;
    left: 14%;
    bottom: 120px;
    position: absolute;
}

@media (max-width: 992px) {
    .featured-story-card.item.explore-item .card-wrapper .info {
        bottom: 50px;
        position: absolute;
    }
}

@media (max-width: 1300px) {
    .featured-story-card.item.explore-item .card-wrapper .info {
        width: 53%;
        left: 7%;
    }
}
@media (max-width: 1100px) {
    .featured-story-card.item.explore-item .card-wrapper .info {
        width: 60%;
        left: 0;
    }
}


.featured-story-card.item.explore-item .content-type {
    float: none;
    margin-bottom: 10px;
    margin-top: 0;
    display: inline-block;
    font-size: 20px;
}

.featured-story-card.item.explore-item .content-type a {
    font-size: 20px;
    color: #355e93;
}

.featured-story-card.item.explore-item .content-type .separator {
    color: #355e93;
    float: none;
    border: none;
    margin: 0;
}

.featured-story-card.item.explore-item a.category,
.featured-story-card.item.explore-item a.category:link {
    margin: 0;
    color: #355e93;
    display: inline-block;
    font-size: 20px;
    float: none;
}

.featured-story-card.item.explore-item a.title,
.featured-story-card.item.explore-item a.title:link {
    font-size: 1.6rem;
    line-height: 1.2em;
    font-weight: bold;
    color: #333;
    margin-bottom: 10px;
}

.featured-story-card.item.explore-item .summary {
    margin: 10px 0;
}

@media (min-width: 992px) and (max-width:1199px) {
    .featured-story-card.item.explore-item .summary {
        font-size: 18px;
    }
}


.featured-story-card.item.explore-item .info .bar {
    justify-content: flex-start;
}

@media (min-width: 992px) {
    .featured-story-card.item.explore-item .info .bar {
        padding-top: 35px;
    }
}


.featured-story-card.item.explore-item .info.card-info .bar .social .social-inner a {
    width: 35px;
    height: 35px;
}

.featured-story-card.item.explore-item .info.card-info a.play-link {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    right: -33px;
    top: auto;
    bottom: 30px;
    width: 66px;
    height: 66px;
    border-radius: 50%;
    background-color: #355D8E;
    color: #fff;
    font-size: 1.6rem;
    padding: 2px 0 0 4px;
}

.featured-story-card.item.explore-item .info.card-info a.play-link:hover {
    background-color: #254267;
}

.featured-story-card.item.explore-item .info time {
    padding: 0 30px;
}

/* Revealer text effect */

.featured-story-card.item.explore-item.hover .revealer-text {
    opacity: 1;
    width: 100%;
    transition: opacity .25s .25s;
}
.featured-story-card.item.explore-item.hover .play-link .fa {
    display: none;
}
.featured-story-card.item.explore-item.hover .info a.play-link span:after {
    display:none;
}

.featured-story-card.item.explore-item .info a.play-link {
    transition: width .25s , border-radius .25s;
}

.featured-story-card.item.explore-item.hover .info a.play-link {
    width: 200px;
    border-radius: 3px;
    transition: width .25s;
}
/*  end of revealer text effect */

.featured-story-card.item.explore-item .revealer-text {
    opacity: 0;
    width: 0%;
    text-align: center;
    font-size: 1rem;
    text-transform: uppercase;
    font-weight: 800;
}

/* modifiers for "even" card subtype */

.even.featured-story-card.item.explore-item .fsc-card-edit-span {
    right: auto;
    left: 25px;
}
.even.featured-story-card.item.explore-item .poster-outer .poster {
    float: left;
}

.even.featured-story-card.item.explore-item .card-wrapper .info {
    right: 14%;
    left: inherit;
}

@media (max-width: 1300px) {
    .even.featured-story-card.item.explore-item .card-wrapper .info {
        right: 7%;
    }
}

@media (max-width: 1100px) {
    .even.featured-story-card.item.explore-item .card-wrapper .info {
        right: 0;
    }
}

.even.featured-story-card.item.explore-item .info.card-info a.play-link {
    left: -33px;
    right: auto;
    padding: 2px 4px 0 0;
}

.even.featured-story-card.item.explore-item .info.card-info a.play-link span:after {
    content: '\f053';
}

.even.featured-story-card.item.explore-item .info time {
    order: 1;
}

.even.featured-story-card.item.explore-item .info .bar {
    justify-content: flex-end;
}
           </style>
           <!--
    This fragment compiles a Vue template located in a div with
    an id of "exploreSlider-2327".
-->
           <script type="text/javascript">
            (function () {
        const DEBUG = false;
        if (DEBUG) console.log("m-i2: vue:initialize:exploreSlider");
        document.addEventListener("DOMContentLoaded", function () {
            if (DEBUG) console.log("initializing vue on exploreSlider in module 2327")
            const elTarg = "#exploreSlider-2327";

            // supports sending in "data" and "methods" by naming convention
            let modData = {};
            let modMethods = {};
            const typeofModData = typeof(exploreSlider2327_data);
            const typeofModMethods = typeof(exploreSlider2327_methods);

            if (typeofModData != "undefined") {
                modData = exploreSlider2327_data;
            }
            if (typeofModMethods != "undefined") {
                modMethods = exploreSlider2327_methods;
            }
            const el = $(elTarg)[0];
            const moduleVue = new Vue({
                el: el,
                mounted: function () {
                    // call the callback if exists.
                    // naming vueToken_mounted_2327
                    if (DEBUG) console.log("cb?", typeof (vueToken_mounted_2327));
                    if (typeof (vueToken_mounted_2327) === "function" ) {
                        const mountedCB = vueToken_mounted_2327;
                        if (mountedCB) {
                            // currently no arguments, just a time event, e.g. when slick
                            // could be initialized.
                            this.$nextTick(mountedCB);
                        }
                    }
                },
                data: modData,
                methods: modMethods,
            });

        });
    })();
           </script>
          </div>
         </div>
        </div>
        <!-- End_Module_2327 -->
       </div>
      </div>
      <!--end of empty container -->
     </div>
    </div>
    <div id="content-pane-wrap3">
     <div class="content-wrap">
      <div class="DNNEmptyPane" id="dnn_ContentPane3">
      </div>
     </div>
    </div>
    <div id="dnn_ContentPaneFullBleed4">
     <div class="DnnModule DnnModule-DNN_HTML DnnModule-2328">
      <a name="2328">
      </a>
      <div class="empty-container base-container">
       <div id="dnn_ctr2328_ContentPane">
        <!-- Start_Module_2328 -->
        <div id="blog-roll">
         <div class="content-wrap">
          <h2 class="pull-title">
           Blogroll
          </h2>
          <div class="DNNModuleContent ModDNNHTMLC" id="dnn_ctr2328_ModuleContent">
           <div class="Normal" id="dnn_ctr2328_HtmlModule_lblContent">
            <div class="dgov-grid">
             <div class="dgov-col-md-4">
              <ul>
               <li>
                <a href="https://airman.dodlive.mil/" target="_blank">
                 Airman Online
                </a>
               </li>
               <li>
                <a href="https://www.army.mil/" target="_blank">
                 Army Live
                </a>
               </li>
               <li>
                <a href="https://www.arl.army.mil/" target="_blank">
                 Army Research Lab
                </a>
               </li>
               <li>
                <a href="https://compass.coastguard.blog/" target="_blank">
                 Coast Guard Compass
                </a>
               </li>
               <li>
                <a href="https://www.darpa.mil/" target="_blank">
                 DARPA
                </a>
               </li>
               <li>
                <a href="https://dvbic.dcoe.mil/" target="_blank">
                 Defense Centers of Excellence
                </a>
               </li>
              </ul>
             </div>
             <div class="dgov-col-md-4">
              <ul>
               <li>
                <a href="https://www.dodlive.mil/" target="_blank">
                 DOD Live
                </a>
               </li>
               <li>
                <a href="/Newsroom/" target="_blank">
                 DOD Social Media Hub
                </a>
               </li>
               <li>
                <a href="https://www.dvidshub.net/" target="_blank">
                 DVIDS
                </a>
               </li>
               <li>
                <a href="https://blog.epa.gov/2008/05/16/blog-my-ride/" target="_blank">
                 Greenversations
                </a>
               </li>
               <li>
                <a href="https://www.marines.mil/" target="_blank">
                 Marines
                </a>
               </li>
               <li>
                <a href="https://health.mil/News" target="_blank">
                 Military Health System
                </a>
               </li>
              </ul>
             </div>
             <div class="dgov-col-md-4">
              <ul>
               <li>
                <a href="https://www.nasa.gov/" target="_blank">
                 NASA
                </a>
               </li>
               <li>
                <a href="https://www.doncio.navy.mil/Main.aspx" target="_blank">
                 Navy CIO
                </a>
               </li>
               <li>
                <a href="https://www.nrl.navy.mil/" target="_blank">
                 Navy Research Labratory
                </a>
               </li>
               <li>
                <a href="https://www.onr.navy.mil/" target="_blank">
                 Office of Naval Research
                </a>
               </li>
               <!--<li><a href="" target="_blank">Science 360</a></li>-->
               <li>
                <a href="https://www.whitehouse.gov/ostp/" target="_blank">
                 White House Office of Science and Technology Policy
                </a>
               </li>
               <li>
                <a href="https://www.ai.mil/blog.html" target="_blank">
                 AI in Defense
                </a>
               </li>
              </ul>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
        <!-- End_Module_2328 -->
       </div>
      </div>
      <!--end of empty container -->
     </div>
    </div>
    <div id="content-pane-wrap4">
     <div class="content-wrap">
      <div class="DNNEmptyPane" id="dnn_ContentPane4">
      </div>
     </div>
    </div>
    <div class="DNNEmptyPane" id="dnn_ContentPaneFullBleed5">
    </div>
    <div id="content-pane-wrap5">
     <div class="content-wrap">
      <div class="DNNEmptyPane" id="dnn_ContentPane5">
      </div>
     </div>
    </div>
    <div class="DNNEmptyPane" id="dnn_ContentPaneFullBleed6">
    </div>
    <div id="content-pane-wrap6">
     <div class="content-wrap">
      <div class="DNNEmptyPane" id="dnn_ContentPane6">
      </div>
     </div>
    </div>
    <div class="DNNEmptyPane" id="dnn_ContentPaneFullBleed7">
    </div>
    <div id="content-pane-wrap7">
     <div class="content-wrap">
      <div class="DNNEmptyPane" id="dnn_ContentPane7">
      </div>
     </div>
    </div>
    <div class="DNNEmptyPane" id="dnn_ContentPaneFullBleed8">
    </div>
    <div id="content-pane-wrap8">
     <div class="content-wrap">
      <div class="DNNEmptyPane" id="dnn_ContentPane8">
      </div>
     </div>
    </div>
    <div class="DNNEmptyPane" id="dnn_ContentPaneFullBleed9">
    </div>
    <div id="content-pane-wrap9">
     <div class="content-wrap">
      <div class="DNNEmptyPane" id="dnn_ContentPane9">
      </div>
     </div>
    </div>
    <div class="DNNEmptyPane" id="dnn_ContentPaneFullBleed10">
    </div>
    <div id="content-pane-wrap10">
     <div class="content-wrap">
      <div class="DNNEmptyPane" id="dnn_ContentPane10">
      </div>
     </div>
    </div>
    <div class="DNNEmptyPane" id="dnn_ContentPaneFullBleed11">
    </div>
    <div id="content-pane-wrap11">
     <div class="content-wrap">
      <div class="DNNEmptyPane" id="dnn_ContentPane11">
      </div>
     </div>
    </div>
    <div class="DNNEmptyPane" id="dnn_ContentPaneFullBleed12">
    </div>
    <div id="content-pane-wrap12">
     <div class="content-wrap">
      <div class="DNNEmptyPane" id="dnn_ContentPane12">
      </div>
     </div>
    </div>
   </main>
   <div id="footer">
    <div class="footer-inner content-wrap content-wrap-wide">
     <div class="dgov-grid">
      <div class="dgov-col-auto">
       <div class="dgov-grid">
        <div class="footer-nav-col dgov-col-sm-12 dgov-col-md-auto" id="dnn_Footer_footerNavCol1">
         <h3>
          Defense.gov
          <i class="fas fa-chevron-down">
          </i>
         </h3>
         <ul class="footer-nav">
          <li class="">
           <a href="/" title="">
            <span class="text text-link-18">
             Home
            </span>
           </a>
          </li>
          <li class="">
           <a href="/Explore/Spotlight/Coronavirus/ " title="">
            <span class="text text-link-19">
             Coronavirus Update
            </span>
           </a>
          </li>
          <li class="">
           <a href="/Whats-New/" title="">
            <span class="text text-link-20">
             What's New
            </span>
           </a>
          </li>
          <li class="">
           <a href="/Our-Story/" title="">
            <span class="text text-link-21">
             Our Story
            </span>
           </a>
          </li>
          <li class="">
           <a href="/Newsroom/ " title="">
            <span class="text text-link-22">
             Newsroom
            </span>
           </a>
          </li>
         </ul>
        </div>
        <div class="footer-nav-col dgov-col-sm-12 dgov-col-md-auto" id="dnn_Footer_footerNavCol2">
         <h3>
          Helpful Links
          <i class="fas fa-chevron-down">
          </i>
         </h3>
         <ul class="footer-nav">
          <li class="">
           <a href="/Watch/Live-Events/" title="">
            <span class="text text-link-23">
             Live Events
            </span>
           </a>
          </li>
          <li class="">
           <a href="/Newsroom/Today-in-DOD/" title="">
            <span class="text text-link-24">
             Today in DOD
            </span>
           </a>
          </li>
          <li class="">
           <a href="/Newsroom/Contracts/" title="">
            <span class="text text-link-25">
             Contracts
            </span>
           </a>
          </li>
          <li class="">
           <a href="/Resources/For-the-Media/" title="">
            <span class="text text-link-26">
             For the Media
            </span>
           </a>
          </li>
          <li class="">
           <a href=" /Contact/ " title="">
            <span class="text text-link-27">
             Contact
            </span>
           </a>
          </li>
         </ul>
        </div>
        <div class="footer-nav-col dgov-col-sm-12 dgov-col-md-auto" id="dnn_Footer_footerNavCol3">
         <h3>
          Resources
          <i class="fas fa-chevron-down">
          </i>
         </h3>
         <ul class="footer-nav">
          <li class="">
           <a href="/Resources/ " title="">
            <span class="text text-link-28">
             DOD Resources
            </span>
           </a>
          </li>
          <li class="">
           <a href="/ask-us/listing/" title="">
            <span class="text text-link-29">
             Frequently Asked Questions
            </span>
           </a>
          </li>
          <li class="">
           <a href="/Resources/Military-Departments/" title="">
            <span class="text text-link-30">
             DOD / Military Websites
            </span>
           </a>
          </li>
          <li class="">
           <a href="/Resources/Insignia/" title="">
            <span class="text text-link-31">
             Insignia
            </span>
           </a>
          </li>
          <li class="">
           <a href="https://comptroller.defense.gov/ODCFO/afr/ " rel="noopener" target="_blank" title="">
            <span class="text text-link-32">
             FY20 Financial Report
            </span>
           </a>
          </li>
         </ul>
        </div>
        <div class="footer-nav-col dgov-col-sm-12 dgov-col-md-auto" id="dnn_Footer_footerNavCol4">
         <h3>
          Popular
          <i class="fas fa-chevron-down">
          </i>
         </h3>
         <ul class="footer-nav">
          <li class="">
           <a href="/Explore/Spotlight/Coronavirus/ " title="">
            <span class="text text-link-33">
             Coronavirus: DOD Response
            </span>
           </a>
          </li>
          <li class="">
           <a href="/Explore/Spotlight/DOD-Expeditionary-Civilian-Workforce/" title="">
            <span class="text text-link-34">
             DOD Expeditionary Civilian Workforce
            </span>
           </a>
          </li>
          <li class="">
           <a href="/Explore/Spotlight/Artificial-Intelligence/" title="Artificial Intelligence">
            <span class="text text-link-48">
             Artificial Intelligence
            </span>
           </a>
          </li>
          <li class="">
           <a href="/Explore/Spotlight/DOD-Space-Strategy/" title="">
            <span class="text text-link-36">
             DOD Space Strategy
            </span>
           </a>
          </li>
         </ul>
        </div>
       </div>
      </div>
      <div class="right-col dgov-col-md-12 dgov-col-lg-4">
       <div class="right-col-inner">
        <div class="mission">
         <img alt="U.S. DEPARTMENT OF DEFENSE logo" class="footer-logo" src="/portals/1/logo.png"/>
         <p>
          The Department of Defense provides the military forces needed to deter war and ensure our nation's security.
         </p>
        </div>
        <div class="footer-search-wrap">
         <label class="sr-only" for="footer-search-input">
          Enter Your Search Terms
         </label>
         <i class="fa fa-search" id="fa-search-icon-bottom">
         </i>
         <input id="footer-search-input" name="footer-search" placeholder="Search..." type="search"/>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <footer id="footer-main">
    <div class="utility-nav">
     <ul class="">
      <li class="">
       <a href="/Legal-Administrative/Privacy-Security/ " title="">
        <span class="text text-link-12">
         Privacy &amp; Security
        </span>
       </a>
      </li>
      <li class="">
       <a href="/Legal-Administrative/Links-Disclaimer/ " title="">
        <span class="text text-link-17">
         Links Disclaimer
        </span>
       </a>
      </li>
      <li class="">
       <a href="http://dodcio.defense.gov/DoDSection508/Std_Stmt.aspx" rel="noopener" target="_blank" title="">
        <span class="text text-link-13">
         Section 508
        </span>
       </a>
      </li>
      <li class="">
       <a href="http://dodcio.defense.gov/DoD-Web-Policy/ " rel="noopener" target="_blank" title="">
        <span class="text text-link-14">
         Web Policy
        </span>
       </a>
      </li>
      <li class="">
       <a href="http://www.esd.whs.mil/DD/plainlanguage/ " rel="noopener" target="_blank" title="">
        <span class="text text-link-37">
         Plain Writing Act
        </span>
       </a>
      </li>
      <li class="">
       <a href="http://www.dodig.mil/ " rel="noopener" target="_blank" title="">
        <span class="text text-link-38">
         DOD IG
        </span>
       </a>
      </li>
      <li class="">
       <a href="https://policy.defense.gov/OUSDP-Offices/Reporting-Civilian-Casualties/ " rel="noopener" target="_blank" title="">
        <span class="text text-link-39">
         Reporting Civilian Casualties
        </span>
       </a>
      </li>
      <li class="">
       <a href="http://prhome.defense.gov/NoFear/ " rel="noopener" target="_blank" title="">
        <span class="text text-link-40">
         No FEAR Act
        </span>
       </a>
      </li>
      <li class="">
       <a href="http://www.dimoc.mil/resources/limitations/ " rel="noopener" target="_blank" title="">
        <span class="text text-link-41">
         Imagery Use
        </span>
       </a>
      </li>
      <li class="">
       <a href="https://www.esd.whs.mil/FOID/ " rel="noopener" target="_blank" title="">
        <span class="text text-link-42">
         FOIA
        </span>
       </a>
      </li>
      <li class="">
       <a href="http://open.defense.gov/ " rel="noopener" target="_blank" title="">
        <span class="text text-link-43">
         Open GOV
        </span>
       </a>
      </li>
      <li class="">
       <a href="https://cmo.defense.gov/Publications/NDBOP.aspx " rel="noopener" target="_blank" title="">
        <span class="text text-link-44">
         Strategic Plan
        </span>
       </a>
      </li>
      <li class="">
       <a href="https://www.usa.gov/ " rel="noopener" target="_blank" title="">
        <span class="text text-link-45">
         USA.gov
        </span>
       </a>
      </li>
      <li class="">
       <a href="https://business.defense.gov/ " rel="noopener" target="_blank" title="">
        <span class="text text-link-46">
         Small Business Act
        </span>
       </a>
      </li>
      <li class="">
       <a href="/site-index/ " title="">
        <span class="text text-link-47">
         Site Map
        </span>
       </a>
      </li>
     </ul>
    </div>
    <div class="social-nav-subscribe-container">
     <div class="social-nav">
      <ul class="">
       <li class="">
        <a href="https://twitter.com/DeptofDefense" rel="noopener" target="_blank" title="Twitter">
         <span class="social-icon fa fa-twitter social-link-5">
         </span>
        </a>
       </li>
       <li class="">
        <a href="https://www.facebook.com/DeptofDefense" rel="noopener" target="_blank" title="Facebook">
         <span class="social-icon fa fa-facebook social-link-6">
         </span>
        </a>
       </li>
       <li class="">
        <a href="https://www.instagram.com/deptofdefense/" rel="noopener" target="_blank" title="Instagram">
         <span class="social-icon fa fa-instagram social-link-8">
         </span>
        </a>
       </li>
       <li class="">
        <a href="https://www.youtube.com/deptofdefense" rel="noopener" target="_blank" title="YouTube">
         <span class="social-icon fa fa-youtube social-link-7">
         </span>
        </a>
       </li>
      </ul>
     </div>
     <a class="subscribe-btn btn btn-sm btn-primary" href="https://public.govdelivery.com/accounts/usdod/subscriber/new" target="_blank">
      Subscribe
     </a>
    </div>
   </footer>
   <script type="text/javascript">
    var usasearch_config = {
        siteHandle: skinvars.aid,
        autoSubmitOnSelect: false,
    }

    window.onload = function () {
        document.getElementById("footer-search-input").value = "";
    }

    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src = "//search.usa.gov/javascripts/remote.loader.js";
    document.getElementsByTagName("head")[0].appendChild(script);

    (function ($) {
        $(function () {
            $('.footer-nav-col h3').click(function () {
                if (window.innerWidth > 991) return;
                $(this).parent('.footer-nav-col').toggleClass('active');
            });
        });
    })(jQuery);

    const queryInput = $("input[name=search-main],input[name=header-search], input[name=footer-search], i[id=fa-search-icon-bottom]").on("keyup", function (e) {
        if (e.keyCode == 13) {
            submitSearch($(this));
        }
    });

    $("input[name=search-main] ~ button, .search-icon, input[name=footer-search], input[name=footer-search] ~ button, i[id=fa-search-icon-bottom]").on("click", function (e) {
        e.stopImmediatePropagation();
        submitSearch($(this));
    });


    function submitSearch($this) {
        const query = $this ? ($this.val() || $this.parent().find('input').val()) : "";
        const affiliate = !!skinvars.aid ? skinvars.aid : 'defensegov';
        if (query.length > 1)
            window.location = "//search.usa.gov/search?query=" + query + "&affiliate=" + affiliate + "&utf8=%26%23x2713%3B";
    }
   </script>
   <input id="ScrollTop" name="ScrollTop" type="hidden"/>
   <input autocomplete="off" id="__dnnVariable" name="__dnnVariable" type="hidden" value="`{`__scdoff`:`1`,`sf_siteRoot`:`/`,`sf_tabId`:`421`}"/>
   <script src="/Desktopmodules/SharedLibrary/Plugins/Bootstrap/js/bootstrap.min.js?cdv=900" type="text/javascript">
   </script>
  </form>
  <!--CDF(Javascript|/js/dnncore.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Css|/Portals/1/Page-Assets/inside-dod/inside-dod.css?cdv=900|DnnPageHeaderProvider|100)-->
  <!--CDF(Javascript|/js/dnn.modalpopup.js?cdv=900|DnnBodyProvider|50)-->
  <!--CDF(Css|/Resources/Shared/stylesheets/dnndefault/7.0.0/default.css?cdv=900|DnnPageHeaderProvider|5)-->
  <!--CDF(Css|/Portals/_default/skins/dgov2/skin.css?cdv=900|DnnPageHeaderProvider|15)-->
  <!--CDF(Css|/Portals/_default/Containers/DGOV2/container.css?cdv=900|DnnPageHeaderProvider|25)-->
  <!--CDF(Css|/Portals/_default/Containers/DGOV2/container.css?cdv=900|DnnPageHeaderProvider|25)-->
  <!--CDF(Css|/DesktopModules/ArticleCSDashboard/module.css?cdv=900|DnnPageHeaderProvider|10)-->
  <!--CDF(Css|/DesktopModules/ArticleCSDashboard/module.css?cdv=900|DnnPageHeaderProvider|10)-->
  <!--CDF(Css|/Portals/_default/Containers/DGOV2/container.css?cdv=900|DnnPageHeaderProvider|25)-->
  <!--CDF(Css|/Portals/_default/Containers/DGOV2/container.css?cdv=900|DnnPageHeaderProvider|25)-->
  <!--CDF(Css|/DesktopModules/ArticleCSDashboard/module.css?cdv=900|DnnPageHeaderProvider|10)-->
  <!--CDF(Css|/DesktopModules/ArticleCSDashboard/module.css?cdv=900|DnnPageHeaderProvider|10)-->
  <!--CDF(Css|/Portals/_default/Containers/DGOV2/container.css?cdv=900|DnnPageHeaderProvider|25)-->
  <!--CDF(Css|/Portals/_default/Containers/DGOV2/container.css?cdv=900|DnnPageHeaderProvider|25)-->
  <!--CDF(Css|/DesktopModules/ArticleCSDashboard/module.css?cdv=900|DnnPageHeaderProvider|10)-->
  <!--CDF(Css|/DesktopModules/ArticleCSDashboard/module.css?cdv=900|DnnPageHeaderProvider|10)-->
  <!--CDF(Css|/Portals/_default/Containers/DGOV2/container.css?cdv=900|DnnPageHeaderProvider|25)-->
  <!--CDF(Css|/DesktopModules/ArticleCSDashboard/module.css?cdv=900|DnnPageHeaderProvider|10)-->
  <!--CDF(Css|/DesktopModules/ArticleCSDashboard/module.css?cdv=900|DnnPageHeaderProvider|10)-->
  <!--CDF(Css|/Portals/1/portal.css?cdv=900|DnnPageHeaderProvider|35)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/Skin/js/common.js?cdv=900|DnnBodyProvider|101)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/Mobile-Detect/mobile-detect.min.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Css|/Desktopmodules/SharedLibrary/Plugins/SocialIcons/css/fa-social-icons.css?cdv=900|DnnPageHeaderProvider|100)-->
  <!--CDF(Css|/Desktopmodules/SharedLibrary/Plugins/Skin/SkipNav/css/skipnav.css?cdv=900|DnnPageHeaderProvider|100)-->
  <!--CDF(Css|/desktopmodules/ArticleCS/styles/DefenseGOV2/style.css?cdv=900|DnnPageHeaderProvider|100)-->
  <!--CDF(Javascript|/DesktopModules/ArticleCS/Resources/ArticleCS/js/ArticleCS.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/moment/moment.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/moment/moment-timezone-with-data.js?cdv=900|DnnBodyProvider|101)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/image-set-polyfill/image-set-polyfill.js?cdv=900|DnnBodyProvider|101)-->
  <!--CDF(Css|/Desktopmodules/SharedLibrary/Plugins/ColorBox/colorbox.css?cdv=900|DnnPageHeaderProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/ColorBox/jquery.colorbox.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/vue/2.5.13/vue.min.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Css|/desktopmodules/ArticleCS/styles/DefenseGOV2/style.css?cdv=900|DnnPageHeaderProvider|100)-->
  <!--CDF(Javascript|/DesktopModules/ArticleCS/Resources/ArticleCS/js/ArticleCS.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/moment/moment.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/moment/moment-timezone-with-data.js?cdv=900|DnnBodyProvider|101)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/image-set-polyfill/image-set-polyfill.js?cdv=900|DnnBodyProvider|101)-->
  <!--CDF(Css|/Desktopmodules/SharedLibrary/Plugins/ColorBox/colorbox.css?cdv=900|DnnPageHeaderProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/ColorBox/jquery.colorbox.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/vue/2.5.13/vue.min.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Css|/desktopmodules/ArticleCS/styles/DefenseGOV2/style.css?cdv=900|DnnPageHeaderProvider|100)-->
  <!--CDF(Javascript|/DesktopModules/ArticleCS/Resources/ArticleCS/js/ArticleCS.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/moment/moment.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/moment/moment-timezone-with-data.js?cdv=900|DnnBodyProvider|101)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/image-set-polyfill/image-set-polyfill.js?cdv=900|DnnBodyProvider|101)-->
  <!--CDF(Css|/Desktopmodules/SharedLibrary/Plugins/ColorBox/colorbox.css?cdv=900|DnnPageHeaderProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/ColorBox/jquery.colorbox.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/vue/2.5.13/vue.min.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Css|/desktopmodules/ArticleCS/styles/DefenseGOV2/style.css?cdv=900|DnnPageHeaderProvider|100)-->
  <!--CDF(Javascript|/DesktopModules/ArticleCS/Resources/ArticleCS/js/ArticleCS.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/moment/moment.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/moment/moment-timezone-with-data.js?cdv=900|DnnBodyProvider|101)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/image-set-polyfill/image-set-polyfill.js?cdv=900|DnnBodyProvider|101)-->
  <!--CDF(Css|/Desktopmodules/SharedLibrary/Plugins/ColorBox/colorbox.css?cdv=900|DnnPageHeaderProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/ColorBox/jquery.colorbox.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/Slick/1.9.0/slick.min.js?cdv=900|DnnBodyProvider|10)-->
  <!--CDF(Css|/Desktopmodules/SharedLibrary/Plugins/Slick/1.9.0/slick.min.css?cdv=900|DnnPageHeaderProvider|10)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/vue/2.5.13/vue.min.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Javascript|/js/dnn.js?cdv=900|DnnBodyProvider|12)-->
  <!--CDF(Javascript|/js/dnn.servicesframework.js?cdv=900|DnnBodyProvider|100)-->
  <!--CDF(Javascript|/Desktopmodules/SharedLibrary/Plugins/Bootstrap/js/bootstrap.min.js?cdv=900|DnnFormBottomProvider|100)-->
  <!--CDF(Css|/Desktopmodules/SharedLibrary/Plugins/Bootstrap/css/bootstrap.min.css?cdv=900|DnnPageHeaderProvider|14)-->
  <!--CDF(Css|/Desktopmodules/SharedLibrary/Plugins/font-awesome5/css/all.min.css?cdv=900|DnnPageHeaderProvider|100)-->
  <!--CDF(Css|/Desktopmodules/SharedLibrary/Plugins/font-awesome5/css/v4-shims.min.css?cdv=900|DnnPageHeaderProvider|100)-->
  <!--CDF(Javascript|/Resources/libraries/jQuery/03_05_01/jquery.js?cdv=900|DnnPageHeaderProvider|5)-->
  <!--CDF(Javascript|/Resources/libraries/jQuery-Migrate/03_02_00/jquery-migrate.js?cdv=900|DnnPageHeaderProvider|6)-->
  <!--CDF(Javascript|/Resources/libraries/jQuery-UI/01_12_01/jquery-ui.js?cdv=900|DnnPageHeaderProvider|10)-->
 </body>
</html>
