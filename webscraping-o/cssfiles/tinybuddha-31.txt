.slick-slider a:focus {
  outline: none;
}
.slick-slider .slick-track {
  margin-left: 0 !important;
  margin-right: 0 !important;
}
.slick-slider .slick-slide:focus {
  outline: none !important;
}
.slick-slider .slick-prev,
.slick-slider .slick-next {
  z-index: 100;
  font-size: 0;
  line-height: 0;
  position: absolute;
  top: 50%;
  display: block;
  width: 20px;
  height: 20px;
  padding: 0;
  transform: translate(0, -50%);
  cursor: pointer;
  color: transparent;
  border: none;
  outline: none;
  background: transparent;
}
.slick-slider .slick-slider button:focus {
  position: absolute !important;
  top: 50%;
  background-color: transparent;
}
.slick-slider .slick-prev {
  left: -20px;
}
.slick-slider .slick-prev:before {
  content: '';
  background-color: black;
  display: block;
  color: white;
  padding: 5px;
  font-size: 13.33333333px;
  line-height: 13.33333333px;
  border-radius: 50%;
  width: 20px;
  height: 20px;
}
.slick-slider .card {
  display: block;
  position: relative;
  margin: 20px;
  padding: 10px;
  border-radius: 12px;
  border: 1px solid #707070;
  min-height: 300px;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  overflow: hidden;
}
.slick-slider .card .post-info {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  padding: 20px;
  min-height: 35%;
  background-color: #ffffff;
}
.slick-slider .card .post-info h2,
.slick-slider .card .post-info h3,
.slick-slider .card .post-info h4 {
  font-size: 16px;
  line-height: 1.2em;
  color: #707070;
}
@media only screen and (max-width: 480px) {
  .slick-slider .slick-prev {
    left: -10px;
  }
  .slick-slider .slick-next {
    right: -10px;
  }
}
.tinybuddha-hub-header {
  padding: 20px;
}
.tinybuddha-hub-header .card {
  display: block;
  border: 1px solid #707070;
  border-radius: 12px;
  overflow: hidden;
  padding: 20px;
}
.sublevel-term {
  padding: 0 20px;
}
.tinybuddha-hub-top {
  padding: 10px;
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
}
.tinybuddha-hub-top .hub-top-item {
  padding: 10px;
}
.tinybuddha-hub-top .hub-top-item .card {
  display: block;
  border: 1px solid #707070;
  border-radius: 12px;
  overflow: hidden;
}
.tinybuddha-hub-top .hub-top-item .card .image {
  width: 100%;
}
.tinybuddha-hub-top .hub-top-item .card .hub-info {
  display: block;
  background-color: #fff;
  color: #707070;
  padding: 20px;
}
section#tinybuddha-hub-more {
  background-color: #eee;
  padding: 25px;
  text-align: center;
}
section#tinybuddha-hub-more .copy {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-weight: 300;
  font-size: 22px;
  color: #6a6a6a;
  padding-right: 25px;
  padding-left: 25px;
}
section#tinybuddha-hub-more .copy a,
section#tinybuddha-hub-more .copy a:hover {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-weight: 300;
  font-size: 22px;
  color: #6a6a6a;
}
/* ========================================================================
   Component: Width
 ========================================================================== */
/* Equal child widths
 ========================================================================== */
[class*='tb-child-width'] &gt; * {
  box-sizing: border-box;
  width: 100%;
}
.tb-child-width-1-2 &gt; * {
  width: 50%;
}
.tb-child-width-1-3 &gt; * {
  width: calc(100% * 1 / 3.001);
}
.tb-child-width-1-4 &gt; * {
  width: 25%;
}
.tb-child-width-1-5 &gt; * {
  width: 20%;
}
.tb-child-width-1-6 &gt; * {
  width: calc(100% * 1 / 6.001);
}
.tb-child-width-auto &gt; * {
  width: auto;
}
/*
 * 1. Reset the `min-width`, which is set to auto by default, because
 *    flex items won't shrink below their minimum intrinsic content size.
 *    Using `1px` instead of `0`, so items still wrap into the next line,
 *    if they have zero width and padding and the predecessor is 100% wide.
 */
.tb-child-width-expand &gt; :not([class*='tb-width']) {
  flex: 1;
  /* 1 */
  min-width: 1px;
}
/* Phone landscape and bigger */
@media (min-width: 640px) {
  .tb-child-width-1-1\@s &gt; * {
    width: 100%;
  }
  .tb-child-width-1-2\@s &gt; * {
    width: 50%;
  }
  .tb-child-width-1-3\@s &gt; * {
    width: calc(100% * 1 / 3.001);
  }
  .tb-child-width-1-4\@s &gt; * {
    width: 25%;
  }
  .tb-child-width-1-5\@s &gt; * {
    width: 20%;
  }
  .tb-child-width-1-6\@s &gt; * {
    width: calc(100% * 1 / 6.001);
  }
  .tb-child-width-auto\@s &gt; * {
    width: auto;
  }
  .tb-child-width-expand\@s &gt; :not([class*='tb-width']) {
    flex: 1;
    min-width: 1px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .tb-child-width-1-1\@m &gt; * {
    width: 100%;
  }
  .tb-child-width-1-2\@m &gt; * {
    width: 50%;
  }
  .tb-child-width-1-3\@m &gt; * {
    width: calc(100% * 1 / 3.001);
  }
  .tb-child-width-1-4\@m &gt; * {
    width: 25%;
  }
  .tb-child-width-1-5\@m &gt; * {
    width: 20%;
  }
  .tb-child-width-1-6\@m &gt; * {
    width: calc(100% * 1 / 6.001);
  }
  .tb-child-width-auto\@m &gt; * {
    width: auto;
  }
  .tb-child-width-expand\@m &gt; :not([class*='tb-width']) {
    flex: 1;
    min-width: 1px;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .tb-child-width-1-1\@l &gt; * {
    width: 100%;
  }
  .tb-child-width-1-2\@l &gt; * {
    width: 50%;
  }
  .tb-child-width-1-3\@l &gt; * {
    width: calc(100% * 1 / 3.001);
  }
  .tb-child-width-1-4\@l &gt; * {
    width: 25%;
  }
  .tb-child-width-1-5\@l &gt; * {
    width: 20%;
  }
  .tb-child-width-1-6\@l &gt; * {
    width: calc(100% * 1 / 6.001);
  }
  .tb-child-width-auto\@l &gt; * {
    width: auto;
  }
  .tb-child-width-expand\@l &gt; :not([class*='tb-width']) {
    flex: 1;
    min-width: 1px;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  .tb-child-width-1-1\@xl &gt; * {
    width: 100%;
  }
  .tb-child-width-1-2\@xl &gt; * {
    width: 50%;
  }
  .tb-child-width-1-3\@xl &gt; * {
    width: calc(100% * 1 / 3.001);
  }
  .tb-child-width-1-4\@xl &gt; * {
    width: 25%;
  }
  .tb-child-width-1-5\@xl &gt; * {
    width: 20%;
  }
  .tb-child-width-1-6\@xl &gt; * {
    width: calc(100% * 1 / 6.001);
  }
  .tb-child-width-auto\@xl &gt; * {
    width: auto;
  }
  .tb-child-width-expand\@xl &gt; :not([class*='tb-width']) {
    flex: 1;
    min-width: 1px;
  }
}
/* Single Widths
 ========================================================================== */
/*
 * 1. `max-width` is needed for the pixel-based classes
 */
[class*='tb-width'] {
  box-sizing: border-box;
  width: 100%;
  /* 1 */
  max-width: 100%;
}
/* Halves */
.tb-width-1-2 {
  width: 50%;
}
/* Thirds */
.tb-width-1-3 {
  width: calc(100% * 1 / 3.001);
}
.tb-width-2-3 {
  width: calc(100% * 2 / 3.001);
}
/* Quarters */
.tb-width-1-4 {
  width: 25%;
}
.tb-width-3-4 {
  width: 75%;
}
/* Fifths */
.tb-width-1-5 {
  width: 20%;
}
.tb-width-2-5 {
  width: 40%;
}
.tb-width-3-5 {
  width: 60%;
}
.tb-width-4-5 {
  width: 80%;
}
/* Sixths */
.tb-width-1-6 {
  width: calc(100% * 1 / 6.001);
}
.tb-width-5-6 {
  width: calc(100% * 5 / 6.001);
}
/* Pixel */
.tb-width-small {
  width: 150px;
}
.tb-width-medium {
  width: 300px;
}
.tb-width-large {
  width: 450px;
}
.tb-width-xlarge {
  width: 600px;
}
.tb-width-2xlarge {
  width: 750px;
}
/* Auto */
.tb-width-auto {
  width: auto;
}
/* Expand */
.tb-width-expand {
  flex: 1;
  min-width: 1px;
}
/* Phone landscape and bigger */
@media (min-width: 640px) {
  /* Whole */
  .tb-width-1-1\@s {
    width: 100%;
  }
  /* Halves */
  .tb-width-1-2\@s {
    width: 50%;
  }
  /* Thirds */
  .tb-width-1-3\@s {
    width: calc(100% * 1 / 3.001);
  }
  .tb-width-2-3\@s {
    width: calc(100% * 2 / 3.001);
  }
  /* Quarters */
  .tb-width-1-4\@s {
    width: 25%;
  }
  .tb-width-3-4\@s {
    width: 75%;
  }
  /* Fifths */
  .tb-width-1-5\@s {
    width: 20%;
  }
  .tb-width-2-5\@s {
    width: 40%;
  }
  .tb-width-3-5\@s {
    width: 60%;
  }
  .tb-width-4-5\@s {
    width: 80%;
  }
  /* Sixths */
  .tb-width-1-6\@s {
    width: calc(100% * 1 / 6.001);
  }
  .tb-width-5-6\@s {
    width: calc(100% * 5 / 6.001);
  }
  /* Pixel */
  .tb-width-small\@s {
    width: 150px;
  }
  .tb-width-medium\@s {
    width: 300px;
  }
  .tb-width-large\@s {
    width: 450px;
  }
  .tb-width-xlarge\@s {
    width: 600px;
  }
  .tb-width-2xlarge\@s {
    width: 750px;
  }
  /* Auto */
  .tb-width-auto\@s {
    width: auto;
  }
  /* Expand */
  .tb-width-expand\@s {
    flex: 1;
    min-width: 1px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  /* Whole */
  .tb-width-1-1\@m {
    width: 100%;
  }
  /* Halves */
  .tb-width-1-2\@m {
    width: 50%;
  }
  /* Thirds */
  .tb-width-1-3\@m {
    width: calc(100% * 1 / 3.001);
  }
  .tb-width-2-3\@m {
    width: calc(100% * 2 / 3.001);
  }
  /* Quarters */
  .tb-width-1-4\@m {
    width: 25%;
  }
  .tb-width-3-4\@m {
    width: 75%;
  }
  /* Fifths */
  .tb-width-1-5\@m {
    width: 20%;
  }
  .tb-width-2-5\@m {
    width: 40%;
  }
  .tb-width-3-5\@m {
    width: 60%;
  }
  .tb-width-4-5\@m {
    width: 80%;
  }
  /* Sixths */
  .tb-width-1-6\@m {
    width: calc(100% * 1 / 6.001);
  }
  .tb-width-5-6\@m {
    width: calc(100% * 5 / 6.001);
  }
  /* Pixel */
  .tb-width-small\@m {
    width: 150px;
  }
  .tb-width-medium\@m {
    width: 300px;
  }
  .tb-width-large\@m {
    width: 450px;
  }
  .tb-width-xlarge\@m {
    width: 600px;
  }
  .tb-width-2xlarge\@m {
    width: 750px;
  }
  /* Auto */
  .tb-width-auto\@m {
    width: auto;
  }
  /* Expand */
  .tb-width-expand\@m {
    flex: 1;
    min-width: 1px;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  /* Whole */
  .tb-width-1-1\@l {
    width: 100%;
  }
  /* Halves */
  .tb-width-1-2\@l {
    width: 50%;
  }
  /* Thirds */
  .tb-width-1-3\@l {
    width: calc(100% * 1 / 3.001);
  }
  .tb-width-2-3\@l {
    width: calc(100% * 2 / 3.001);
  }
  /* Quarters */
  .tb-width-1-4\@l {
    width: 25%;
  }
  .tb-width-3-4\@l {
    width: 75%;
  }
  /* Fifths */
  .tb-width-1-5\@l {
    width: 20%;
  }
  .tb-width-2-5\@l {
    width: 40%;
  }
  .tb-width-3-5\@l {
    width: 60%;
  }
  .tb-width-4-5\@l {
    width: 80%;
  }
  /* Sixths */
  .tb-width-1-6\@l {
    width: calc(100% * 1 / 6.001);
  }
  .tb-width-5-6\@l {
    width: calc(100% * 5 / 6.001);
  }
  /* Pixel */
  .tb-width-small\@l {
    width: 150px;
  }
  .tb-width-medium\@l {
    width: 300px;
  }
  .tb-width-large\@l {
    width: 450px;
  }
  .tb-width-xlarge\@l {
    width: 600px;
  }
  .tb-width-2xlarge\@l {
    width: 750px;
  }
  /* Auto */
  .tb-width-auto\@l {
    width: auto;
  }
  /* Expand */
  .tb-width-expand\@l {
    flex: 1;
    min-width: 1px;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  /* Whole */
  .tb-width-1-1\@xl {
    width: 100%;
  }
  /* Halves */
  .tb-width-1-2\@xl {
    width: 50%;
  }
  /* Thirds */
  .tb-width-1-3\@xl {
    width: calc(100% * 1 / 3.001);
  }
  .tb-width-2-3\@xl {
    width: calc(100% * 2 / 3.001);
  }
  /* Quarters */
  .tb-width-1-4\@xl {
    width: 25%;
  }
  .tb-width-3-4\@xl {
    width: 75%;
  }
  /* Fifths */
  .tb-width-1-5\@xl {
    width: 20%;
  }
  .tb-width-2-5\@xl {
    width: 40%;
  }
  .tb-width-3-5\@xl {
    width: 60%;
  }
  .tb-width-4-5\@xl {
    width: 80%;
  }
  /* Sixths */
  .tb-width-1-6\@xl {
    width: calc(100% * 1 / 6.001);
  }
  .tb-width-5-6\@xl {
    width: calc(100% * 5 / 6.001);
  }
  /* Pixel */
  .tb-width-small\@xl {
    width: 150px;
  }
  .tb-width-medium\@xl {
    width: 300px;
  }
  .tb-width-large\@xl {
    width: 450px;
  }
  .tb-width-xlarge\@xl {
    width: 600px;
  }
  .tb-width-2xlarge\@xl {
    width: 750px;
  }
  /* Auto */
  .tb-width-auto\@xl {
    width: auto;
  }
  /* Expand */
  .tb-width-expand\@xl {
    flex: 1;
    min-width: 1px;
  }
}
/* Match child of a grid cell
 ========================================================================== */
/*
 * Behave like a block element
 * 1. Wrap into the next line
 * 2. Take the full width, at least 100%. Only if no class from the Width component is set.
 * 3. Expand width even if larger than 100%, e.g. because of negative margin (Needed for nested grids)
 */
.tb-grid-match &gt; *,
.tb-grid-item-match {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
}
.tb-grid-match &gt; * &gt; :not([class*='tb-width']),
.tb-grid-item-match &gt; :not([class*='tb-width']) {
  /* 2 */
  box-sizing: border-box;
  width: 100%;
  /* 3 */
  flex: auto;
}
