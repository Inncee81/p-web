<!DOCTYPE html>
<html>
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width" name="viewport"/>
  <title>
   请输入验证码 ws:10.36.0.8
  </title>
  <link href="/new_index.css" rel="stylesheet" type="text/css"/>
  <script src="/jquery-1.10.1.min.js" type="text/javascript">
  </script>
 </head>
 <body>
  <div class="pop">
   <p class="title">
    访问过于频繁，本次访问做以下验证码校验。（10.36.0.8）
   </p>
   <div class="main">
    <div class="code_img">
     <span>
      请在五分钟内完成验证
     </span>
    </div>
    <div class="code_num">
     <input class="btn_tj" id="btnSubmit" type="button" value="点击按钮进行验证"/>
    </div>
    <div class="toast_mess" id="errmsg">
    </div>
    <div id="ISDCaptcha">
    </div>
   </div>
  </div>
  <div class="footer">
   ©
   <a href="http://www.58.com">
    58.COM
   </a>
  </div>
  <input id="sessionId" type="hidden" value=""/>
  <input id="serialId" type="hidden" value="7993ecb444ea6a95328bc6f83d579f68_a92fa5507c1049089edb4c6cb06df315"/>
  <input id="code" type="hidden" value="100"/>
  <input id="sign" type="hidden" value="ae274134eb51dd29729a3eaac61e6b2f"/>
  <input id="url" type="hidden" value="https://g.58.com/j-gllosangeles/"/>
  <input id="namespace" type="hidden" value="huangye_global_pc"/>
  <input id="ip" type="hidden" value="10.36.0.8"/>
 </body>
 <script src="https://apps.bdimg.com/libs/jquery/1.9.1/jquery.js">
 </script>
 <!-- 引入 极验官方gt.js，使用其中提供的 initGeetest 初始化函数 -->
 <script src="https://static.geetest.com/static/tools/gt.js">
 </script>
 <script type="text/javascript">
  $(document).ready(function() {
	//统计pv
	pv();
	
	var namespace = $("#namespace").val();
	var uuid = $("#uuid").val();
	var url = $("#url").val();
	var verify_code = $("#verify_code").val();
	var ip = $("#ip").val();
	var serialId = $("#serialId").val();
	var code = $("#code").val();
	var sign =$("#sign").val();
	var status = 0;
	var userId = "";

    var handler = function (captchaObj) {
        captchaObj.onReady(function(){
            //验证码ready之后才能调用verify方法显示验证码
            $("#wait").hide();
        }).onSuccess(function(){
            //your code
            var result = captchaObj.getValidate();
            if (!result) {
                return alert('请完成验证');
            }
            respMessage = $.ajax({
                url : "/antibot/geetest/checkcode.do",
                data : {
                    namespace : namespace,
                    url : url,
                    serialId:serialId,
					status:status,
                    userId:userId,
                    geetest_challenge: result.geetest_challenge,
                    geetest_validate: result.geetest_validate,
                    geetest_seccode: result.geetest_seccode
                },
                type : "POST",
                async : true,
                success : function(results) {
                    var parsedJson = jQuery.parseJSON(results);
                    if (parsedJson.code === 0) {
                        var redLocation = parsedJson.msg;
                        if(redLocation.indexOf("http://")===-1 && redLocation.indexOf("https://")===-1){
                            redLocation = "http://"+redLocation;
                        }
                        window.location.href = redLocation;
                    } else {
                        $("#errmsg").html(parsedJson.msg);

                    }
                }
            });
        }).onError(function(){
            //your code
            $("#errmsg").html("加载验证码异常");
        });
        // 按钮提交事件
        btnSubmit.onclick = function(){
            // some code
            // 检测验证码是否ready, 验证码的onReady是否执行
            captchaObj.verify(); //显示验证码

        }
    };

	respMessage = $.ajax({
		url : "/antibot/geetest/register.do?t="+new Date().getTime(),
		data :{serialId:serialId,code:code,sign:sign,url:url,namespace:namespace},
		type : "POST",
		async : true,
		success : function(results) {
			var parsedJson = jQuery.parseJSON(results);
			if (parsedJson.code === 0 && parsedJson.data != null) {
                var dataJson = jQuery.parseJSON(parsedJson.data);
                // 调用 initGeetest 初始化参数
                // 参数1：配置参数
                // 参数2：回调，回调的第一个参数验证码对象，之后可以使用它调用相应的接口
                //btnSubmit.onclick = function () {
                status = dataJson.success;
                userId = parsedJson.msg;
				initGeetest({
					gt: dataJson.gt,
					challenge: dataJson.challenge,
					new_captcha: dataJson.new_captcha, // 用于宕机时表示是新验证码的宕机
					offline: !dataJson.success, // 表示用户后台检测极验服务器是否宕机，一般不需要关注
					product: "bind", // 产品形式，包括：float，popup
					width: "100%"
				}, handler);
                //}
			} else {
			    if(parsedJson.data == null){
                    $("#errmsg").html(parsedJson.msg);
				}else{
                    $("#errmsg").html(parsedJson.msg);
                    var reLocation = parsedJson.data;
                    if(reLocation.indexOf("http://")===-1 && reLocation.indexOf("https://")===-1){
                        reLocation = "http://"+reLocation;
                    }
                    setInterval(function(){
                        window.location.href = reLocation;
                        }, 5000);

				}

				
			}
		}
	});
	
	function pv () {  
	    var params = {};  
	    //Document对象数据  
	    if(document) {  
	        params.domain = document.domain || '';   
	        params.url = document.URL || '';   
	        params.title = document.title || '';   
	        params.referrer = document.referrer || '';   
	    }     
	    //Window对象数据  
	    if(window && window.screen) {  
	        params.sh = window.screen.height || 0;  
	        params.sw = window.screen.width || 0;  
	        params.cd = window.screen.colorDepth || 0;  
	    }     
	    //navigator对象数据  
	    if(navigator) {  
	        params.lang = navigator.language || '';   
	    }     
	   
	    // 其他参数  
	    var date = new Date();  
	    params.ltime = date.getTime() / 1000;  
	    //拼接参数串  
	    var args = '';   
	    for(var i in params) {  
	        if(args != '') {  
	            args += '&';  
	        }     
	        args += i + '=' + encodeURIComponent(params[i]);  
	    }     
	   
	    //通过Image对象请求后端脚本  
	    var img = new Image(1, 1);   
	    img.src = '/fwdata/load.gif?' + args;  
	}
});
 </script>
</html>